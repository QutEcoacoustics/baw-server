---
openapi: 3.0.1
info:
  title: Acoustic Workbench API
  version: v2
produces:
- application/json
consumes:
- application/json
paths:
  "/cms/{child_path}":
    get:
      summary: Retrieves the a child blob (rendered HTML)
      tags:
      - CMS
      parameters:
      - name: child_path
        in: path
        required: true
        schema:
          type: string
      security: 
      responses:
        '200':
          description: blob retrieved
          content:
            application/json:
              example:
                id: 2
                site_id: 1
                layout_id: 1
                parent_id: 1
                target_page_id: 
                label: Credits
                slug: credits
                full_path: "/credits"
                position: 0
                children_count: 0
                is_published: true
                created_at: '2020-01-02T03:04:05.677Z'
                updated_at: '2020-01-02T03:04:05.677Z'
                content: |-
                  <link href='/cms/cms-css/1/default/1577934245.css' media='screen' rel='stylesheet' type='text/css' />

                  <h1>Credits</h1>
                  <p>The development of this web application was an initiative of the
                  <a href="https://www.qut.edu.au/">Queensland University of Technologyâ€™s</a>
                  <a href="http://research.ecosounds.org/">Ecoacoustics Research Group</a>.
                  This website makes use of a range of other technologies and libraries.</p>

                  <p>More information can be found on the
                  <a href="https://github.com/QutEcoacoustics">QutEcoacoustics</a> Github project page.</p>

                  <h2 id="programs-and-libraries">Programs and libraries</h2>

                  <ul>
                    <li><a href="http://rubyonrails.org/">Ruby on Rails</a> (with a number of additional gems)</li>
                    <li><a href="https://github.com/resque/resque">Resque</a></li>
                    <li><a href="http://redis.io">Redis</a></li>
                    <li>Command line audio tools:</li>
                    <li><a href="http://www.ffmpeg.org/">ffmpeg</a> (for audio conversion and gathering audio file information)</li>
                    <li><a href="http://sox.sourceforge.net/">SoX</a> (to create spectrograms and resample audio)</li>
                    <li><a href="http://www.wavpack.com/">WavPack</a> (to expand compressed .wv files)</li>
                    <li><a href="http://mp3splt.sourceforge.net/mp3splt_page/home.php">mp3split</a> (for quickly segmenting large .mp3 files)</li>
                    <li><a href="https://angularjs.org/">AngularJS</a></li>
                    <li><a href="https://d3js.org/">D3.js</a></li>
                  </ul>

                  <h2 id="platforms-and-services">Platforms and services</h2>

                  <ul>
                    <li><a href="https://github.com">Github</a></li>
                    <li><a href="https://www.qriscloud.org.au/">QRISCloud</a></li>
                    <li><a href="https://https://nectar.org.au/">nectar</a></li>
                  </ul>


                  <script src='/cms/cms-js/1/default/1577934245.js' type='text/javascript'></script>
                children: []
              schema:
                "$ref": "#/components/schemas/cms_blob"
  "/cms":
    get:
      summary: Retrieves the index blob (rendered HTML)
      tags:
      - cms
      security: 
      parameters: []
      responses:
        '200':
          description: blob retrieved
          content:
            application/json:
              example:
                id: 11
                site_id: 3
                layout_id: 3
                parent_id: 
                target_page_id: 
                label: Home
                slug: index
                full_path: "/"
                position: 0
                children_count: 4
                is_published: true
                created_at: '2020-01-02T03:04:05.677Z'
                updated_at: '2020-01-02T03:04:05.677Z'
                content: |-
                  <link href='/cms/cms-css/3/default/1577934245.css' media='screen' rel='stylesheet' type='text/css' />

                  <h1></h1>
                  <p>Welcome! This is an Acoustic Workbench website. It is a repository of
                  environmental audio recordings.</p>


                  <script src='/cms/cms-js/3/default/1577934245.js' type='text/javascript'></script>
                children:
                - label: Credits
                  full_path: "/credits"
                - label: Data Upload
                  full_path: "/data_upload"
                - label: Ethics
                  full_path: "/ethics"
                - label: Privacy
                  full_path: "/privacy"
              schema:
                "$ref": "#/components/schemas/cms_blob"
  "/projects/{id}":
    patch:
      summary: update project
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  capabilities:
                    update_allow_audio_upload:
                      can: true
                      details: 
                    create_harvest:
                      can: false
                      details: This project does not allow uploading audio. Contact
                        the site administrator to request permission to upload audio.
                data:
                  id: 1
                  name: gen_project2
                  description: project description 2
                  creator_id: 3
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 2
                  allow_original_download: 
                  allow_audio_upload: false
                  license: CC-BY-4.0
                  site_ids:
                  - 1
                  region_ids:
                  - 1
                  owner_ids:
                  - 3
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 2</p>\n"
                  description_html_tagline: project description 2
                  access_level: owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/project"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/project"
    get:
      summary: show project
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  capabilities:
                    update_allow_audio_upload:
                      can: true
                      details: 
                    create_harvest:
                      can: true
                      details: 
                data:
                  id: 2
                  name: gen_project3
                  description: project description 3
                  creator_id: 8
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 3
                  allow_original_download: 
                  allow_audio_upload: true
                  license: CC-BY-4.0
                  site_ids:
                  - 2
                  region_ids:
                  - 2
                  owner_ids:
                  - 8
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 3</p>\n"
                  description_html_tagline: project description 3
                  access_level: owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/project"
    delete:
      summary: delete project
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    put:
      summary: update project
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  capabilities:
                    update_allow_audio_upload:
                      can: true
                      details: 
                    create_harvest:
                      can: false
                      details: This project does not allow uploading audio. Contact
                        the site administrator to request permission to upload audio.
                data:
                  id: 4
                  name: gen_project6
                  description: project description 6
                  creator_id: 16
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 6
                  allow_original_download: 
                  allow_audio_upload: false
                  license: CC-BY-4.0
                  site_ids:
                  - 4
                  region_ids:
                  - 4
                  owner_ids:
                  - 16
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 6</p>\n"
                  description_html_tagline: project description 6
                  access_level: owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/project"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/project"
  "/projects/filter":
    post:
      summary: filter project
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/projects/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                  capabilities:
                    update_allow_audio_upload:
                      can: 
                      details: 
                    create_harvest:
                      can: 
                      details: This project does not allow uploading audio. Contact
                        the site administrator to request permission to upload audio.
                data:
                - id: 5
                  name: gen_project7
                  description: project description 7
                  creator_id: 21
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 7
                  allow_original_download: 
                  allow_audio_upload: true
                  license: CC-BY-4.0
                  site_ids:
                  - 5
                  region_ids:
                  - 5
                  owner_ids:
                  - 21
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 7</p>\n"
                  description_html_tagline: project description 7
                  access_level: owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/project"
  "/projects":
    get:
      summary: list projects
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/projects?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                  capabilities:
                    update_allow_audio_upload:
                      can: 
                      details: 
                    create_harvest:
                      can: 
                      details: This project does not allow uploading audio. Contact
                        the site administrator to request permission to upload audio.
                data:
                - id: 6
                  name: gen_project8
                  description: project description 8
                  creator_id: 25
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 8
                  allow_original_download: 
                  allow_audio_upload: true
                  license: CC-BY-4.0
                  site_ids:
                  - 6
                  region_ids:
                  - 6
                  owner_ids:
                  - 25
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 8</p>\n"
                  description_html_tagline: project description 8
                  access_level: owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/project"
    post:
      summary: create project
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                  capabilities:
                    update_allow_audio_upload:
                      can: true
                      details: 
                    create_harvest:
                      can: false
                      details: This project does not allow uploading audio. Contact
                        the site administrator to request permission to upload audio.
                data:
                  id: 8
                  name: gen_project10
                  description: project description 10
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 10
                  allow_original_download: 
                  allow_audio_upload: false
                  license: CC-BY-4.0
                  site_ids: []
                  region_ids: []
                  owner_ids:
                  - 1
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 10</p>\n"
                  description_html_tagline: project description 10
                  access_level: owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/project"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/project"
  "/projects/new":
    get:
      summary: new project
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
                  allow_original_download: 
                  notes: 
  "/projects/{project_id}/permissions":
    get:
      summary: list permissions
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - permissions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 3
                    max_page: 1
                    current: http://web:3000/projects/10/permissions?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 26
                  project_id: 10
                  user_id: 38
                  level: owner
                  allow_anonymous: false
                  allow_logged_in: false
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                - id: 27
                  project_id: 10
                  user_id: 39
                  level: writer
                  allow_anonymous: false
                  allow_logged_in: false
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 38
                - id: 28
                  project_id: 10
                  user_id: 40
                  level: reader
                  allow_anonymous: false
                  allow_logged_in: false
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 38
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/permission"
    post:
      summary: create permission
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - permissions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 33
                  project_id: 11
                  user_id: 46
                  level: reader
                  allow_anonymous: false
                  allow_logged_in: false
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/permission"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/permission"
  "/projects/{project_id}/permissions/new":
    get:
      summary: new permission
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - permissions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  project_id: 
                  user_id: 
                  level: 
                  allow_anonymous: false
                  allow_logged_in: false
  "/projects/{project_id}/permissions/{id}":
    get:
      summary: show permission
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - permissions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 39
                  project_id: 14
                  user_id: 55
                  level: reader
                  allow_anonymous: false
                  allow_logged_in: false
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 53
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/permission"
    put:
      summary: update permission
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - permissions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 42
                  project_id: 16
                  user_id: 61
                  level: reader
                  allow_anonymous: false
                  allow_logged_in: false
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 57
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/permission"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/permission"
    patch:
      summary: update permission
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - permissions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 46
                  project_id: 18
                  user_id: 68
                  level: reader
                  allow_anonymous: false
                  allow_logged_in: false
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 64
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/permission"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/permission"
    delete:
      summary: delete permission
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - permissions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/projects/{project_id}/permissions/filter":
    post:
      summary: filter permission
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - permissions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 3
                    max_page: 1
                    current: http://web:3000/projects/20/permissions/filter?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 51
                  project_id: 20
                  user_id: 75
                  level: owner
                  allow_anonymous: false
                  allow_logged_in: false
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                - id: 52
                  project_id: 20
                  user_id: 76
                  level: writer
                  allow_anonymous: false
                  allow_logged_in: false
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 75
                - id: 53
                  project_id: 20
                  user_id: 77
                  level: reader
                  allow_anonymous: false
                  allow_logged_in: false
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 75
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/permission"
  "/scripts":
    get:
      summary: list scripts
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - scripts
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/scripts?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 17
                  group_id: 17
                  name: script name 17
                  description: script description 17
                  analysis_identifier: script_name_17
                  executable_settings: executable settings 17
                  executable_settings_media_type: text/plain
                  version: 17
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  is_last_version: true
                  is_first_version: true
                  event_import_glob: "*.csv"
                  provenance_id: 17
                  description_html: "<p>script description 17</p>\n"
                  description_html_tagline: script description 17
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/script"
  "/scripts/{id}":
    get:
      summary: show script
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - scripts
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 18
                  group_id: 18
                  name: script name 18
                  description: script description 18
                  analysis_identifier: script_name_18
                  executable_settings: executable settings 18
                  executable_settings_media_type: text/plain
                  version: 18
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  is_last_version: true
                  is_first_version: true
                  event_import_glob: "*.csv"
                  provenance_id: 18
                  description_html: "<p>script description 18</p>\n"
                  description_html_tagline: script description 18
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/script"
  "/scripts/filter":
    post:
      summary: filter script
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - scripts
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/scripts/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 19
                  group_id: 19
                  name: script name 19
                  description: script description 19
                  analysis_identifier: script_name_19
                  executable_settings: executable settings 19
                  executable_settings_media_type: text/plain
                  version: 19
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  is_last_version: true
                  is_first_version: true
                  event_import_glob: "*.csv"
                  provenance_id: 19
                  description_html: "<p>script description 19</p>\n"
                  description_html_tagline: script description 19
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/script"
  "/audio_recordings/{id}/original":
    get:
      summary: Downloads an original audio file
      tags:
      - media
      - audio_recordings
      - audio_recordings
      - audio_recordings
      parameters:
      - name: id
        in: path
        description: ID of the audio recording
        required: true
        schema:
          type: string
      security:
      - auth_token_header: []
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                meta:
                  status: 401
                  message: Unauthorized
                  error:
                    details: You need to log in or register before continuing.
                    links:
                      Log in: "/my_account/sign_in"
                      Register: "/my_account/sign_up"
                    info: 
                data: 
        '200':
          description: original audio file
    head:
      summary: Gets HTTP headers for an original audio file
      tags:
      - media
      - audio_recordings
      - audio_recordings
      - audio_recordings
      parameters:
      - name: id
        in: path
        description: ID of the audio recording
        required: true
        schema:
          type: string
      security:
      - auth_token_header: []
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: original audio file
        '404':
          description: not found
        '401':
          description: unauthorized
          content:
            application/json:
              example: 
  "/audio_recordings/downloader":
    post:
      summary: Gets a templated script which can download original audio files. Accepts
        an audio recordings filter object
      tags:
      - downloader
      - audio_recordings
      consumes: 
      security:
      - auth_token_header: []
      parameters: []
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: templated script
          content:
            text/plain:
              example: |
                #!/usr/bin/env pwsh

                # Requires -Version 7
                <#

                .DESCRIPTION

                  Downloads a set of recordings from an acoustic workbench.
                  Will work on Windows, Linux, or MacOSX with PowerShell Core.
                  See https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.1
                  for installation instructions.

                  Version 12.6.1 from http://web:3000.

                .EXAMPLE

                On Windows:

                PS> ./download_audio_files.ps1

                .EXAMPLE

                On Linux/MacOSX:

                $ chmod +x download_audio_files.ps1
                $ ./download_audio_files.ps1

                #>

                param(
                  # Where to download the recordings. Defaults to the present working directory if not specified.
                  $target = $null,
                    # The auth token to use to login to the workbench. You only need to supply an auth token if you want to log in without a password.
                  $auth_token = $null,
                  # The username to use to login to the workbench. This value's default value is templated when the script is generated. This is not needed if you use an auth_token.
                  $user_name = $null,
                  # The poassword to use to login to the workbench. This is not needed if you use an auth_token.
                  $password = $null,

                  # The filter to use to select audio recordings to download. This value's default value is templated when the script is generated.
                  # See https://github.com/QutEcoacoustics/baw-server/wiki/API:-Filtering for details on valid filters. This argument
                  # should be a valid JSON encoded string.
                  $filter = $null,
                  # The acoustic workbench instance to use. This value's default value is templated when the script is generated.
                  $workbench_url = $null
                )

                $InformationPreference = 'Continue'
                $ErrorActionPreference = 'Stop'
                # https://github.com/PowerShell/PowerShell/issues/14348
                $ProgressPreference = 'SilentlyContinue'

                Write-Information "Acoustic Workbench downloader script version 12.6.1"

                if ($null -eq $target) {
                  $target = $pwd
                }

                # templated values from script generation
                if ($null -eq $auth_token) {
                  if ($null -eq $user_name) {
                    $user_name = "Admin"
                    if (-not $user_name) {
                      Write-Error "user_name is required"
                      exit 1
                    }
                  }
                  Write-Information "User name: $user_name"
                }
                else {
                  Write-Information "Using supplied auth token $auth_token"
                }

                if ($null -eq $filter) {
                  $filter = @'
                {"sorting":{"order_by":"recorded_date","direction":"desc"},"paging":{"items":25},"projection":{"include":["id","recorded_date","sites.name","site_id","canonical_file_name"]}}
                '@
                }
                Write-Information "Filter: $filter"

                if ($null -eq $workbench_url) {
                  $workbench_url = "http://web:3000"
                }
                Write-Information "Workbench URL: $workbench_url"

                # end templated values


                # log in
                $headers = @{}

                if ($null -eq $auth_token) {
                  if ($user_name -and $password) {
                    $User = $user_name
                    $PWord = ConvertTo-SecureString -String $password -AsPlainText -Force
                    $credentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $PWord
                  }
                  else {
                    $credentials = Get-Credential -Message "Provide credentials for logging into $workbench_url" -UserName $user_name
                  }


                  $json_credentials = $credentials.GetNetworkCredential() | ForEach-Object{
                      if ($_.UserName -like '*@*') {
                        @{"email"=$_.UserName;"password"=$_.Password}
                      }
                      else {
                        @{"login"=$_.UserName;"password"=$_.Password}
                      }
                  }

                  Write-Information "Logging in to workbench $workbench"


                    $auth_reponse = Invoke-WebRequest -Uri "$workbench_url/security" -Method POST -Body $json_credentials -Headers $headers -SkipHttpErrorCheck
                    if ($auth_reponse.BaseResponse.IsSuccessStatusCode) {
                      $auth_token = ($auth_reponse.Content | ConvertFrom-Json).data.auth_token
                    }
                    else {
                      Write-Error ("Login attempt failed ($($auth_reponse.StatusCode)) " + $auth_reponse.Content)
                      exit 1
                    }

                }
                else {
                  # we have auth token, nothing else to do?
                }
                $headers["Authorization"] = "Token token=`"$auth_token`""

                $json_headers = $headers.Clone()
                $json_headers["Content-Type"] = "application/json"
                $json_headers["Accept"] = "application/json"

                Write-Information "Downloading recordings"

                # start paging through results!
                $script:current_page = 0
                $script:max_page = $null
                function Get-NextPage() {
                  $script:current_page += 1
                  if (($null -ne $script:max_page) -and ($script:current_page -gt $script:max_page)) {
                    Write-Information "Reached end of pages"
                    return $null
                  }

                  Write-Information "Getting page $script:current_page"

                  $response = Invoke-RestMethod -Uri "$workbench_url/audio_recordings/filter?page=$script:current_page" `
                    -Method POST -Body $filter -Headers $json_headers -SkipHttpErrorCheck -StatusCodeVariable "status_code"

                  if ($status_code -ne 200) {
                    Write-Error ("Failed to get recordings ($status_code): ")
                    $response | Format-List | out-string | Write-Error
                    exit 1
                  }

                  $script:max_page = $response.meta.paging.max_page

                  Write-Information "Got page $script:current_page of $script:max_page, $($response.data.Count) recordings in this page."

                  return $response.data
                }

                $sites = @{}
                function Get-SiteName($raw_name) {
                  if ($sites.ContainsKey($raw_name)) {
                    return $sites[$raw_name]
                  }

                  # Safe folder names
                  $name = $raw_name -replace '[^-_A-Za-z0-9]',''
                  $sites[$raw_name] = $name
                  return $name
                }

                # make output directory
                New-Item -ItemType Directory -Path $target -Force | Out-Null

                while ($null -ne ($recordings = Get-NextPage )) {
                  foreach($recording in $recordings) {
                    Write-Information "Downloading recording $($recording.id)"
                    $recording | write-output

                    $audio_recording_id = $recording.id
                    $site_id = $recording.site_id
                    $name = $recording.canonical_file_name

                    $safe_site_name = Get-SiteName $recording.'sites.name'

                    $sub_folder = Join-Path $target "${site_id}_$safe_site_name"
                    New-Item -ItemType Directory -Path $sub_folder -Force | Out-Null

                    $path = Join-Path $sub_folder $name

                    Invoke-RestMethod -Uri "$workbench_url/audio_recordings/$audio_recording_id/original" `
                      -Method GET -Headers $headers -StatusCodeVariable "download_status_code" -OutFile $path

                    Write-Information "Downloaded recording $audio_recording_id to $path"
                  }
                }

                Write-Information "Done!"
    get:
      summary: Gets a templated script which can download original audio files
      tags:
      - downloader
      - audio_recordings
      security:
      - auth_token_header: []
      parameters: []
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: templated script
          content:
            text/plain:
              example: |
                #!/usr/bin/env pwsh

                # Requires -Version 7
                <#

                .DESCRIPTION

                  Downloads a set of recordings from an acoustic workbench.
                  Will work on Windows, Linux, or MacOSX with PowerShell Core.
                  See https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.1
                  for installation instructions.

                  Version 12.6.1 from http://web:3000.

                .EXAMPLE

                On Windows:

                PS> ./download_audio_files.ps1

                .EXAMPLE

                On Linux/MacOSX:

                $ chmod +x download_audio_files.ps1
                $ ./download_audio_files.ps1

                #>

                param(
                  # Where to download the recordings. Defaults to the present working directory if not specified.
                  $target = $null,
                    # The auth token to use to login to the workbench. You only need to supply an auth token if you want to log in without a password.
                  $auth_token = $null,
                  # The username to use to login to the workbench. This value's default value is templated when the script is generated. This is not needed if you use an auth_token.
                  $user_name = $null,
                  # The poassword to use to login to the workbench. This is not needed if you use an auth_token.
                  $password = $null,

                  # The filter to use to select audio recordings to download. This value's default value is templated when the script is generated.
                  # See https://github.com/QutEcoacoustics/baw-server/wiki/API:-Filtering for details on valid filters. This argument
                  # should be a valid JSON encoded string.
                  $filter = $null,
                  # The acoustic workbench instance to use. This value's default value is templated when the script is generated.
                  $workbench_url = $null
                )

                $InformationPreference = 'Continue'
                $ErrorActionPreference = 'Stop'
                # https://github.com/PowerShell/PowerShell/issues/14348
                $ProgressPreference = 'SilentlyContinue'

                Write-Information "Acoustic Workbench downloader script version 12.6.1"

                if ($null -eq $target) {
                  $target = $pwd
                }

                # templated values from script generation
                if ($null -eq $auth_token) {
                  if ($null -eq $user_name) {
                    $user_name = "Admin"
                    if (-not $user_name) {
                      Write-Error "user_name is required"
                      exit 1
                    }
                  }
                  Write-Information "User name: $user_name"
                }
                else {
                  Write-Information "Using supplied auth token $auth_token"
                }

                if ($null -eq $filter) {
                  $filter = @'
                {"sorting":{"order_by":"recorded_date","direction":"desc"},"paging":{"items":25},"projection":{"include":["id","recorded_date","sites.name","site_id","canonical_file_name"]}}
                '@
                }
                Write-Information "Filter: $filter"

                if ($null -eq $workbench_url) {
                  $workbench_url = "http://web:3000"
                }
                Write-Information "Workbench URL: $workbench_url"

                # end templated values


                # log in
                $headers = @{}

                if ($null -eq $auth_token) {
                  if ($user_name -and $password) {
                    $User = $user_name
                    $PWord = ConvertTo-SecureString -String $password -AsPlainText -Force
                    $credentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $PWord
                  }
                  else {
                    $credentials = Get-Credential -Message "Provide credentials for logging into $workbench_url" -UserName $user_name
                  }


                  $json_credentials = $credentials.GetNetworkCredential() | ForEach-Object{
                      if ($_.UserName -like '*@*') {
                        @{"email"=$_.UserName;"password"=$_.Password}
                      }
                      else {
                        @{"login"=$_.UserName;"password"=$_.Password}
                      }
                  }

                  Write-Information "Logging in to workbench $workbench"


                    $auth_reponse = Invoke-WebRequest -Uri "$workbench_url/security" -Method POST -Body $json_credentials -Headers $headers -SkipHttpErrorCheck
                    if ($auth_reponse.BaseResponse.IsSuccessStatusCode) {
                      $auth_token = ($auth_reponse.Content | ConvertFrom-Json).data.auth_token
                    }
                    else {
                      Write-Error ("Login attempt failed ($($auth_reponse.StatusCode)) " + $auth_reponse.Content)
                      exit 1
                    }

                }
                else {
                  # we have auth token, nothing else to do?
                }
                $headers["Authorization"] = "Token token=`"$auth_token`""

                $json_headers = $headers.Clone()
                $json_headers["Content-Type"] = "application/json"
                $json_headers["Accept"] = "application/json"

                Write-Information "Downloading recordings"

                # start paging through results!
                $script:current_page = 0
                $script:max_page = $null
                function Get-NextPage() {
                  $script:current_page += 1
                  if (($null -ne $script:max_page) -and ($script:current_page -gt $script:max_page)) {
                    Write-Information "Reached end of pages"
                    return $null
                  }

                  Write-Information "Getting page $script:current_page"

                  $response = Invoke-RestMethod -Uri "$workbench_url/audio_recordings/filter?page=$script:current_page" `
                    -Method POST -Body $filter -Headers $json_headers -SkipHttpErrorCheck -StatusCodeVariable "status_code"

                  if ($status_code -ne 200) {
                    Write-Error ("Failed to get recordings ($status_code): ")
                    $response | Format-List | out-string | Write-Error
                    exit 1
                  }

                  $script:max_page = $response.meta.paging.max_page

                  Write-Information "Got page $script:current_page of $script:max_page, $($response.data.Count) recordings in this page."

                  return $response.data
                }

                $sites = @{}
                function Get-SiteName($raw_name) {
                  if ($sites.ContainsKey($raw_name)) {
                    return $sites[$raw_name]
                  }

                  # Safe folder names
                  $name = $raw_name -replace '[^-_A-Za-z0-9]',''
                  $sites[$raw_name] = $name
                  return $name
                }

                # make output directory
                New-Item -ItemType Directory -Path $target -Force | Out-Null

                while ($null -ne ($recordings = Get-NextPage )) {
                  foreach($recording in $recordings) {
                    Write-Information "Downloading recording $($recording.id)"
                    $recording | write-output

                    $audio_recording_id = $recording.id
                    $site_id = $recording.site_id
                    $name = $recording.canonical_file_name

                    $safe_site_name = Get-SiteName $recording.'sites.name'

                    $sub_folder = Join-Path $target "${site_id}_$safe_site_name"
                    New-Item -ItemType Directory -Path $sub_folder -Force | Out-Null

                    $path = Join-Path $sub_folder $name

                    Invoke-RestMethod -Uri "$workbench_url/audio_recordings/$audio_recording_id/original" `
                      -Method GET -Headers $headers -StatusCodeVariable "download_status_code" -OutFile $path

                    Write-Information "Downloaded recording $audio_recording_id to $path"
                  }
                }

                Write-Information "Done!"
  "/analysis_jobs/{analysis_job_id}/items/{id}/finish":
    post:
      summary: finish analysis_jobs_item
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs_items
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/analysis_jobs/{analysis_job_id}/items/new":
    get:
      summary: new analysis_jobs_item
      security:
      - auth_token_header: []
      parameters:
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs_items
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: .

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested item.
                    info: 
                data: 
  "/analysis_jobs/{analysis_job_id}/items":
    get:
      summary: list analysis_jobs
      security:
      - auth_token_header: []
      parameters:
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs_items
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: audio_recording_id
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/analysis_jobs/22/items?direction=asc&items=25&order_by=audio_recording_id&page=1
                    previous: 
                    next: 
                data:
                - id: 22
                  analysis_job_id: 22
                  audio_recording_id: 30
                  script_id: 22
                  created_at: '2020-01-02T03:04:05.677Z'
                  queued_at: 
                  work_started_at: 
                  finished_at: 
                  queue_id: 944ab937-794d-4f7b-9020-4093715cef99
                  error: 
                  attempts: 0
                  status: new
                  transition: queue
                  import_success: 
                  audio_event_import_file_ids:
                  - 22
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/analysis_jobs_item"
    post:
      summary: create analysis_jobs_item
      security:
      - auth_token_header: []
      parameters:
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs_items
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: analysis_jobs/23/items
                      original_http_method: POST
                data: 
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/analysis_jobs_item"
  "/analysis_jobs/{analysis_job_id}/items/filter":
    post:
      summary: filter analysis_jobs_item
      security:
      - auth_token_header: []
      parameters:
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs_items
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: audio_recording_id
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/analysis_jobs/25/items/filter?direction=asc&items=25&order_by=audio_recording_id&page=1
                    previous: 
                    next: 
                data:
                - id: 24
                  analysis_job_id: 25
                  audio_recording_id: 33
                  script_id: 27
                  created_at: '2020-01-02T03:04:05.677Z'
                  queued_at: 
                  work_started_at: 
                  finished_at: 
                  queue_id: 81e4081b-7300-4d17-a616-eb07f08a102d
                  error: 
                  attempts: 0
                  status: new
                  transition: queue
                  import_success: 
                  audio_event_import_file_ids:
                  - 24
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/analysis_jobs_item"
  "/analysis_jobs/{analysis_job_id}/items/{id}":
    get:
      summary: show analysis_jobs_item
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs_items
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: .

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 25
                  analysis_job_id: 26
                  audio_recording_id: 34
                  script_id: 28
                  created_at: '2020-01-02T03:04:05.677Z'
                  queued_at: 
                  work_started_at: 
                  finished_at: 
                  queue_id: 8759e629-c907-40a9-893a-7b02fad20a1e
                  error: 
                  attempts: 0
                  status: queued
                  transition: queue
                  import_success: 
                  audio_event_import_file_ids:
                  - 25
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/analysis_jobs_item"
    delete:
      summary: delete analysis_jobs_item
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs_items
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: analysis_jobs/27/items/26
                      original_http_method: DELETE
                data: 
    put:
      summary: update analysis_jobs_item
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs_items
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: analysis_jobs/28/items/27
                      original_http_method: PUT
                data: 
    patch:
      summary: update analysis_jobs_item
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs_items
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: analysis_jobs/29/items/28
                      original_http_method: PATCH
                data: 
  "/analysis_jobs/{analysis_job_id}/items/{id}/working":
    post:
      summary: working analysis_jobs_item
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs_items
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/audio_recordings":
    get:
      summary: list audio recordings
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: recorded_date
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/audio_recordings?direction=desc&items=25&order_by=recorded_date&page=1
                    previous: 
                    next: 
                  capabilities:
                    original_download:
                      can: 
                      details: You do not have permission to download the original
                        audio recording. Check your access level or the original download
                        settings for this project
                data:
                - id: 39
                  uuid: a1f33687-1233-49d1-941f-6a76213133bd
                  recorded_date: '2000-05-04T07:06:59.000Z'
                  site_id: 39
                  duration_seconds: 60000.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 177
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  notes:
                    test: note number 39
                  file_hash: SHA256::39vkxyg2gp54z5sdb8tyq0md8tppfkuw9p0na0jep8wjhcqmije9grw4cfxa9cur
                  uploader_id: 177
                  original_file_name: original name 39.mp3
                  canonical_file_name: 20000504T070659Z_site-name-39_39.mp3
                  recorded_date_timezone: 
                  recorded_utc_offset: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/audio_recording"
  "/audio_recordings/{id}":
    patch:
      summary: update audio recordings
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  capabilities:
                    original_download:
                      can: true
                      details: 
                data:
                  id: 40
                  uuid: c6e43ede-81aa-47cc-8f30-d73e3a1a8057
                  recorded_date: '2000-05-05T07:06:59.000Z'
                  site_id: 40
                  duration_seconds: 66.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 181
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  notes:
                    test: note number 40
                  file_hash: SHA256::400cb5hxjye24i5gx1d225178rfulgzzqnlijcpyts0lcr0r1gfsgqnv7jegym5y
                  uploader_id: 181
                  original_file_name: original name 40.mp3
                  canonical_file_name: 20000505T070659Z_site-name-40_40.mp3
                  recorded_date_timezone: 
                  recorded_utc_offset: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_recording"
    get:
      summary: show audio recordings
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  capabilities:
                    original_download:
                      can: true
                      details: 
                data:
                  id: 41
                  uuid: 016a00fc-3597-4ff9-96d2-c674c64fe83b
                  recorded_date: '2000-05-06T07:06:59.000Z'
                  site_id: 41
                  duration_seconds: 60000.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 185
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  notes:
                    test: note number 41
                  file_hash: SHA256::41nozofscereb541o9fucgnjx1usir9k6xny9nfybl9binp4uqeqp3rafmjbq8z2
                  uploader_id: 185
                  original_file_name: original name 41.mp3
                  canonical_file_name: 20000506T070659Z_site-name-41_41.mp3
                  recorded_date_timezone: 
                  recorded_utc_offset: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
    put:
      summary: update audio recordings
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  capabilities:
                    original_download:
                      can: true
                      details: 
                data:
                  id: 42
                  uuid: 56f0fb43-86ca-4b05-b816-d1ccfe7c0147
                  recorded_date: '2000-05-07T07:06:59.000Z'
                  site_id: 42
                  duration_seconds: 66.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 189
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  notes:
                    test: note number 42
                  file_hash: SHA256::427ax8du4jxkdj2or2dva2ftsvnot1ujsa5iyd92rb12xoio612sz0xv6abdlq4q
                  uploader_id: 189
                  original_file_name: original name 42.mp3
                  canonical_file_name: 20000507T070659Z_site-name-42_42.mp3
                  recorded_date_timezone: 
                  recorded_utc_offset: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_recording"
  "/audio_recordings/new":
    get:
      summary: new audio recordings
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: .

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  site_id: 
                  uploader_id: 
                  sample_rate_hertz: 
                  media_type: 
                  recorded_date: 
                  bit_rate_bps: 
                  data_length_bytes: 
                  channels: 
                  duration_seconds: 
                  file_hash: 
                  original_file_name: 
  "/audio_recordings/filter":
    post:
      summary: filter audio recording
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: recorded_date
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/audio_recordings/filter?direction=desc&items=25&order_by=recorded_date&page=1
                    previous: 
                    next: 
                  capabilities:
                    original_download:
                      can: 
                      details: You do not have permission to download the original
                        audio recording. Check your access level or the original download
                        settings for this project
                data:
                - id: 44
                  uuid: 65637a42-e23c-4b36-9c29-190f821bf759
                  recorded_date: '2000-05-09T07:06:59.000Z'
                  site_id: 44
                  duration_seconds: 60000.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 197
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  notes:
                    test: note number 44
                  file_hash: SHA256::44jljgblg4zg8zkzthyyacs0dudy33xcpnxwzgkf0oop0qkozu7qzvh8w55n9ifq
                  uploader_id: 197
                  original_file_name: original name 44.mp3
                  canonical_file_name: 20000509T070659Z_site-name-44_44.mp3
                  recorded_date_timezone: 
                  recorded_utc_offset: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/audio_recording"
  "/analysis_jobs/{analysis_job_id}/results/{audio_recording_id}/{script_id}":
    get:
      summary: you can use the latest token to get analysis result directory listing
        for the latest version of a script
      security:
      - auth_token_header: []
      parameters:
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      - name: audio_recording_id
        in: path
        description: audio_recording_id
        required: true
        schema:
          type: integer
      - name: script_id
        in: path
        description: script_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  paging:
                    page: 1
                    items: 25
                    total: 2
                    max_page: 1
                    current: http://web:3000/analysis_jobs/38/results?items=25&page=1
                    previous: 
                    next: 
                data:
                  path: "/analysis_jobs/38/results/46/script_name_40_latest"
                  name: script name 40 (latest)
                  children:
                  - path: "/analysis_jobs/38/results/46/script_name_40_latest/Test1"
                    name: Test1
                    has_children: true
                  - path: "/analysis_jobs/38/results/46/script_name_40_latest/archive.zip"
                    name: archive.zip
                    size: 2975613
                    mime: application/zip
                    has_children: true
                  link: "/scripts/40"
                  analysis_jobs_item_ids:
                  - 37
                  analysis_job_id: 38
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        path:
                          type: string
                        name:
                          type: string
                        link:
                          type: string
                          format: uri-reference
                        children:
                          type: array
                          items:
                            anyOf:
                            - type: object
                              properties:
                                path:
                                  type: string
                                name:
                                  type: string
                                has_children:
                                  type: boolean
                                link:
                                  type:
                                  - string
                                  - 'null'
                                  format: uri-reference
                              required:
                              - path
                              - name
                              - has_children
                              additionalProperties: false
                            - type: object
                              properties:
                                path:
                                  type: string
                                name:
                                  type: string
                                has_children:
                                  type: boolean
                                size:
                                  type: integer
                                mime:
                                  type: string
                              required:
                              - path
                              - name
                              - size
                              - mime
                              additionalProperties: false
                        analysis_job_id:
                          "$ref": "#/components/schemas/id"
                          readOnly: true
                        analysis_jobs_item_ids:
                          type: array
                          items:
                            "$ref": "#/components/schemas/id"
                            readOnly: true
                          readOnly: false
                      required:
                      - path
                      - name
                      - children
                      readOnly: true
                      additionalProperties: false
  "/analysis_jobs/{analysis_job_id}/results/{audio_recording_id}/{script_id}/Test1/Test2/test-CASE.csv":
    get:
      summary: download a file
      security:
      - auth_token_header: []
      parameters:
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      - name: audio_recording_id
        in: path
        description: audio_recording_id
        required: true
        schema:
          type: integer
      - name: script_id
        in: path
        description: script_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful
  "/analysis_jobs/{analysis_job_id}/results/{audio_recording_id}/{script_id}/archive.zip":
    get:
      summary: download a container as a file
      security:
      - auth_token_header: []
      parameters:
      - name: analysis_job_id
        in: path
        description: analysis_job_id
        required: true
        schema:
          type: integer
      - name: audio_recording_id
        in: path
        description: audio_recording_id
        required: true
        schema:
          type: integer
      - name: script_id
        in: path
        description: script_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  paging:
                    page: 1
                    items: 25
                    total: 5
                    max_page: 1
                    current: http://web:3000/analysis_jobs/40/results?items=25&page=1
                    previous: 
                    next: 
                data:
                  path: "/analysis_jobs/40/results/48/42/archive.zip"
                  name: archive.zip
                  children:
                  - path: "/analysis_jobs/40/results/48/42/archive.zip/empty"
                    name: empty
                    has_children: false
                  - path: "/analysis_jobs/40/results/48/42/archive.zip/New Folder"
                    name: New Folder
                    has_children: true
                  - path: "/analysis_jobs/40/results/48/42/archive.zip/zippeddir"
                    name: zippeddir
                    has_children: true
                  - path: "/analysis_jobs/40/results/48/42/archive.zip/IMG_night.jpg"
                    name: IMG_night.jpg
                    size: 2703693
                    mime: image/jpeg
                  - path: "/analysis_jobs/40/results/48/42/archive.zip/test.txt"
                    name: test.txt
                    size: 12
                    mime: text/plain
                  analysis_jobs_item_ids:
                  - 39
                  analysis_job_id: 40
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        path:
                          type: string
                        name:
                          type: string
                        link:
                          type: string
                          format: uri-reference
                        children:
                          type: array
                          items:
                            anyOf:
                            - type: object
                              properties:
                                path:
                                  type: string
                                name:
                                  type: string
                                has_children:
                                  type: boolean
                                link:
                                  type:
                                  - string
                                  - 'null'
                                  format: uri-reference
                              required:
                              - path
                              - name
                              - has_children
                              additionalProperties: false
                            - type: object
                              properties:
                                path:
                                  type: string
                                name:
                                  type: string
                                has_children:
                                  type: boolean
                                size:
                                  type: integer
                                mime:
                                  type: string
                              required:
                              - path
                              - name
                              - size
                              - mime
                              additionalProperties: false
                        analysis_job_id:
                          "$ref": "#/components/schemas/id"
                          readOnly: true
                        analysis_jobs_item_ids:
                          type: array
                          items:
                            "$ref": "#/components/schemas/id"
                            readOnly: true
                          readOnly: false
                      required:
                      - path
                      - name
                      - children
                      readOnly: true
                      additionalProperties: false
  "/audio_event_imports/filter":
    post:
      summary: filter archived
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/audio_event_imports/filter?direction=asc&items=25&order_by=created_at&page=1&with_archived=true
                    previous: 
                    next: 
                data:
                - id: 50
                  name: import name 52
                  description: import **description** 52
                  analysis_job_id: 
                  creator_id: 278
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 279
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: '2020-01-02T03:04:05.677Z'
                  description_html_tagline: import <strong>description</strong> 52
                  description_html: "<p>import <strong>description</strong> 52</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/audio_event_import"
    parameters:
    - name: with_archived
      getter: archived_qsp
      in: query
      schema:
        type: boolean
      required: false
      allowEmptyValue: true
  "/audio_event_imports":
    post:
      summary: create audio_event_import
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 43
                  name: import name 43
                  description: import **description** 43
                  analysis_job_id: 
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  description_html_tagline: import <strong>description</strong> 43
                  description_html: "<p>import <strong>description</strong> 43</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_event_import"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_event_import"
    get:
      summary: list archived
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/audio_event_imports?direction=asc&items=25&order_by=created_at&page=1&with_archived=true
                    previous: 
                    next: 
                data:
                - id: 52
                  name: import name 54
                  description: import **description** 54
                  analysis_job_id: 
                  creator_id: 290
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 291
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: '2020-01-02T03:04:05.677Z'
                  description_html_tagline: import <strong>description</strong> 54
                  description_html: "<p>import <strong>description</strong> 54</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/audio_event_import"
    parameters:
    - name: with_archived
      getter: archived_qsp
      in: query
      schema:
        type: boolean
      required: false
      allowEmptyValue: true
  "/audio_event_imports/{id}":
    patch:
      summary: update audio_event_import
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 45
                  name: import name 46
                  description: import **description** 46
                  analysis_job_id: 
                  creator_id: 244
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  description_html_tagline: import <strong>description</strong> 46
                  description_html: "<p>import <strong>description</strong> 46</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_event_import"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_event_import"
    put:
      summary: update audio_event_import
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 46
                  name: import name 48
                  description: import **description** 48
                  analysis_job_id: 
                  creator_id: 252
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  description_html_tagline: import <strong>description</strong> 48
                  description_html: "<p>import <strong>description</strong> 48</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_event_import"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_event_import"
    delete:
      summary: delete audio_event_import
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    get:
      summary: show archived
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 51
                  name: import name 53
                  description: import **description** 53
                  analysis_job_id: 
                  creator_id: 284
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 285
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: '2020-01-02T03:04:05.677Z'
                  description_html_tagline: import <strong>description</strong> 53
                  description_html: "<p>import <strong>description</strong> 53</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_event_import"
    parameters:
    - name: with_archived
      getter: archived_qsp
      in: query
      schema:
        type: boolean
      required: false
      allowEmptyValue: true
  "/audio_event_imports/new":
    get:
      summary: new audio_event_import
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
                  analysis_jobs_id: 
  "/audio_event_imports/{id}/destroy":
    delete:
      summary: destroy permanently
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/audio_event_imports/{id}/recover":
    post:
      summary: recover (un-delete)
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/harvests/{harvest_id}/items/filter":
    post:
      summary: filter harvest items
      security:
      - auth_token_header: []
      parameters:
      - name: harvest_id
        in: path
        description: harvest_id
        required: true
        schema:
          type: integer
      tags:
      - harvest_items
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: path
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/harvests/54/items/filter?direction=asc&items=25&order_by=path&page=1
                    previous: 
                    next: 
                data:
                - id: 54
                  deleted: false
                  path: some/relative/path.mp3
                  status: new
                  created_at: '2020-01-02T03:04:05.677Z'
                  harvest_id: 54
                  updated_at: '2020-01-02T03:04:05.677Z'
                  audio_recording_id: 64
                  uploader_id: 313
                  validations: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/harvest_item"
  "/projects/{project_id}/harvests/{harvest_id}/items/a/b":
    get:
      summary: list harvest items by path
      security:
      - auth_token_header: []
      parameters:
      - name: harvest_id
        in: path
        description: harvest_id
        required: true
        schema:
          type: integer
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - harvest_items
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: path
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/projects/72/harvests/55/items/a/b?direction=asc&items=25&order_by=path&page=1
                    previous: 
                    next: 
                data:
                - id: 55
                  deleted: false
                  path: a/b/c.wav
                  status: new
                  created_at: '2020-01-02T03:04:05.677Z'
                  harvest_id: 55
                  updated_at: '2020-01-02T03:04:05.677Z'
                  audio_recording_id: 66
                  uploader_id: 323
                  report:
                    items_total: 1
                    items_size_bytes: 
                    items_duration_seconds: 
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    items_new: 1
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                  validations: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/harvest_item"
  "/projects/{project_id}/regions/new":
    get:
      summary: new region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
                  notes: 
                  project_id: 
  "/projects/{project_id}/regions":
    post:
      summary: create region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 69
                  name: region name 69
                  description: site **description** 69
                  notes:
                    region_note_69: 69
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 76
                  site_ids: []
                  description_html: "<p>site <strong>description</strong> 69</p>\n"
                  description_html_tagline: site <strong>description</strong> 69
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
    get:
      summary: list regions
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/projects/78/regions?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 70
                  name: region name 70
                  description: site **description** 70
                  notes:
                    region_note_70: 70
                  creator_id: 334
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 78
                  site_ids:
                  - 69
                  description_html: "<p>site <strong>description</strong> 70</p>\n"
                  description_html_tagline: site <strong>description</strong> 70
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/region"
  "/projects/{project_id}/regions/{id}":
    delete:
      summary: delete region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    get:
      summary: show region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 72
                  name: region name 72
                  description: site **description** 72
                  notes:
                    region_note_72: 72
                  creator_id: 342
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 80
                  site_ids:
                  - 71
                  description_html: "<p>site <strong>description</strong> 72</p>\n"
                  description_html_tagline: site <strong>description</strong> 72
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
    put:
      summary: update region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 73
                  name: region name 74
                  description: site **description** 74
                  notes:
                    region_note_74: 74
                  creator_id: 346
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 82
                  site_ids:
                  - 72
                  description_html: "<p>site <strong>description</strong> 74</p>\n"
                  description_html_tagline: site <strong>description</strong> 74
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
    patch:
      summary: update region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 74
                  name: region name 76
                  description: site **description** 76
                  notes:
                    region_note_76: 76
                  creator_id: 352
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 84
                  site_ids:
                  - 73
                  description_html: "<p>site <strong>description</strong> 76</p>\n"
                  description_html_tagline: site <strong>description</strong> 76
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
  "/projects/{project_id}/regions/filter":
    post:
      summary: filter region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/projects/85/regions/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 75
                  name: region name 77
                  description: site **description** 77
                  notes:
                    region_note_77: 77
                  creator_id: 358
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 85
                  site_ids:
                  - 74
                  description_html: "<p>site <strong>description</strong> 77</p>\n"
                  description_html_tagline: site <strong>description</strong> 77
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/region"
  "/security":
    delete:
      summary: logout
      tags:
      - security
      consumes: 
      security:
      - auth_token_header: []
      parameters: []
      responses:
        '200':
          description: session destroyed
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  error:
                    links:
                      Log in: "/my_account/sign_in"
                      Register: "/my_account/sign_up"
                    info: 
                data:
                  user_name: Admin
                  message: Logged out successfully.
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        message:
                          type: string
                        user_name:
                          type: string
                      required:
                      - message
                      - user_name
    post:
      summary: create a new session
      tags:
      - security
      parameters: []
      security: 
      responses:
        '200':
          description: session created
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  auth_token: oFfcEi5r9jAThW-tO7uTI5S7Y0Lw-ahnc-O5ejFCdp8
                  user_name: Admin
                  user_id: 1
                  message: Logged in successfully.
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/security"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                anyOf:
                - type: object
                  required:
                  - email
                  - password
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                - type: object
                  required:
                  - login
                  - password
                  properties:
                    login:
                      type: string
                    password:
                      type: string
              required:
              - user
  "/security/user":
    get:
      summary: Gets the current session (with a cookie)
      tags:
      - security
      security:
      - cookie: []
      parameters: []
      responses:
        '200':
          description: session retrieved
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  auth_token: u5pAbf7zpK7NzwqLTA3Ea729q6i4VddC5UKV7WMfvsQ
                  user_name: Admin
                  user_id: 1
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/security"
  "/projects/{project_id}/harvests/{harvest_id}/items/filter":
    post:
      summary: filter harvest items
      security:
      - auth_token_header: []
      parameters:
      - name: harvest_id
        in: path
        description: harvest_id
        required: true
        schema:
          type: integer
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - harvest_items
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: path
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/projects/91/harvests/64/items/filter?direction=asc&items=25&order_by=path&page=1
                    previous: 
                    next: 
                data:
                - id: 64
                  deleted: false
                  path: some/relative/path.mp3
                  status: new
                  created_at: '2020-01-02T03:04:05.677Z'
                  harvest_id: 64
                  updated_at: '2020-01-02T03:04:05.677Z'
                  audio_recording_id: 81
                  uploader_id: 391
                  validations: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/harvest_item"
  "/provenances/{id}":
    get:
      summary: show provenance
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - provenances
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 65
                  name: Perch
                  version: 65.0.0
                  url: https://example.com
                  description: 
                  score_minimum: 
                  score_maximum: 
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  description_html_tagline: 
                  description_html: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/provenance"
    put:
      summary: update provenance
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - provenances
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 66
                  name: Acoustic Indices
                  version: 67.0.0
                  url: https://example.com
                  description: 
                  score_minimum: 
                  score_maximum: 
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  description_html_tagline: 
                  description_html: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/provenance"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/provenance"
    delete:
      summary: delete provenance
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - provenances
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    patch:
      summary: update provenance
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - provenances
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 68
                  name: Acoustic Indices
                  version: 70.0.0
                  url: https://example.com
                  description: 
                  score_minimum: 
                  score_maximum: 
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  description_html_tagline: 
                  description_html: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/provenance"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/provenance"
  "/provenances/new":
    get:
      summary: new provenance
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - provenances
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
                  score_minimum: 
                  score_maximum: 
                  version: 
                  url: 
  "/provenances":
    post:
      summary: create provenance
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - provenances
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 71
                  name: Birdnet
                  version: 73.0.0
                  url: https://example.com
                  description: 
                  score_minimum: 
                  score_maximum: 
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  description_html_tagline: 
                  description_html: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/provenance"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/provenance"
    get:
      summary: list provenances
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - provenances
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/provenances?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 72
                  name: Perch
                  version: 74.0.0
                  url: https://example.com
                  description: 
                  score_minimum: 
                  score_maximum: 
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  description_html_tagline: 
                  description_html: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/provenance"
  "/provenances/filter":
    post:
      summary: filter provenance
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - provenances
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/provenances/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 73
                  name: Perch
                  version: 75.0.0
                  url: https://example.com
                  description: 
                  score_minimum: 
                  score_maximum: 
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  description_html_tagline: 
                  description_html: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/provenance"
  "/stats":
    get:
      summary: Gets stats
      tags:
      - stats
      security: 
      parameters: []
      responses:
        '200':
          description: stats retrieved
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  summary:
                    users_online: 0
                    users_total: 2
                    online_window_start: '2020-01-02T01:04:05.677Z'
                    projects_total: 0
                    regions_total: 0
                    sites_total: 0
                    annotations_total: 0
                    annotations_total_duration: 0
                    annotations_recent: 0
                    audio_recordings_total: 0
                    audio_recordings_recent: 0
                    audio_recordings_total_duration: 0
                    audio_recordings_total_size: 0
                    tags_total: 0
                    tags_applied_total: 0
                    tags_applied_unique_total: 0
                  recent:
                    audio_recording_ids: []
                    audio_event_ids: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/stats"
  "/audio_event_imports/{audio_event_import_id}/files":
    get:
      summary: list audio_event_import_files
      security:
      - auth_token_header: []
      parameters:
      - name: audio_event_import_id
        in: path
        description: audio_event_import_id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/audio_event_imports/71/files?direction=asc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 70
                  additional_tag_ids: 
                  path: http://web:3000/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDVG9JYTJWNVNTSWhaR00wT0hNMWVqTjVkREYzYUhseGJXUnJjVEpyWjNRelpUVnZaZ1k2QmtWVU9oQmthWE53YjNOcGRHbHZia2tpVFdGMGRHRmphRzFsYm5RN0lHWnBiR1Z1WVcxbFBTSmhkV1JwYjE5amFHVmpheTVqYzNZaU95Qm1hV3hsYm1GdFpTbzlWVlJHTFRnbkoyRjFaR2x2WDJOb1pXTnJMbU56ZGdZN0JsUTZFV052Ym5SbGJuUmZkSGx3WlVraURYUmxlSFF2WTNOMkJqc0dWRG9SYzJWeWRtbGpaVjl1WVcxbE9ncHNiMk5oYkE9PSIsImV4cCI6IjIwMjAtMDEtMDJUMDM6MDk6MDUuNjc3WiIsInB1ciI6ImJsb2Jfa2V5In19--6bcecdf46929169e56b86ee9a08a371c1e5a1551/audio_check.csv
                  name: audio_check.csv
                  audio_event_import_id: 71
                  analysis_jobs_item_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  file_hash: fce803f986d1644b0387bce170506a855ccf940216ebc36c41f385fa4bd21bf05227e4f9f8189585ca7f1e124419a431576f5e55682cce720ed2b72ad4a5cfe8
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/audio_event_import_file"
    post:
      summary: create audio_event_import_file
      parameters:
      - name: audio_event_import_id
        in: path
        description: audio_event_import_id
        required: true
        schema:
          type: integer
      - name: audio_event_import_id
        in: path
        description: audio_event_import_id
        required: true
        schema:
          type: integer
      security:
      - auth_token_header: []
      tags:
      - audio_event_imports
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 72
                  additional_tag_ids:
                  - 71
                  path: http://web:3000/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDVG9JYTJWNVNTSWhNbXA2ZUROemQyTTRNR2d4ZG1SbmNUQXdibTFsZW1ReGRIWXlkd1k2QmtWVU9oQmthWE53YjNOcGRHbHZia2tpVldGMGRHRmphRzFsYm5RN0lHWnBiR1Z1WVcxbFBTSm5aVzVsY21salgyVjRZVzF3YkdVdVkzTjJJanNnWm1sc1pXNWhiV1VxUFZWVVJpMDRKeWRuWlc1bGNtbGpYMlY0WVcxd2JHVXVZM04yQmpzR1ZEb1JZMjl1ZEdWdWRGOTBlWEJsU1NJTmRHVjRkQzlqYzNZR093WlVPaEZ6WlhKMmFXTmxYMjVoYldVNkNteHZZMkZzIiwiZXhwIjoiMjAyMC0wMS0wMlQwMzowOTowNS42NzdaIiwicHVyIjoiYmxvYl9rZXkifX0=--b6ee08eede83cbdb89523539c5feab4c09a3b1e9/generic_example.csv
                  name: generic_example.csv
                  audio_event_import_id: 72
                  analysis_jobs_item_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  file_hash: e64adc21ba37155da65e431272f0f9ac9c7aea4951a9b5306dfb89433654e9b81a2adf4d582c885bb1d528b0455b66236e2b2d0253b0043d2b66cfea8f7d4d18
                  imported_events:
                  - audio_recording_id: 91
                    start_time_seconds: 123.0
                    end_time_seconds: 456.0
                    low_frequency_hertz: 100.0
                    high_frequency_hertz: 500.0
                    audio_event_import_file_id: 72
                    import_file_index: 0
                    provenance_id: 
                    creator_id: 1
                    tags:
                    - id: 72
                      text: Birb
                    - id: 71
                      text: tag text 71
                    errors: []
                    id: 72
                  committed: true
              schema:
                type: object
                properties:
                  allOf:
                  - "$ref": "#/components/schemas/audio_event_import_file"
                  - type: object
                    properties:
                      imported_events:
                        type: array
                        items:
                          allOf:
                          - "$ref": "#/components/schemas/audio_event"
                          - type: object
                            properties:
                              tags:
                                type: array
                                items:
                                  properties:
                                    id:
                                      "$ref": "#/components/schemas/nullableId"
                                      readOnly: true
                                    name:
                                      type: string
                                  required:
                                  - id
                                  - text
                          - type: object
                            properties:
                              errors:
                                type: array
                                items:
                                  type: object
                        readOnly: true
                      committed:
                        type: boolean
                        readOnly: true
                    required:
                    - imported_events
                    - committed
        '422':
          description: invalid file
          content:
            application/json:
              example:
                meta:
                  status: 422
                  message: Unprocessable Content
                  error:
                    details: Record could not be saved
                    info:
                      file:
                      - Validation failed
                data:
                  id: 
                  additional_tag_ids:
                  - 73
                  path: 
                  name: generic_example.csv
                  audio_event_import_id: 73
                  analysis_jobs_item_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  file_hash: 8123ba26cab77c0c4e8b46c5e9f66e55d9cc8b71e997f06d2f746bcf37fcf8ffbdf952266eaa42e4d87b6c207e9f8216c865f7384650dc51330cfa6ab0caf023
                  imported_events:
                  - audio_recording_id: 999999999
                    start_time_seconds: 123.0
                    end_time_seconds: 456.0
                    low_frequency_hertz: 100.0
                    high_frequency_hertz: 500.0
                    audio_event_import_file_id: 74
                    import_file_index: 0
                    provenance_id: 
                    creator_id: 1
                    tags:
                    - id: 
                      text: Birb
                    - id: 73
                      text: tag text 72
                    errors:
                    - audio_recording_id:
                      - does not exist
                    id: 
                  committed: true
              schema:
                type: object
                properties:
                  allOf:
                  - "$ref": "#/components/schemas/audio_event_import_file"
                  - type: object
                    properties:
                      imported_events:
                        type: array
                        items:
                          allOf:
                          - "$ref": "#/components/schemas/audio_event"
                          - type: object
                            properties:
                              tags:
                                type: array
                                items:
                                  properties:
                                    id:
                                      "$ref": "#/components/schemas/nullableId"
                                      readOnly: true
                                    name:
                                      type: string
                                  required:
                                  - id
                                  - text
                          - type: object
                            properties:
                              errors:
                                type: array
                                items:
                                  type: object
                        readOnly: true
                      committed:
                        type: boolean
                        readOnly: true
                    required:
                    - imported_events
                    - committed
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: file
        required: true
        description: file to upload
  "/audio_event_imports/{audio_event_import_id}/files/filter":
    post:
      summary: filter audio_event_import_file
      security:
      - auth_token_header: []
      parameters:
      - name: audio_event_import_id
        in: path
        description: audio_event_import_id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/audio_event_imports/74/files/filter?direction=asc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 75
                  additional_tag_ids: 
                  path: http://web:3000/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDVG9JYTJWNVNTSWhaVFUyWTI1aGJYbDNkVzF6Y25GMll6RmpObmw2T1dsM1p6QnZaQVk2QmtWVU9oQmthWE53YjNOcGRHbHZia2tpVFdGMGRHRmphRzFsYm5RN0lHWnBiR1Z1WVcxbFBTSmhkV1JwYjE5amFHVmpheTVqYzNZaU95Qm1hV3hsYm1GdFpTbzlWVlJHTFRnbkoyRjFaR2x2WDJOb1pXTnJMbU56ZGdZN0JsUTZFV052Ym5SbGJuUmZkSGx3WlVraURYUmxlSFF2WTNOMkJqc0dWRG9SYzJWeWRtbGpaVjl1WVcxbE9ncHNiMk5oYkE9PSIsImV4cCI6IjIwMjAtMDEtMDJUMDM6MDk6MDUuNjc3WiIsInB1ciI6ImJsb2Jfa2V5In19--7e19ba844a2207d577d7a9be670ec68a962e3ba7/audio_check.csv
                  name: audio_check.csv
                  audio_event_import_id: 74
                  analysis_jobs_item_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  file_hash: fce803f986d1644b0387bce170506a855ccf940216ebc36c41f385fa4bd21bf05227e4f9f8189585ca7f1e124419a431576f5e55682cce720ed2b72ad4a5cfe8
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/audio_event_import_file"
  "/audio_event_imports/{audio_event_import_id}/files/{id}":
    delete:
      summary: delete audio_event_import_file
      security:
      - auth_token_header: []
      parameters:
      - name: audio_event_import_id
        in: path
        description: audio_event_import_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    patch:
      summary: update audio_event_import_file
      security:
      - auth_token_header: []
      parameters:
      - name: audio_event_import_id
        in: path
        description: audio_event_import_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: audio_event_imports/76/files/77
                      original_http_method: PATCH
                data: 
    put:
      summary: update audio_event_import_file
      security:
      - auth_token_header: []
      parameters:
      - name: audio_event_import_id
        in: path
        description: audio_event_import_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: audio_event_imports/77/files/78
                      original_http_method: PUT
                data: 
    get:
      summary: show audio_event_import_file
      security:
      - auth_token_header: []
      parameters:
      - name: audio_event_import_id
        in: path
        description: audio_event_import_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 79
                  additional_tag_ids: 
                  path: http://web:3000/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDVG9JYTJWNVNTSWhhbUUyT1hCNVpHOTNiVEV3ZUdkbk1qbGhObVZ4TUdVMmMyMXBid1k2QmtWVU9oQmthWE53YjNOcGRHbHZia2tpVFdGMGRHRmphRzFsYm5RN0lHWnBiR1Z1WVcxbFBTSmhkV1JwYjE5amFHVmpheTVqYzNZaU95Qm1hV3hsYm1GdFpTbzlWVlJHTFRnbkoyRjFaR2x2WDJOb1pXTnJMbU56ZGdZN0JsUTZFV052Ym5SbGJuUmZkSGx3WlVraURYUmxlSFF2WTNOMkJqc0dWRG9SYzJWeWRtbGpaVjl1WVcxbE9ncHNiMk5oYkE9PSIsImV4cCI6IjIwMjAtMDEtMDJUMDM6MDk6MDUuNjc3WiIsInB1ciI6ImJsb2Jfa2V5In19--adad40183cb05816b9e50bfec98af35f4fb32174/audio_check.csv
                  name: audio_check.csv
                  audio_event_import_id: 78
                  analysis_jobs_item_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  file_hash: fce803f986d1644b0387bce170506a855ccf940216ebc36c41f385fa4bd21bf05227e4f9f8189585ca7f1e124419a431576f5e55682cce720ed2b72ad4a5cfe8
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_event_import_file"
  "/audio_event_imports/{audio_event_import_id}/files/new":
    get:
      summary: new audio_event_import_file
      security:
      - auth_token_header: []
      parameters:
      - name: audio_event_import_id
        in: path
        description: audio_event_import_id
        required: true
        schema:
          type: integer
      tags:
      - audio_event_imports
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  additional_tags: []
                  file: 
                  audio_event_import_id: 
  "/sites/{id}":
    put:
      summary: update site
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 99
                  name: site name 100
                  description: site description 100
                  notes: note number 100
                  creator_id: 472
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 101
                  custom_latitude: -45.574336
                  custom_longitude: 164.355556
                  location_obfuscated: false
                  project_ids:
                  - 111
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 100</p>\n"
                  description_html_tagline: site description 100
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    delete:
      summary: delete site
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    get:
      summary: show site
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 101
                  name: site name 102
                  description: site description 102
                  notes: note number 102
                  creator_id: 484
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 103
                  custom_latitude: 22.101529
                  custom_longitude: 112.569605
                  location_obfuscated: false
                  project_ids:
                  - 115
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 102</p>\n"
                  description_html_tagline: site description 102
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
    patch:
      summary: update site
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 102
                  name: site name 104
                  description: site description 104
                  notes: note number 104
                  creator_id: 488
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 105
                  custom_latitude: 76.402037
                  custom_longitude: -172.429474
                  location_obfuscated: false
                  project_ids:
                  - 116
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 104</p>\n"
                  description_html_tagline: site description 104
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
  "/sites/new":
    get:
      summary: new site
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  longitude: 
                  latitude: 
                  notes: 
                  image: 
                  tzinfo_tz: 
                  rails_tz: 
  "/sites":
    post:
      summary: create site
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 105
                  name: site name 2
                  description: site description 2
                  notes: note number 2
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 107
                  custom_latitude: 
                  custom_longitude: 
                  location_obfuscated: false
                  project_ids:
                  - 120
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 2</p>\n"
                  description_html_tagline: site description 2
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    get:
      summary: list sites
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/sites?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 106
                  name: site name 107
                  description: site description 107
                  notes: note number 107
                  creator_id: 504
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 108
                  custom_latitude: 21.484801
                  custom_longitude: -165.57097
                  location_obfuscated: false
                  project_ids:
                  - 121
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 107</p>\n"
                  description_html_tagline: site description 107
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/sites/filter":
    post:
      summary: filter site
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/sites/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 107
                  name: site name 108
                  description: site description 108
                  notes: note number 108
                  creator_id: 508
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 109
                  custom_latitude: -87.866915
                  custom_longitude: 70.327033
                  location_obfuscated: false
                  project_ids:
                  - 122
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 108</p>\n"
                  description_html_tagline: site description 108
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/projects/{project_id}/harvests/filter":
    post:
      summary: filter harvest
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/projects/123/harvests/filter?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 90
                  creator_id: 512
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: false
                  status: new_harvest
                  project_id: 123
                  name: January 2nd Upload
                  upload_user: 
                  upload_password: 
                  upload_url: sftp://upload.test:2022
                  mappings: []
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: 
                  last_metadata_review_at: 
                  last_mappings_change_at: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/harvest"
  "/projects/{project_id}/harvests":
    post:
      summary: create harvest
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 92
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: true
                  status: uploading
                  project_id: 124
                  name: January 2nd Upload
                  upload_user: Admin_92
                  upload_password: J4FqmcAAyqgC3GFVpsCt7C6m
                  upload_url: sftp://upload.test:2022
                  mappings:
                  - path: '109'
                    site_id: 109
                    utc_offset: 
                    recursive: true
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: '2020-01-02T03:04:05.677Z'
                  last_metadata_review_at: 
                  last_mappings_change_at: '2020-01-02T03:04:05.677Z'
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/harvest"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/harvest"
    get:
      summary: list harvests
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/projects/125/harvests?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 93
                  creator_id: 520
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: false
                  status: new_harvest
                  project_id: 125
                  name: January 2nd Upload
                  upload_user: 
                  upload_password: 
                  upload_url: sftp://upload.test:2022
                  mappings: []
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: 
                  last_metadata_review_at: 
                  last_mappings_change_at: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/harvest"
  "/projects/{project_id}/harvests/new":
    get:
      summary: new harvest
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  project_id: true
                  streaming: false
  "/projects/{project_id}/harvests/{id}":
    get:
      summary: show harvest
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 95
                  creator_id: 528
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: false
                  status: new_harvest
                  project_id: 127
                  name: January 2nd Upload
                  upload_user: 
                  upload_password: 
                  upload_url: sftp://upload.test:2022
                  mappings: []
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: 
                  last_metadata_review_at: 
                  last_mappings_change_at: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/harvest"
    delete:
      summary: delete harvest
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    patch:
      summary: update harvest
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 97
                  creator_id: 536
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: false
                  status: new_harvest
                  project_id: 129
                  name: January 2nd Upload
                  upload_user: 
                  upload_password: 
                  upload_url: sftp://upload.test:2022
                  mappings: []
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: 
                  last_metadata_review_at: 
                  last_mappings_change_at: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/harvest"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/harvest"
    put:
      summary: update harvest
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 98
                  creator_id: 540
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: false
                  status: new_harvest
                  project_id: 130
                  name: January 2nd Upload
                  upload_user: 
                  upload_password: 
                  upload_url: sftp://upload.test:2022
                  mappings: []
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: 
                  last_metadata_review_at: 
                  last_mappings_change_at: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/harvest"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/harvest"
  "/projects/{project_id}/sites/{site_id}/audio_recordings/new":
    get:
      summary: new audio recordings
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: site_id
        in: path
        description: site_id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: .

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  site_id: 
                  uploader_id: 
                  sample_rate_hertz: 
                  media_type: 
                  recorded_date: 
                  bit_rate_bps: 
                  data_length_bytes: 
                  channels: 
                  duration_seconds: 
                  file_hash: 
                  original_file_name: 
  "/projects/{project_id}/sites/{site_id}/audio_recordings":
    post:
      summary: create audio recordings
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: site_id
        in: path
        description: site_id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                  capabilities:
                    original_download:
                      can: true
                      details: 
                data:
                  id: 117
                  uuid: 885b1ca3-172a-4587-b147-ac9cb7b5b264
                  recorded_date: '2000-07-21T07:06:59.000Z'
                  site_id: 117
                  duration_seconds: 60000.0
                  sample_rate_hertz: 22050
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  notes:
                    test: note number 117
                  file_hash: SHA256::117zdhtysqsv7dq32a0xpe5a7gkrj7h528587f9k7fbcm8vcejnsrzc7c07lmrz4
                  uploader_id: 1
                  original_file_name: original name 117.mp3
                  canonical_file_name: 20000721T070659Z_site-name-118_117.mp3
                  recorded_utc_offset: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_recording"
  "/status":
    get:
      summary: Gets status
      tags:
      - stats
      security: 
      parameters: []
      responses:
        '200':
          description: stats retrieved
          content:
            application/json:
              example:
                status: good
                timed_out: false
                database: true
                redis: PONG
                storage: 1 audio recording storage directory available.
                upload: Alive
                batch_analysis: Connected
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - good
                    - bad
                  timed_out:
                    type: boolean
                  database:
                    type: boolean
                  redis:
                    type: string
                  storage:
                    type: string
                  upload:
                    type: string
                  batch_analysis:
                    type: string
  "/harvests/{harvest_id}/items/a/b":
    get:
      summary: list harvest items by path
      security:
      - auth_token_header: []
      parameters:
      - name: harvest_id
        in: path
        description: harvest_id
        required: true
        schema:
          type: integer
      tags:
      - harvest_items
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: path
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/harvests/101/items/a/b?direction=asc&items=25&order_by=path&page=1
                    previous: 
                    next: 
                data:
                - id: 92
                  deleted: false
                  path: a/b/c.wav
                  status: new
                  created_at: '2020-01-02T03:04:05.677Z'
                  harvest_id: 101
                  updated_at: '2020-01-02T03:04:05.677Z'
                  audio_recording_id: 119
                  uploader_id: 566
                  report:
                    items_total: 1
                    items_size_bytes: 
                    items_duration_seconds: 
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    items_new: 1
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                  validations: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/harvest_item"
  "/bookmarks":
    post:
      summary: create bookmark
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 90
                  audio_recording_id: 121
                  name: name 90
                  category: category 90
                  description: description 90
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 90</p>\n"
                  description_html_tagline: description 90
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/bookmark"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/bookmark"
    get:
      summary: list bookmarks
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/bookmarks?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 91
                  audio_recording_id: 122
                  name: name 91
                  category: category 91
                  description: description 91
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 91</p>\n"
                  description_html_tagline: description 91
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/bookmark"
  "/bookmarks/new":
    get:
      summary: new bookmark
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  category: 
                  description: 
                  offset_seconds: 
  "/bookmarks/filter":
    post:
      summary: filter bookmark
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/bookmarks/filter?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 93
                  audio_recording_id: 124
                  name: name 93
                  category: category 93
                  description: description 93
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 93</p>\n"
                  description_html_tagline: description 93
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/bookmark"
  "/bookmarks/{id}":
    put:
      summary: update bookmark
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 94
                  audio_recording_id: 126
                  name: name 95
                  category: category 95
                  description: description 95
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 95</p>\n"
                  description_html_tagline: description 95
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/bookmark"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/bookmark"
    patch:
      summary: update bookmark
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 95
                  audio_recording_id: 128
                  name: name 97
                  category: category 97
                  description: description 97
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 97</p>\n"
                  description_html_tagline: description 97
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/bookmark"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/bookmark"
    delete:
      summary: delete bookmark
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    get:
      summary: show bookmark
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 97
                  audio_recording_id: 130
                  name: name 99
                  category: category 99
                  description: description 99
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 99</p>\n"
                  description_html_tagline: description 99
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/bookmark"
  "/sites/orphans/filter":
    post:
      summary: filter site
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/sites/orphans?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 133
                  name: site name 134
                  description: site description 134
                  notes: note number 134
                  creator_id: 621
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 135
                  custom_latitude: 
                  custom_longitude: 
                  location_obfuscated: true
                  project_ids: []
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 134</p>\n"
                  description_html_tagline: site description 134
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/sites/orphans":
    get:
      summary: list sites
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/sites/orphans?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 135
                  name: site name 136
                  description: site description 136
                  notes: note number 136
                  creator_id: 628
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 137
                  custom_latitude: 
                  custom_longitude: 
                  location_obfuscated: true
                  project_ids: []
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 136</p>\n"
                  description_html_tagline: site description 136
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/saved_searches/new":
    get:
      summary: new saved_search
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data: {}
  "/saved_searches/filter":
    post:
      summary: filter saved_search
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/saved_searches/filter?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 100
                  name: saved search name 100
                  description: saved search description 100
                  stored_query:
                    uuid:
                      eq: blah blah
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 636
                  deleter_id: 
                  deleted_at: 
                  project_ids:
                  - 157
                  analysis_job_ids: []
                  description_html: "<p>saved search description 100</p>\n"
                  description_html_tagline: saved search description 100
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/saved_search"
  "/saved_searches/{id}":
    put:
      summary: can't update saved_search
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: saved_searches/101
                      original_http_method: PUT
                data: 
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/saved_search"
    delete:
      summary: delete saved_search
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    patch:
      summary: can't update saved_search
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: saved_searches/103
                      original_http_method: PATCH
                data: 
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/saved_search"
    get:
      summary: show saved_search
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 104
                  name: saved search name 106
                  description: saved search description 106
                  stored_query:
                    uuid:
                      eq: blah blah
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 654
                  deleter_id: 
                  deleted_at: 
                  project_ids:
                  - 161
                  analysis_job_ids: []
                  description_html: "<p>saved search description 106</p>\n"
                  description_html_tagline: saved search description 106
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/saved_search"
  "/saved_searches":
    get:
      summary: list saved_searches
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/saved_searches?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 105
                  name: saved search name 107
                  description: saved search description 107
                  stored_query:
                    uuid:
                      eq: blah blah
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 658
                  deleter_id: 
                  deleted_at: 
                  project_ids:
                  - 162
                  analysis_job_ids: []
                  description_html: "<p>saved search description 107</p>\n"
                  description_html_tagline: saved search description 107
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/saved_search"
    post:
      summary: create saved_search
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 107
                  name: saved search name 109
                  description: saved search description 109
                  stored_query:
                    uuid:
                      eq: blah blah
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  deleter_id: 
                  deleted_at: 
                  project_ids: []
                  analysis_job_ids: []
                  description_html: "<p>saved search description 109</p>\n"
                  description_html_tagline: saved search description 109
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/saved_search"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/saved_search"
  "/harvests/new":
    get:
      summary: new harvest
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  project_id: true
                  streaming: false
  "/harvests/{id}":
    get:
      summary: show harvest
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 121
                  creator_id: 670
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: false
                  status: new_harvest
                  project_id: 165
                  name: January 2nd Upload
                  upload_user: 
                  upload_password: 
                  upload_url: sftp://upload.test:2022
                  mappings: []
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: 
                  last_metadata_review_at: 
                  last_mappings_change_at: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/harvest"
    delete:
      summary: delete harvest
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    put:
      summary: update harvest
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 123
                  creator_id: 678
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: false
                  status: new_harvest
                  project_id: 167
                  name: January 2nd Upload
                  upload_user: 
                  upload_password: 
                  upload_url: sftp://upload.test:2022
                  mappings: []
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: 
                  last_metadata_review_at: 
                  last_mappings_change_at: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/harvest"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/harvest"
    patch:
      summary: update harvest
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 124
                  creator_id: 682
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: false
                  status: new_harvest
                  project_id: 168
                  name: January 2nd Upload
                  upload_user: 
                  upload_password: 
                  upload_url: sftp://upload.test:2022
                  mappings: []
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: 
                  last_metadata_review_at: 
                  last_mappings_change_at: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/harvest"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/harvest"
  "/harvests/filter":
    post:
      summary: filter harvest
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/harvests/filter?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 125
                  creator_id: 686
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: false
                  status: new_harvest
                  project_id: 169
                  name: January 2nd Upload
                  upload_user: 
                  upload_password: 
                  upload_url: sftp://upload.test:2022
                  mappings: []
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: 
                  last_metadata_review_at: 
                  last_mappings_change_at: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/harvest"
  "/harvests":
    get:
      summary: list harvests
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/harvests?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 126
                  creator_id: 690
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: false
                  status: new_harvest
                  project_id: 170
                  name: January 2nd Upload
                  upload_user: 
                  upload_password: 
                  upload_url: sftp://upload.test:2022
                  mappings: []
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: 
                  last_metadata_review_at: 
                  last_mappings_change_at: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/harvest"
    post:
      summary: create harvest
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - harvests
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 128
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  streaming: true
                  status: uploading
                  project_id: 171
                  name: January 2nd Upload
                  upload_user: Admin_128
                  upload_password: CMW3MoUcFYnYgx9aLEvf4ban
                  upload_url: sftp://upload.test:2022
                  mappings:
                  - path: '151'
                    site_id: 151
                    utc_offset: 
                    recursive: true
                  report:
                    items_total: 0
                    items_size_bytes: 0
                    items_duration_seconds: 0.0
                    items_new: 0
                    items_metadata_gathered: 0
                    items_failed: 0
                    items_completed: 0
                    items_errored: 0
                    items_invalid_fixable: 0
                    items_invalid_not_fixable: 0
                    latest_activity_at: 
                    run_time_seconds: 
                  last_upload_at: '2020-01-02T03:04:05.677Z'
                  last_metadata_review_at: 
                  last_mappings_change_at: '2020-01-02T03:04:05.677Z'
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/harvest"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/harvest"
  "/regions":
    post:
      summary: create region
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 155
                  name: region name 157
                  description: site **description** 157
                  notes:
                    region_note_157: 157
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 173
                  site_ids: []
                  description_html: "<p>site <strong>description</strong> 157</p>\n"
                  description_html_tagline: site <strong>description</strong> 157
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
    get:
      summary: list regions
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/regions?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 156
                  name: region name 158
                  description: site **description** 158
                  notes:
                    region_note_158: 158
                  creator_id: 704
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 174
                  site_ids:
                  - 153
                  description_html: "<p>site <strong>description</strong> 158</p>\n"
                  description_html_tagline: site <strong>description</strong> 158
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/region"
  "/regions/filter":
    post:
      summary: filter region
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/regions/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 157
                  name: region name 159
                  description: site **description** 159
                  notes:
                    region_note_159: 159
                  creator_id: 708
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 175
                  site_ids:
                  - 154
                  description_html: "<p>site <strong>description</strong> 159</p>\n"
                  description_html_tagline: site <strong>description</strong> 159
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/region"
  "/regions/{id}":
    put:
      summary: update region
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 158
                  name: region name 161
                  description: site **description** 161
                  notes:
                    region_note_161: 161
                  creator_id: 712
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 177
                  site_ids:
                  - 155
                  description_html: "<p>site <strong>description</strong> 161</p>\n"
                  description_html_tagline: site <strong>description</strong> 161
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
    get:
      summary: show region
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 159
                  name: region name 162
                  description: site **description** 162
                  notes:
                    region_note_162: 162
                  creator_id: 718
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 178
                  site_ids:
                  - 156
                  description_html: "<p>site <strong>description</strong> 162</p>\n"
                  description_html_tagline: site <strong>description</strong> 162
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
    patch:
      summary: update region
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 160
                  name: region name 164
                  description: site **description** 164
                  notes:
                    region_note_164: 164
                  creator_id: 722
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 180
                  site_ids:
                  - 157
                  description_html: "<p>site <strong>description</strong> 164</p>\n"
                  description_html_tagline: site <strong>description</strong> 164
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
    delete:
      summary: delete region
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/regions/new":
    get:
      summary: new region
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
                  notes: 
                  project_id: 
  "/analysis_jobs":
    get:
      summary: list analysis_jobs
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: updated_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/analysis_jobs?direction=desc&items=25&order_by=updated_at&page=1
                    previous: 
                    next: 
                data:
                - id: 116
                  name: job name 116
                  description: job description 116
                  creator_id: 737
                  updater_id: 
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  filter: {}
                  system_job: false
                  ongoing: false
                  project_id: 183
                  retry_count: 0
                  amend_count: 0
                  suspend_count: 0
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: preparing
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    status_new_count: 1
                    result_empty_count: 1
                    result_failed_count: 0
                    result_killed_count: 0
                    status_queued_count: 0
                    result_success_count: 0
                    status_working_count: 0
                    status_finished_count: 0
                    result_cancelled_count: 0
                    transition_empty_count: 0
                    transition_queue_count: 1
                    transition_retry_count: 0
                    transition_cancel_count: 0
                    transition_finish_count: 0
                  script_ids:
                  - 118
                  audio_event_import_ids: []
                  overall_count: 1
                  overall_duration_seconds: 60.0
                  overall_data_length_bytes: 1024
                  description_html_tagline: job description 116
                  description_html: "<p>job description 116</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/analysis_job"
    post:
      summary: create analysis_job
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 118
                  name: test job
                  description: test job **description**
                  creator_id: 1
                  updater_id: 1
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  filter: {}
                  system_job: true
                  ongoing: true
                  project_id: 
                  retry_count: 0
                  amend_count: 0
                  suspend_count: 0
                  started_at: 
                  overall_status: processing
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_count: 1
                  overall_duration_seconds: 60000.0
                  overall_data_length_bytes: 3800
                  description_html_tagline: test job <strong>description</strong>
                  description_html: "<p>test job <strong>description</strong></p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/analysis_job"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/analysis_job"
  "/analysis_jobs/{id}/suspend":
    post:
      summary: suspend analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/analysis_jobs/{id}":
    delete:
      summary: delete analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    get:
      summary: show analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 121
                  name: job name 120
                  description: job description 120
                  creator_id: 753
                  updater_id: 
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  filter: {}
                  system_job: false
                  ongoing: false
                  project_id: 187
                  retry_count: 0
                  amend_count: 0
                  suspend_count: 0
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: completed
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    status_new_count: 1
                    result_empty_count: 1
                    result_failed_count: 0
                    result_killed_count: 0
                    status_queued_count: 0
                    result_success_count: 0
                    status_working_count: 0
                    status_finished_count: 0
                    result_cancelled_count: 0
                    transition_empty_count: 0
                    transition_queue_count: 1
                    transition_retry_count: 0
                    transition_cancel_count: 0
                    transition_finish_count: 0
                  script_ids:
                  - 122
                  audio_event_import_ids: []
                  overall_count: 1
                  overall_duration_seconds: 60.0
                  overall_data_length_bytes: 1024
                  description_html_tagline: job description 120
                  description_html: "<p>job description 120</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/analysis_job"
    patch:
      summary: update analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 122
                  name: job name 122
                  description: job description 122
                  creator_id: 757
                  updater_id: 1
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  filter: {}
                  system_job: false
                  ongoing: false
                  project_id: 188
                  retry_count: 0
                  amend_count: 0
                  suspend_count: 0
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: completed
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    status_new_count: 1
                    result_empty_count: 1
                    result_failed_count: 0
                    result_killed_count: 0
                    status_queued_count: 0
                    result_success_count: 0
                    status_working_count: 0
                    status_finished_count: 0
                    result_cancelled_count: 0
                    transition_empty_count: 0
                    transition_queue_count: 1
                    transition_retry_count: 0
                    transition_cancel_count: 0
                    transition_finish_count: 0
                  script_ids:
                  - 123
                  audio_event_import_ids: []
                  overall_count: 1
                  overall_duration_seconds: 60.0
                  overall_data_length_bytes: 1024
                  description_html_tagline: job description 122
                  description_html: "<p>job description 122</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/analysis_job"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/analysis_job"
    put:
      summary: update analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 123
                  name: job name 124
                  description: job description 124
                  creator_id: 767
                  updater_id: 1
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  filter: {}
                  system_job: false
                  ongoing: false
                  project_id: 190
                  retry_count: 0
                  amend_count: 0
                  suspend_count: 0
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: completed
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    status_new_count: 1
                    result_empty_count: 1
                    result_failed_count: 0
                    result_killed_count: 0
                    status_queued_count: 0
                    result_success_count: 0
                    status_working_count: 0
                    status_finished_count: 0
                    result_cancelled_count: 0
                    transition_empty_count: 0
                    transition_queue_count: 1
                    transition_retry_count: 0
                    transition_cancel_count: 0
                    transition_finish_count: 0
                  script_ids:
                  - 126
                  audio_event_import_ids: []
                  overall_count: 1
                  overall_duration_seconds: 60.0
                  overall_data_length_bytes: 1024
                  description_html_tagline: job description 124
                  description_html: "<p>job description 124</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/analysis_job"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/analysis_job"
  "/analysis_jobs/{id}/resume":
    post:
      summary: resume analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/analysis_jobs/new":
    get:
      summary: new analysis_job
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
                  project_id: 
                  system_job: false
                  ongoing: false
                  scripts: []
                  filter: {}
  "/analysis_jobs/filter":
    post:
      summary: filter analysis_job
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: updated_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/analysis_jobs/filter?direction=desc&items=25&order_by=updated_at&page=1
                    previous: 
                    next: 
                data:
                - id: 126
                  name: job name 127
                  description: job description 127
                  creator_id: 785
                  updater_id: 
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  filter: {}
                  system_job: false
                  ongoing: false
                  project_id: 194
                  retry_count: 0
                  amend_count: 0
                  suspend_count: 0
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: preparing
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    status_new_count: 1
                    result_empty_count: 1
                    result_failed_count: 0
                    result_killed_count: 0
                    status_queued_count: 0
                    result_success_count: 0
                    status_working_count: 0
                    status_finished_count: 0
                    result_cancelled_count: 0
                    transition_empty_count: 0
                    transition_queue_count: 1
                    transition_retry_count: 0
                    transition_cancel_count: 0
                    transition_finish_count: 0
                  script_ids:
                  - 131
                  audio_event_import_ids: []
                  overall_count: 1
                  overall_duration_seconds: 60.0
                  overall_data_length_bytes: 1024
                  description_html_tagline: job description 127
                  description_html: "<p>job description 127</p>\n"
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/analysis_job"
  "/analysis_jobs/{id}/retry":
    post:
      summary: retry analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/analysis_jobs/{id}/amend":
    post:
      summary: amend analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/datasets":
    get:
      summary: list datasets
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/datasets?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 128
                  name: gen_dataset_name127
                  description: dataset description 127
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 796
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  description_html: "<p>dataset description 127</p>\n"
                  description_html_tagline: dataset description 127
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/dataset"
    post:
      summary: create dataset
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 130
                  name: gen_dataset_name129
                  description: dataset description 129
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  description_html: "<p>dataset description 129</p>\n"
                  description_html_tagline: dataset description 129
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/dataset"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/dataset"
  "/datasets/{id}":
    get:
      summary: show dataset
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 131
                  name: gen_dataset_name130
                  description: dataset description 130
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 805
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  description_html: "<p>dataset description 130</p>\n"
                  description_html_tagline: dataset description 130
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/dataset"
    patch:
      summary: update dataset
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 132
                  name: gen_dataset_name132
                  description: dataset description 132
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 809
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  description_html: "<p>dataset description 132</p>\n"
                  description_html_tagline: dataset description 132
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/dataset"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/dataset"
    put:
      summary: update dataset
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 133
                  name: gen_dataset_name134
                  description: dataset description 134
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 814
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  description_html: "<p>dataset description 134</p>\n"
                  description_html_tagline: dataset description 134
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/dataset"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/dataset"
    delete:
      summary: can't delete a dataset
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: datasets/134
                      original_http_method: DELETE
                data: 
  "/datasets/new":
    get:
      summary: new dataset
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
  "/datasets/filter":
    post:
      summary: filter dataset
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/datasets/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 136
                  name: gen_dataset_name137
                  description: dataset description 137
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 827
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  description_html: "<p>dataset description 137</p>\n"
                  description_html_tagline: dataset description 137
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/dataset"
  "/projects/{project_id}/sites/filter":
    post:
      summary: filter site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/projects/205/sites/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 180
                  name: site name 181
                  description: site description 181
                  notes: note number 181
                  creator_id: 831
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 183
                  custom_latitude: -65.574286
                  custom_longitude: 88.25134
                  location_obfuscated: false
                  project_ids:
                  - 205
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 181</p>\n"
                  description_html_tagline: site description 181
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/projects/{project_id}/sites/new":
    get:
      summary: new site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  longitude: 
                  latitude: 
                  notes: 
                  image: 
                  tzinfo_tz: 
                  rails_tz: 
  "/projects/{project_id}/sites/{id}":
    put:
      summary: update site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 182
                  name: site name 184
                  description: site description 184
                  notes: note number 184
                  creator_id: 839
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 186
                  custom_latitude: -1.764406
                  custom_longitude: -88.616317
                  location_obfuscated: false
                  project_ids:
                  - 207
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 184</p>\n"
                  description_html_tagline: site description 184
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    get:
      summary: show site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 183
                  name: site name 185
                  description: site description 185
                  notes: note number 185
                  creator_id: 846
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 187
                  custom_latitude: 40.736347
                  custom_longitude: -99.134868
                  location_obfuscated: false
                  project_ids:
                  - 209
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 185</p>\n"
                  description_html_tagline: site description 185
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
    patch:
      summary: update site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 184
                  name: site name 187
                  description: site description 187
                  notes: note number 187
                  creator_id: 850
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 189
                  custom_latitude: 73.654266
                  custom_longitude: 76.316926
                  location_obfuscated: false
                  project_ids:
                  - 210
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 187</p>\n"
                  description_html_tagline: site description 187
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    delete:
      summary: delete site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/projects/{project_id}/sites":
    post:
      summary: create site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 187
                  name: site name 190
                  description: site description 190
                  notes: note number 190
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 192
                  custom_latitude: 
                  custom_longitude: 
                  location_obfuscated: false
                  project_ids:
                  - 213
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 190</p>\n"
                  description_html_tagline: site description 190
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    get:
      summary: list sites
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://web:3000/projects/215/sites?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 188
                  name: site name 191
                  description: site description 191
                  notes: note number 191
                  creator_id: 868
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 193
                  custom_latitude: -22.670689
                  custom_longitude: 16.212122
                  location_obfuscated: false
                  project_ids:
                  - 215
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 191</p>\n"
                  description_html_tagline: site description 191
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
servers:
- url: "{protocol}://{authority}"
  variables:
    authority:
      default: localhost:3000
    protocol:
      enum:
      - http
      - https
      default: http
components:
  securitySchemes:
    auth_token_header:
      type: apiKey
      description: |
        The api auth_token placed in the 'Authorization' header.
        Example:

        ```
        Token token="xxxxxxxxxx"
        ```

        Where the your auth_token is substituted into the placeholder.
      in: header
      name: Authorization
      scheme: Token
    auth_token_query_string:
      type: apiKey
      name: user_token
      in: query_string
    cookie:
      type: apiKey
      name: cookie
      scheme: apiKey
      in: header
    jwt:
      type: bearer
      name: Authorization
      in: header
  schemas:
    id:
      type: integer
      minimum: 0
      readOnly: true
    nullableId:
      type:
      - integer
      - 'null'
      minimum: 0
      readOnly: true
    timezone_information:
      anyOf:
      - type: object
        properties:
          identifier_alt:
            type:
            - string
            - 'null'
          identifier:
            type: string
          friendly_identifier:
            type: string
          utc_offset:
            type: string
          utc_total_offset:
            type: integer
      - type: 'null'
    image_urls:
      type: array
      items:
        type: object
        properties:
          size:
            type: string
          url:
            type: string
            format: URI
          width:
            type: integer
            nullable: true
          height:
            type: integer
            nullable: true
    permission_levels:
      type: string
      nullable: true
      enum:
      - owner
      - writer
      - reader
      - 
    meta:
      properties:
        capabilities:
          type: object
          items:
            type: object
            properties:
              can:
                type:
                - 'null'
                - boolean
              details:
                type: string
            required:
            - can
      type: object
    meta_error:
      type: object
      properties:
        error:
          type: object
          additionalProperties: false
          properties:
            details:
              description: A human readable description of the error
              type: string
            info:
              description: Freeform additional information about the error
              type:
              - 'null'
              - object
              - string
              - array
            links:
              type: object
              items:
                type: object
                properties:
                  text:
                    type: string
                  url:
                    type: string
              required:
              - text
        required:
        - error
    standard_response:
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/meta"
        data:
          oneOf:
          - type: array
          - type: object
      required:
      - meta
      - data
    error_response:
      type: object
      additionalProperties: false
      properties:
        meta:
          allOf:
          - "$ref": "#/components/schemas/meta"
          - "$ref": "#/components/schemas/meta_error"
        data:
          type: 'null'
      required:
      - meta
      - data
    cms_blob:
      type: object
      required:
      - id
      - site_id
      - layout_id
      - parent_id
      - target_page_id
      - label
      - slug
      - full_path
      - content
      - position
      - children_count
      - is_published
      - created_at
      - updated_at
      - children
      properties:
        id:
          "$ref": "#/components/schemas/id"
        site_id:
          "$ref": "#/components/schemas/id"
        layout_id:
          "$ref": "#/components/schemas/id"
        parent_id:
          "$ref": "#/components/schemas/nullableId"
        target_page_id:
          "$ref": "#/components/schemas/nullableId"
        label:
          type: string
        slug:
          type: string
        full_path:
          type: string
          format: uri-reference
        content:
          type: string
          format: html
        position:
          type: integer
        children_count:
          type: integer
        is_published:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        children:
          type: array
          additionalItems: true
          items:
            type: object
            properties:
              label:
                type: string
              full_path:
                type: string
                format: uri-reference
            additionalProperties: false
      additionalProperties: false
    security:
      type: object
      required:
      - user_name
      - auth_token
      - user_id
      properties:
        user_name:
          type: string
          readOnly: true
        auth_token:
          type: string
          readOnly: true
        user_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        message:
          type: string
          readOnly: true
    stats:
      type: object
      required:
      - summary
      - recent
      properties:
        summary:
          type: object
          properties:
            users_online:
              type: integer
            users_total:
              type: integer
            online_window_start:
              type: string
              format: date-time
              readOnly: true
            projects_total:
              type: integer
            regions_total:
              type: integer
            sites_total:
              type: integer
            annotations_total:
              type: integer
            annotations_total_duration:
              type: number
            annotations_recent:
              type: integer
            audio_recordings_total:
              type: integer
            audio_recordings_recent:
              type: integer
            audio_recordings_total_duration:
              type: number
            audio_recordings_total_size:
              type: integer
            tags_total:
              type: integer
            tags_applied_total:
              type: integer
            tags_applied_unique_total:
              type: integer
        recent:
          type: object
          properties:
            audio_recording_ids:
              type: array
              items:
                "$ref": "#/components/schemas/id"
            audio_event_ids:
              type: array
              items:
                "$ref": "#/components/schemas/id"
      additionalProperties: false
    project:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        notes:
          type: string
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        site_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        region_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        owner_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        image_urls:
          "$ref": "#/components/schemas/image_urls"
        access_level:
          "$ref": "#/components/schemas/permission_levels"
        allow_original_download:
          "$ref": "#/components/schemas/permission_levels"
        allow_audio_upload:
          type: boolean
        license:
          type:
          - string
          - 'null'
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - notes
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - owner_ids
      - site_ids
      - region_ids
      - image_urls
      - allow_original_download
      - license
    analysis_job:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        filter:
          type: object
        system_job:
          type: boolean
        ongoing:
          type: boolean
        project_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        retry_count:
          type: integer
          readOnly: true
        amend_count:
          type: integer
          readOnly: true
        suspend_count:
          type: integer
          readOnly: true
        started_at:
          type:
          - 'null'
          - date
          readOnly: true
        overall_status:
          type: string
          enum:
          - preparing
          - processing
          - completed
          - suspended
          readOnly: true
        overall_status_modified_at:
          type:
          - 'null'
          - date
          readOnly: true
        overall_progress:
          type: object
          properties:
            status_new_count:
              type: integer
              readOnly: true
            status_queued_count:
              type: integer
              readOnly: true
            status_working_count:
              type: integer
              readOnly: true
            status_finished_count:
              type: integer
              readOnly: true
            transition_empty_count:
              type: integer
              readOnly: true
            transition_queue_count:
              type: integer
              readOnly: true
            transition_cancel_count:
              type: integer
              readOnly: true
            transition_retry_count:
              type: integer
              readOnly: true
            transition_finish_count:
              type: integer
              readOnly: true
            result_empty_count:
              type: integer
              readOnly: true
            result_success_count:
              type: integer
              readOnly: true
            result_failed_count:
              type: integer
              readOnly: true
            result_killed_count:
              type: integer
              readOnly: true
            result_cancelled_count:
              type: integer
              readOnly: true
          readOnly: true
        overall_count:
          type: integer
          readOnly: true
        overall_duration_seconds:
          type: number
          readOnly: true
        overall_data_length_bytes:
          type: integer
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        script_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        audio_event_import_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        transition:
          type: string
          enum:
          - retry
          - resume
          - suspend
          - amend
          writeOnly: true
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - filter
      - system_job
      - ongoing
      - retry_count
      - amend_count
      - suspend_count
      - started_at
      - overall_status
      - overall_status_modified_at
      - overall_count
      - overall_duration_seconds
      - overall_data_length_bytes
    analysis_jobs_item:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        analysis_job_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        audio_recording_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        script_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        queued_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        work_started_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        finished_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        queue_id:
          type:
          - 'null'
          - string
          readOnly: true
        error:
          type:
          - 'null'
          - string
          readOnly: true
        attempts:
          type: integer
          readOnly: true
        status:
          type: string
          enum:
          - new
          - queued
          - working
          - finished
          readOnly: true
        transition:
          type: string
          enum:
          - queue
          - cancel
          - retry
          - finish
          readOnly: true
        audio_event_import_file_ids:
          type:
          - 'null'
          - array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        import_success:
          type:
          - 'null'
          - boolean
          readOnly: true
      required:
      - id
      - analysis_job_id
      - audio_recording_id
      - script_id
      - created_at
      - queued_at
      - work_started_at
      - finished_at
      - queue_id
      - error
      - attempts
      - status
      - audio_event_import_file_ids
      - import_success
    bookmark:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        audio_recording_id:
          "$ref": "#/components/schemas/id"
        name:
          type: string
        category:
          type: string
        offset_seconds:
          type: number
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - audio_recording_id
      - name
      - category
      - offset_seconds
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
    dataset:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - description
      - created_at
      - creator_id
      - updated_at
      - updater_id
    saved_search:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        analysis_job_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
        project_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        stored_query:
          type: object
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - stored_query
      - creator_id
      - created_at
      - deleter_id
      - deleted_at
    script:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        group_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        analysis_identifier:
          type: string
        executable_settings:
          type: string
        executable_settings_media_type:
          type: string
        version:
          type: number
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_last_version:
          type: boolean
          readOnly: true
        is_first_version:
          type: boolean
          readOnly: true
        event_import_glob:
          type: string
          readOnly: true
        provenance_id:
          "$ref": "#/components/schemas/id"
          readOnly: false
      required:
      - id
      - group_id
      - name
      - description
      - analysis_identifier
      - executable_settings_media_type
      - version
      - created_at
      - creator_id
      - is_last_version
      - is_first_version
      - event_import_glob
      - provenance_id
    site:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        notes:
          type: string
        project_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
        location_obfuscated:
          type: boolean
        custom_latitude:
          type:
          - number
          - 'null'
          minimum: -90
          maximum: 90
        custom_longitude:
          type:
          - number
          - 'null'
          minimum: -180
          maximum: 180
        timezone_information:
          "$ref": "#/components/schemas/timezone_information"
          readOnly: false
        image_urls:
          "$ref": "#/components/schemas/image_urls"
        region_id:
          "$ref": "#/components/schemas/nullableId"
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - notes
      - project_ids
      - location_obfuscated
      - custom_latitude
      - custom_longitude
      - timezone_information
      - image_urls
      - region_id
    region:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        notes:
          type: object
        project_id:
          "$ref": "#/components/schemas/id"
        site_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
          readOnly: true
        image_urls:
          "$ref": "#/components/schemas/image_urls"
        image:
          type: string
          format: binary
          writeOnly: true
          nullable: true
      required:
      - id
      - name
      - notes
      - project_id
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - site_ids
      - image_urls
    audio_recording:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        site_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        duration_seconds:
          type: number
        sample_rate_hertz:
          type: number
        channels:
          type: number
        bit_rate_bps:
          type: number
        media_type:
          type: string
        data_length_bytes:
          type: number
        status:
          type: string
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        recorded_date:
          type: string
          format: date-time
          readOnly: false
        file_hash:
          type: string
        notes:
          type: object
        recorded_date_timezone:
          type:
          - 'null'
          - string
        uploader_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: false
        original_file_name:
          type: string
        canonical_file_name:
          type: string
          readOnly: true
        recorded_utc_offset:
          type:
          - 'null'
          - string
          readOnly: true
      required:
      - id
      - uuid
      - site_id
      - duration_seconds
      - sample_rate_hertz
      - channels
      - bit_rate_bps
      - media_type
      - data_length_bytes
      - status
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - recorded_date
      - file_hash
      - notes
      - uploader_id
      - original_file_name
      - canonical_file_name
      - recorded_utc_offset
    permission:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        project_id:
          "$ref": "#/components/schemas/id"
          readOnly: false
        level:
          "$ref": "#/components/schemas/permission_levels"
        user_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: false
        allow_logged_in:
          type: boolean
        allow_anonymous:
          type: boolean
      required:
      - id
      - project_id
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - level
      - user_id
      - allow_anonymous
      - allow_logged_in
    harvest:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type:
          - 'null'
          - string
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        project_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        streaming:
          type: boolean
        status:
          type: string
          enum:
          - new_harvest
          - uploading
          - scanning
          - metadata_extraction
          - metadata_review
          - processing
          - complete
        last_upload_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        last_metadata_review_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        last_mappings_change_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        upload_user:
          type:
          - 'null'
          - string
          readOnly: true
        upload_password:
          type:
          - 'null'
          - string
          readOnly: true
        upload_url:
          type:
          - 'null'
          - string
          format: url
          readOnly: true
        mappings:
          type:
          - array
          - 'null'
          items:
            type: object
            properties:
              path:
                type: string
              site_id:
                type:
                  "$ref": "#/components/schemas/nullableId"
                  readOnly: true
        report:
          type: object
          readOnly: true
          properties:
            items_total:
              type: integer
            items_size_bytes:
              type: integer
            items_duration_seconds:
              type: number
            items_invalid_fixable:
              type: integer
            items_invalid_not_fixable:
              type: integer
            items_new:
              type: integer
            items_metadata_gathered:
              type: integer
            items_failed:
              type: integer
            items_completed:
              type: integer
            items_errored:
              type: integer
            latest_activity_at:
              type:
              - 'null'
              - string
              format: date-time
            run_time_seconds:
              type:
              - 'null'
              - number
      required:
      - id
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - project_id
      - status
      - streaming
      - upload_user
      - upload_password
      - upload_url
      - mappings
      - report
    harvest_item:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted:
          type: boolean
          readOnly: true
        path:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - new
          - metadata_gathered
          - failed
          - completed
          - errored
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        audio_recording_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        uploader_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        harvest_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        validations:
          type: array
          readOnly: true
          items:
            type: object
            additionalProperties: false
            properties:
              status:
                type: string
                readOnly: true
                enum:
                - fixable
                - not_fixable
              message:
                type: string
                readOnly: true
              name:
                type: string
                readOnly: true
        report:
          type: object
          readOnly: true
          properties:
            items_total:
              type: integer
            items_size_bytes:
              type:
              - 'null'
              - integer
            items_duration_seconds:
              type:
              - 'null'
              - integer
            items_invalid_fixable:
              type: integer
            items_invalid_not_fixable:
              type: integer
            items_new:
              type: integer
            items_metadata_gathered:
              type: integer
            items_failed:
              type: integer
            items_completed:
              type: integer
            items_errored:
              type: integer
    audio_event_import:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        analysis_job_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
    audio_event_import_file:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        additional_tag_ids:
          type:
          - 'null'
          - array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        file_hash:
          type: string
          readOnly: true
        path:
          type:
          - 'null'
          - string
          readOnly: true
        name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        audio_event_import_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        analysis_jobs_item_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
      required:
      - id
      - additional_tag_ids
      - file_hash
      - path
      - name
      - created_at
      - audio_event_import_id
      - analysis_jobs_item_id
    audio_event:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        audio_recording_id:
          "$ref": "#/components/schemas/id"
          readOnly: false
        start_time_seconds:
          type: number
          readOnly: false
        end_time_seconds:
          type: number
          readOnly: false
        low_frequency_hertz:
          type: number
          readOnly: false
        high_frequency_hertz:
          type: number
          readOnly: false
        is_reference:
          type: boolean
          readOnly: false
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        duration_seconds:
          type: number
          readOnly: true
        taggings:
          type: array
          items:
            type: object
            properties:
              id:
                "$ref": "#/components/schemas/id"
                readOnly: true
              audio_event_id:
                "$ref": "#/components/schemas/id"
                readOnly: true
              tag_id:
                "$ref": "#/components/schemas/id"
                readOnly: true
              creator_id:
                "$ref": "#/components/schemas/id"
                readOnly: true
              created_at:
                type: string
                format: date-time
                readOnly: true
              updater_id:
                "$ref": "#/components/schemas/nullableId"
                readOnly: true
              updated_at:
                type:
                - 'null'
                - string
                format: date-time
                readOnly: true
        audio_event_import_file_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        import_file_index:
          type:
          - 'null'
          - integer
          readOnly: true
        provenance_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        channel:
          type:
          - 'null'
          - integer
    provenance:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        version:
          type: string
        url:
          type: string
          format: uri
        score_minimum:
          type:
          - number
          - 'null'
        score_maximum:
          type:
          - number
          - 'null'
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - version
      - url
      - score_minimum
      - score_maximum
  parameters:
    archived-parameter:
      name: with_archived
      getter: archived_qsp
      in: query
      schema:
        type: boolean
      required: false
      allowEmptyValue: true
