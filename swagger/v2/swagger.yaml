---
openapi: 3.0.1
info:
  title: Acoustic Workbench API
  version: v2
produces:
- application/json
consumes:
- application/json
paths:
  "/cms/{child_path}":
    get:
      summary: Retrieves the a child blob (rendered HTML)
      tags:
      - CMS
      parameters:
      - name: child_path
        in: path
        required: true
        schema:
          type: string
      security: 
      responses:
        '200':
          description: blob retrieved
          content:
            application/json:
              example:
                id: 2
                site_id: 1
                layout_id: 1
                parent_id: 1
                target_page_id: 
                label: Credits
                slug: credits
                full_path: "/credits"
                position: 0
                children_count: 0
                is_published: true
                created_at: '2020-01-02T03:04:05.677Z'
                updated_at: '2020-01-02T03:04:05.677Z'
                content: |-
                  <link href='/cms/cms-css/1/default/1577934245.css' media='screen' rel='stylesheet' type='text/css' />

                  <h1>Credits</h1>
                  <p>The development of this web application was an initiative of the
                  <a href="https://www.qut.edu.au/">Queensland University of Technologyâ€™s</a>
                  <a href="http://research.ecosounds.org/">Ecoacoustics Research Group</a>.
                  This website makes use of a range of other technologies and libraries.</p>

                  <p>More information can be found on the
                  <a href="https://github.com/QutEcoacoustics">QutEcoacoustics</a> Github project page.</p>

                  <h2 id="programs-and-libraries">Programs and libraries</h2>

                  <ul>
                    <li><a href="http://rubyonrails.org/">Ruby on Rails</a> (with a number of additional gems)</li>
                    <li><a href="https://github.com/resque/resque">Resque</a></li>
                    <li><a href="http://redis.io">Redis</a></li>
                    <li>Command line audio tools:</li>
                    <li><a href="http://www.ffmpeg.org/">ffmpeg</a> (for audio conversion and gathering audio file information)</li>
                    <li><a href="http://sox.sourceforge.net/">SoX</a> (to create spectrograms and resample audio)</li>
                    <li><a href="http://www.wavpack.com/">WavPack</a> (to expand compressed .wv files)</li>
                    <li><a href="http://mp3splt.sourceforge.net/mp3splt_page/home.php">mp3split</a> (for quickly segmenting large .mp3 files)</li>
                    <li><a href="https://angularjs.org/">AngularJS</a></li>
                    <li><a href="https://d3js.org/">D3.js</a></li>
                  </ul>

                  <h2 id="platforms-and-services">Platforms and services</h2>

                  <ul>
                    <li><a href="https://github.com">Github</a></li>
                    <li><a href="https://www.qriscloud.org.au/">QRISCloud</a></li>
                    <li><a href="https://https://nectar.org.au/">nectar</a></li>
                  </ul>


                  <script src='/cms/cms-js/1/default/1577934245.js' type='text/javascript'></script>
                children: []
              schema:
                "$ref": "#/components/schemas/cms_blob"
  "/cms":
    get:
      summary: Retrieves the index blob (rendered HTML)
      tags:
      - cms
      security: 
      parameters: []
      responses:
        '200':
          description: blob retrieved
          content:
            application/json:
              example:
                id: 11
                site_id: 3
                layout_id: 3
                parent_id: 
                target_page_id: 
                label: Home
                slug: index
                full_path: "/"
                position: 0
                children_count: 4
                is_published: true
                created_at: '2020-01-02T03:04:05.677Z'
                updated_at: '2020-01-02T03:04:05.677Z'
                content: |-
                  <link href='/cms/cms-css/3/default/1577934245.css' media='screen' rel='stylesheet' type='text/css' />

                  <h1></h1>
                  <p>Welcome! This is an Acoustic Workbench website. It is a repository of
                  environmental audio recordings.</p>


                  <script src='/cms/cms-js/3/default/1577934245.js' type='text/javascript'></script>
                children:
                - label: Credits
                  full_path: "/credits"
                - label: Data Upload
                  full_path: "/data_upload"
                - label: Ethics
                  full_path: "/ethics"
                - label: Privacy
                  full_path: "/privacy"
              schema:
                "$ref": "#/components/schemas/cms_blob"
  "/projects/{id}":
    patch:
      summary: update project
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 1
                  name: gen_project2
                  description: project description 2
                  creator_id: 3
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 2
                  allow_original_download: 
                  site_ids:
                  - 1
                  region_ids:
                  - 1
                  owner_ids:
                  - 3
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 2</p>\n"
                  description_html_tagline: project description 2
                  access_level: Owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/project"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/project"
    get:
      summary: show project
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 2
                  name: gen_project3
                  description: project description 3
                  creator_id: 8
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 3
                  allow_original_download: 
                  site_ids:
                  - 2
                  region_ids:
                  - 2
                  owner_ids:
                  - 8
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 3</p>\n"
                  description_html_tagline: project description 3
                  access_level: Owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/project"
    delete:
      summary: delete project
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    put:
      summary: update project
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 4
                  name: gen_project6
                  description: project description 6
                  creator_id: 16
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 6
                  allow_original_download: 
                  site_ids:
                  - 4
                  region_ids:
                  - 4
                  owner_ids:
                  - 16
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 6</p>\n"
                  description_html_tagline: project description 6
                  access_level: Owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/project"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/project"
  "/projects/filter":
    post:
      summary: filter project
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/projects/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 5
                  name: gen_project7
                  description: project description 7
                  creator_id: 21
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 7
                  allow_original_download: 
                  site_ids:
                  - 5
                  region_ids:
                  - 5
                  owner_ids:
                  - 21
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 7</p>\n"
                  description_html_tagline: project description 7
                  access_level: Owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/project"
  "/projects":
    get:
      summary: list projects
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/projects?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 6
                  name: gen_project8
                  description: project description 8
                  creator_id: 25
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 8
                  allow_original_download: 
                  site_ids:
                  - 6
                  region_ids:
                  - 6
                  owner_ids:
                  - 25
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 8</p>\n"
                  description_html_tagline: project description 8
                  access_level: Owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/project"
    post:
      summary: create project
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 8
                  name: gen_project10
                  description: project description 10
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  notes: note number 10
                  allow_original_download: 
                  site_ids: []
                  region_ids: []
                  owner_ids:
                  - 1
                  image_urls:
                  - size: extralarge
                    url: "/images/project/project_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/project/project_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/project/project_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/project/project_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/project/project_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>project description 10</p>\n"
                  description_html_tagline: project description 10
                  access_level: Owner
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/project"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/project"
  "/projects/new":
    get:
      summary: new project
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - projects
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
                  allow_original_download: false
                  notes: 
  "/scripts":
    get:
      summary: list scripts
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - scripts
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/scripts?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 9
                  group_id: 9
                  name: script name 9
                  description: script description 9
                  analysis_identifier: script machine identifier 9
                  executable_settings: executable settings 9
                  executable_settings_media_type: text/plain
                  version: 0.09
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  analysis_action_params:
                    file_executable: "./AnalysisPrograms/AnalysisPrograms.exe"
                    copy_paths:
                    - "./programs/AnalysisPrograms/Logs/log.txt"
                    sub_folders: []
                    custom_setting: 9
                  is_last_version: true
                  is_first_version: true
                  description_html: "<p>script description 9</p>\n"
                  description_html_tagline: script description 9
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/script"
  "/scripts/{id}":
    get:
      summary: show script
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - scripts
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 10
                  group_id: 10
                  name: script name 10
                  description: script description 10
                  analysis_identifier: script machine identifier 10
                  executable_settings: executable settings 10
                  executable_settings_media_type: text/plain
                  version: 0.1
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  analysis_action_params:
                    file_executable: "./AnalysisPrograms/AnalysisPrograms.exe"
                    copy_paths:
                    - "./programs/AnalysisPrograms/Logs/log.txt"
                    sub_folders: []
                    custom_setting: 10
                  is_last_version: true
                  is_first_version: true
                  description_html: "<p>script description 10</p>\n"
                  description_html_tagline: script description 10
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/script"
  "/scripts/filter":
    post:
      summary: filter script
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - scripts
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/scripts/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 11
                  group_id: 11
                  name: script name 11
                  description: script description 11
                  analysis_identifier: script machine identifier 11
                  executable_settings: executable settings 11
                  executable_settings_media_type: text/plain
                  version: 0.11
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  analysis_action_params:
                    file_executable: "./AnalysisPrograms/AnalysisPrograms.exe"
                    copy_paths:
                    - "./programs/AnalysisPrograms/Logs/log.txt"
                    sub_folders: []
                    custom_setting: 11
                  is_last_version: true
                  is_first_version: true
                  description_html: "<p>script description 11</p>\n"
                  description_html_tagline: script description 11
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/script"
  "/audio_recordings/{id}/original":
    get:
      summary: Downloads an original audio file
      tags:
      - media
      - audio_recordings
      - audio_recordings
      - audio_recordings
      parameters:
      - name: id
        in: path
        description: ID of the audio recording
        required: true
        schema:
          type: string
      security:
      - auth_token_header: []
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
        '401':
          description: unauthorized
        '200':
          description: original audio file
    head:
      summary: Gets HTTP headers for an original audio file
      tags:
      - media
      - audio_recordings
      - audio_recordings
      - audio_recordings
      parameters:
      - name: id
        in: path
        description: ID of the audio recording
        required: true
        schema:
          type: string
      security:
      - auth_token_header: []
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: original audio file
        '404':
          description: not found
        '401':
          description: unauthorized
  "/audio_recordings/downloader":
    post:
      summary: Gets a templated script which can download original audio files. Accepts
        an audio recordings filter object
      tags:
      - downloader
      - audio_recordings
      consumes: 
      security:
      - auth_token_header: []
      parameters: []
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: templated script
          content:
            text/plain:
              example: |
                #!/usr/bin/env pwsh

                # Requires -Version 7
                <#

                .DESCRIPTION

                  Downloads a set of recordings from an acoustic workbench.
                  Will work on Windows, Linux, or MacOSX with PowerShell Core.
                  See https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.1
                  for installation instructions.

                  Version 5.1.0 from http://localhost:3000.

                .EXAMPLE

                On Windows:

                PS> ./download_audio_files.ps1

                .EXAMPLE

                On Linux/MacOSX:

                $ chmod +x download_audio_files.ps1
                $ ./download_audio_files.ps1

                #>

                param(
                  # Where to download the recordings. Defaults to the present working directory if not specified.
                  $target = $null,
                  # The username to use to login to the workbench. This value's default value is templated when the script is generated.
                  $user_name = $null,
                  # The auth token to use to login to the workbench. You only need to supply an auth token if you want to log in without a password.
                  $auth_token = $null,
                  # The filter to use to select audio recordings to download. This value's default value is templated when the script is generated.
                  # See https://github.com/QutEcoacoustics/baw-server/wiki/API:-Filtering for details on valid filters. This argument
                  # should be a valid JSON encoded string.
                  $filter = $null,
                  # The acoustic workbench instance to use. This value's default value is templated when the script is generated.
                  $workbench_url = $null
                )

                $InformationPreference = 'Continue'
                $ErrorActionPreference = 'Stop'
                # https://github.com/PowerShell/PowerShell/issues/14348
                $ProgressPreference = 'SilentlyContinue'

                Write-Information "Acoustic Workbench downloader script version 5.1.0"

                if ($null -eq $target) {
                  $target = $pwd
                }

                # templated values from script generation
                if ($null -eq $auth_token) {
                  if ($null -eq $user_name) {
                    $user_name = "Admin"
                    if (-not $user_name) {
                      Write-Error "user_name is required"
                      exit 1
                    }
                  }
                  Write-Information "User name: $user_name"
                }
                else {
                  Write-Information "Using supplied auth token $auth_token"
                }

                if ($null -eq $filter) {
                  $filter = @'
                {"sorting":{"order_by":"recorded_date","direction":"desc"},"paging":{"items":25},"projection":{"include":["id","recorded_date","sites.name","site_id","canonical_file_name"]}}
                '@
                }
                Write-Information "Filter: $filter"

                if ($null -eq $workbench_url) {
                  $workbench_url = "http://localhost:3000"
                }
                Write-Information "Workbench URL: $workbench_url"

                # end templated values


                # log in
                $headers = @{}

                if ($null -eq $auth_token) {
                  $credentials = Get-Credential -Message "Provide credentials for logging into $workbench_url" -UserName $user_name
                  $json_credentials = $credentials.GetNetworkCredential() | ForEach-Object{ @{"email"=$_.UserName;"password"=$_.Password}} | ConvertTo-Json

                  Write-Information "Logging in to workbench $workbench"


                    $auth_reponse = Invoke-WebRequest -Uri "$workbench_url/security" -Method POST -Body $json_credentials -Headers $headers -SkipHttpErrorCheck
                    if ($auth_reponse.BaseResponse.IsSuccessStatusCode) {
                      $auth_token = ($auth_reponse.Content | ConvertFrom-Json).data.auth_token
                    }
                    else {
                      Write-Error ("Login attempt failed ($($auth_reponse.StatusCode)) " + $auth_reponse.Content)
                      exit 1
                    }

                }
                else {
                  # we have auth token, nothing else to do?
                }
                $headers["Authorization"] = "Token token=`"$auth_token`""

                $json_headers = $headers.Clone()
                $json_headers["Content-Type"] = "application/json"
                $json_headers["Accept"] = "application/json"

                Write-Information "Downloading recordings"

                # start paging through results!
                $script:current_page = 0
                $script:max_page = $null
                function Get-NextPage() {
                  $script:current_page += 1
                  if (($null -ne $script:max_page) -and ($script:current_page -gt $script:max_page)) {
                    Write-Information "Reached end of pages"
                    return $null
                  }

                  Write-Information "Getting page $script:current_page"

                  $response = Invoke-RestMethod -Uri "$workbench_url/audio_recordings/filter?page=$script:current_page" `
                    -Method POST -Body $filter -Headers $json_headers -SkipHttpErrorCheck -StatusCodeVariable "status_code"

                  if ($status_code -ne 200) {
                    Write-Error ("Failed to get recordings ($status_code): ")
                    $response | Format-List | out-string | Write-Error
                    exit 1
                  }

                  $script:max_page = $response.meta.paging.max_page

                  Write-Information "Got page $script:current_page of $script:max_page, $($response.data.Count) recordings in this page."

                  return $response.data
                }

                $sites = @{}
                function Get-SiteName($raw_name) {
                  if ($sites.ContainsKey($raw_name)) {
                    return $sites[$raw_name]
                  }

                  # Safe folder names
                  $name = $raw_name -replace '[^-_A-Za-z0-9]',''
                  $sites[$raw_name] = $name
                  return $name
                }

                # make output directory
                New-Item -ItemType Directory -Path $target -Force | Out-Null

                while ($null -ne ($recordings = Get-NextPage )) {
                  foreach($recording in $recordings) {
                    Write-Information "Downloading recording $($recording.id)"
                    $recording | write-output

                    $audio_recording_id = $recording.id
                    $site_id = $recording.site_id
                    $name = $recording.canonical_file_name

                    $safe_site_name = Get-SiteName $recording.'sites.name'

                    $sub_folder = Join-Path $target "${site_id}_$safe_site_name"
                    New-Item -ItemType Directory -Path $sub_folder -Force | Out-Null

                    $path = Join-Path $sub_folder $name

                    Invoke-RestMethod -Uri "$workbench_url/audio_recordings/$audio_recording_id/original" `
                      -Method GET -Headers $headers -StatusCodeVariable "download_status_code" -OutFile $path

                    Write-Information "Downloaded recording $audio_recording_id to $path"
                  }
                }

                Write-Information "Done!"
    get:
      summary: Gets a templated script which can download original audio files
      tags:
      - downloader
      - audio_recordings
      security:
      - auth_token_header: []
      parameters: []
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: templated script
          content:
            text/plain:
              example: |
                #!/usr/bin/env pwsh

                # Requires -Version 7
                <#

                .DESCRIPTION

                  Downloads a set of recordings from an acoustic workbench.
                  Will work on Windows, Linux, or MacOSX with PowerShell Core.
                  See https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.1
                  for installation instructions.

                  Version 5.1.0 from http://localhost:3000.

                .EXAMPLE

                On Windows:

                PS> ./download_audio_files.ps1

                .EXAMPLE

                On Linux/MacOSX:

                $ chmod +x download_audio_files.ps1
                $ ./download_audio_files.ps1

                #>

                param(
                  # Where to download the recordings. Defaults to the present working directory if not specified.
                  $target = $null,
                  # The username to use to login to the workbench. This value's default value is templated when the script is generated.
                  $user_name = $null,
                  # The auth token to use to login to the workbench. You only need to supply an auth token if you want to log in without a password.
                  $auth_token = $null,
                  # The filter to use to select audio recordings to download. This value's default value is templated when the script is generated.
                  # See https://github.com/QutEcoacoustics/baw-server/wiki/API:-Filtering for details on valid filters. This argument
                  # should be a valid JSON encoded string.
                  $filter = $null,
                  # The acoustic workbench instance to use. This value's default value is templated when the script is generated.
                  $workbench_url = $null
                )

                $InformationPreference = 'Continue'
                $ErrorActionPreference = 'Stop'
                # https://github.com/PowerShell/PowerShell/issues/14348
                $ProgressPreference = 'SilentlyContinue'

                Write-Information "Acoustic Workbench downloader script version 5.1.0"

                if ($null -eq $target) {
                  $target = $pwd
                }

                # templated values from script generation
                if ($null -eq $auth_token) {
                  if ($null -eq $user_name) {
                    $user_name = "Admin"
                    if (-not $user_name) {
                      Write-Error "user_name is required"
                      exit 1
                    }
                  }
                  Write-Information "User name: $user_name"
                }
                else {
                  Write-Information "Using supplied auth token $auth_token"
                }

                if ($null -eq $filter) {
                  $filter = @'
                {"sorting":{"order_by":"recorded_date","direction":"desc"},"paging":{"items":25},"projection":{"include":["id","recorded_date","sites.name","site_id","canonical_file_name"]}}
                '@
                }
                Write-Information "Filter: $filter"

                if ($null -eq $workbench_url) {
                  $workbench_url = "http://localhost:3000"
                }
                Write-Information "Workbench URL: $workbench_url"

                # end templated values


                # log in
                $headers = @{}

                if ($null -eq $auth_token) {
                  $credentials = Get-Credential -Message "Provide credentials for logging into $workbench_url" -UserName $user_name
                  $json_credentials = $credentials.GetNetworkCredential() | ForEach-Object{ @{"email"=$_.UserName;"password"=$_.Password}} | ConvertTo-Json

                  Write-Information "Logging in to workbench $workbench"


                    $auth_reponse = Invoke-WebRequest -Uri "$workbench_url/security" -Method POST -Body $json_credentials -Headers $headers -SkipHttpErrorCheck
                    if ($auth_reponse.BaseResponse.IsSuccessStatusCode) {
                      $auth_token = ($auth_reponse.Content | ConvertFrom-Json).data.auth_token
                    }
                    else {
                      Write-Error ("Login attempt failed ($($auth_reponse.StatusCode)) " + $auth_reponse.Content)
                      exit 1
                    }

                }
                else {
                  # we have auth token, nothing else to do?
                }
                $headers["Authorization"] = "Token token=`"$auth_token`""

                $json_headers = $headers.Clone()
                $json_headers["Content-Type"] = "application/json"
                $json_headers["Accept"] = "application/json"

                Write-Information "Downloading recordings"

                # start paging through results!
                $script:current_page = 0
                $script:max_page = $null
                function Get-NextPage() {
                  $script:current_page += 1
                  if (($null -ne $script:max_page) -and ($script:current_page -gt $script:max_page)) {
                    Write-Information "Reached end of pages"
                    return $null
                  }

                  Write-Information "Getting page $script:current_page"

                  $response = Invoke-RestMethod -Uri "$workbench_url/audio_recordings/filter?page=$script:current_page" `
                    -Method POST -Body $filter -Headers $json_headers -SkipHttpErrorCheck -StatusCodeVariable "status_code"

                  if ($status_code -ne 200) {
                    Write-Error ("Failed to get recordings ($status_code): ")
                    $response | Format-List | out-string | Write-Error
                    exit 1
                  }

                  $script:max_page = $response.meta.paging.max_page

                  Write-Information "Got page $script:current_page of $script:max_page, $($response.data.Count) recordings in this page."

                  return $response.data
                }

                $sites = @{}
                function Get-SiteName($raw_name) {
                  if ($sites.ContainsKey($raw_name)) {
                    return $sites[$raw_name]
                  }

                  # Safe folder names
                  $name = $raw_name -replace '[^-_A-Za-z0-9]',''
                  $sites[$raw_name] = $name
                  return $name
                }

                # make output directory
                New-Item -ItemType Directory -Path $target -Force | Out-Null

                while ($null -ne ($recordings = Get-NextPage )) {
                  foreach($recording in $recordings) {
                    Write-Information "Downloading recording $($recording.id)"
                    $recording | write-output

                    $audio_recording_id = $recording.id
                    $site_id = $recording.site_id
                    $name = $recording.canonical_file_name

                    $safe_site_name = Get-SiteName $recording.'sites.name'

                    $sub_folder = Join-Path $target "${site_id}_$safe_site_name"
                    New-Item -ItemType Directory -Path $sub_folder -Force | Out-Null

                    $path = Join-Path $sub_folder $name

                    Invoke-RestMethod -Uri "$workbench_url/audio_recordings/$audio_recording_id/original" `
                      -Method GET -Headers $headers -StatusCodeVariable "download_status_code" -OutFile $path

                    Write-Information "Downloaded recording $audio_recording_id to $path"
                  }
                }

                Write-Information "Done!"
  "/audio_recordings":
    get:
      summary: list audio recordings
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: recorded_date
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/audio_recordings?direction=desc&items=25&order_by=recorded_date&page=1
                    previous: 
                    next: 
                  capabilities:
                    original_download:
                      can: 
                      details: You do not have permission to download the original
                        audio recording. Check your access level or the original download
                        settings for this project
                data:
                - id: 20
                  uuid: 1eb68505-5f9b-4678-a876-3f0d7de1cfd9
                  recorded_date: '2012-04-15T07:06:59.000Z'
                  site_id: 20
                  duration_seconds: 60000.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 83
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  notes:
                    test: note number 20
                  file_hash: SHA256::20810m5wsat308vb1zh2ctssfrfdmhpzgsz79hkcjf0w078gwkv93et259iafqow
                  uploader_id: 83
                  original_file_name: original name 20.mp3
                  canonical_file_name: 20120415T070659Z_site-name-20_20.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/audio_recording"
  "/audio_recordings/{id}":
    patch:
      summary: update audio recordings
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  capabilities:
                    original_download:
                      can: true
                      details: 
                data:
                  id: 21
                  uuid: e046e7be-1a16-4610-9882-e8daebb6576a
                  recorded_date: '2012-04-16T07:06:59.000Z'
                  site_id: 21
                  duration_seconds: 66.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 87
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  notes:
                    test: note number 21
                  file_hash: SHA256::21c20mgxbdfoqinrqedzbrykin4r7yl06k651cs79dwj5fsiah6ka1zv2tvpl6rg
                  uploader_id: 87
                  original_file_name: original name 21.mp3
                  canonical_file_name: 20120416T070659Z_site-name-21_21.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_recording"
    get:
      summary: show audio recordings
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  capabilities:
                    original_download:
                      can: true
                      details: 
                data:
                  id: 22
                  uuid: ce43bb99-420c-455a-937a-d42459933bc9
                  recorded_date: '2012-04-17T07:06:59.000Z'
                  site_id: 22
                  duration_seconds: 60000.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 91
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  notes:
                    test: note number 22
                  file_hash: SHA256::228v8w48r3pl8125kkq981iac8qix9ts52u0rghniya40uq0e2sbwoqj2mbn0bfz
                  uploader_id: 91
                  original_file_name: original name 22.mp3
                  canonical_file_name: 20120417T070659Z_site-name-22_22.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
    put:
      summary: update audio recordings
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  capabilities:
                    original_download:
                      can: true
                      details: 
                data:
                  id: 23
                  uuid: d05c1bb9-2687-440a-86b4-6ec3c91d88e4
                  recorded_date: '2012-04-18T07:06:59.000Z'
                  site_id: 23
                  duration_seconds: 66.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 95
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  notes:
                    test: note number 23
                  file_hash: SHA256::23vdi1nftcz3yrj7ravsxwooiklxnntwhvztgdoed5tdvhjzewm65t9fyacif9a0
                  uploader_id: 95
                  original_file_name: original name 23.mp3
                  canonical_file_name: 20120418T070659Z_site-name-23_23.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_recording"
  "/audio_recordings/new":
    get:
      summary: new audio recordings
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: .

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  site_id: 
                  uploader_id: 
                  sample_rate_hertz: 
                  media_type: 
                  recorded_date: 
                  bit_rate_bps: 
                  data_length_bytes: 
                  channels: 
                  duration_seconds: 
                  file_hash: 
                  original_file_name: 
  "/audio_recordings/filter":
    post:
      summary: filter audio recording
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: recorded_date
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/audio_recordings/filter?direction=desc&items=25&order_by=recorded_date&page=1
                    previous: 
                    next: 
                  capabilities:
                    original_download:
                      can: 
                      details: You do not have permission to download the original
                        audio recording. Check your access level or the original download
                        settings for this project
                data:
                - id: 25
                  uuid: 4f97f45e-080c-4d10-bba7-e52696d9d320
                  recorded_date: '2012-04-20T07:06:59.000Z'
                  site_id: 25
                  duration_seconds: 60000.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 103
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  notes:
                    test: note number 25
                  file_hash: SHA256::25zhdfyfw66hy11d63o1hwnhueyunsvkx19fithma2mxc3mj1hgmvnbsybjvh5d9
                  uploader_id: 103
                  original_file_name: original name 25.mp3
                  canonical_file_name: 20120420T070659Z_site-name-25_25.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/audio_recording"
  "/projects/{project_id}/regions/new":
    get:
      summary: new region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
                  notes: 
                  project_id: 
  "/projects/{project_id}/regions":
    post:
      summary: create region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 28
                  name: region name 28
                  description: site **description** 28
                  notes:
                    region_note_28: 28
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 28
                  site_ids: []
                  description_html: "<p>site <strong>description</strong> 28</p>\n"
                  description_html_tagline: site <strong>description</strong> 28
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
    get:
      summary: list regions
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/projects/30/regions?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 29
                  name: region name 29
                  description: site **description** 29
                  notes:
                    region_note_29: 29
                  creator_id: 116
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 30
                  site_ids:
                  - 28
                  description_html: "<p>site <strong>description</strong> 29</p>\n"
                  description_html_tagline: site <strong>description</strong> 29
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/region"
  "/projects/{project_id}/regions/{id}":
    delete:
      summary: delete region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    get:
      summary: show region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 31
                  name: region name 31
                  description: site **description** 31
                  notes:
                    region_note_31: 31
                  creator_id: 124
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 32
                  site_ids:
                  - 30
                  description_html: "<p>site <strong>description</strong> 31</p>\n"
                  description_html_tagline: site <strong>description</strong> 31
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
    put:
      summary: update region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 32
                  name: region name 33
                  description: site **description** 33
                  notes:
                    region_note_33: 33
                  creator_id: 128
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 34
                  site_ids:
                  - 31
                  description_html: "<p>site <strong>description</strong> 33</p>\n"
                  description_html_tagline: site <strong>description</strong> 33
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
    patch:
      summary: update region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 33
                  name: region name 35
                  description: site **description** 35
                  notes:
                    region_note_35: 35
                  creator_id: 134
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 36
                  site_ids:
                  - 32
                  description_html: "<p>site <strong>description</strong> 35</p>\n"
                  description_html_tagline: site <strong>description</strong> 35
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
  "/projects/{project_id}/regions/filter":
    post:
      summary: filter region
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/projects/37/regions/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 34
                  name: region name 36
                  description: site **description** 36
                  notes:
                    region_note_36: 36
                  creator_id: 140
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 37
                  site_ids:
                  - 33
                  description_html: "<p>site <strong>description</strong> 36</p>\n"
                  description_html_tagline: site <strong>description</strong> 36
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/region"
  "/stats":
    get:
      summary: Gets stats
      tags:
      - stats
      security: 
      parameters: []
      responses:
        '200':
          description: stats retrieved
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  summary:
                    users_online: 0
                    users_total: 2
                    online_window_start: '2020-01-02T01:04:05.677Z'
                    projects_total: 0
                    regions_total: 0
                    sites_total: 0
                    annotations_total: 0
                    annotations_total_duration: 0
                    annotations_recent: 0
                    audio_recordings_total: 0
                    audio_recordings_recent: 0
                    audio_recordings_total_duration: 0
                    audio_recordings_total_size: 0
                    tags_total: 0
                    tags_applied_total: 0
                    tags_applied_unique_total: 0
                  recent:
                    audio_recording_ids: []
                    audio_event_ids: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/stats"
  "/sites/{id}":
    put:
      summary: update site
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 34
                  name: site name 35
                  description: site description 35
                  notes: note number 35
                  creator_id: 144
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 
                  custom_latitude: 33.173423
                  custom_longitude: -146.195375
                  location_obfuscated: false
                  project_ids:
                  - 38
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 35</p>\n"
                  description_html_tagline: site description 35
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    delete:
      summary: delete site
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    get:
      summary: show site
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 36
                  name: site name 37
                  description: site description 37
                  notes: note number 37
                  creator_id: 153
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 37
                  custom_latitude: -86.609359
                  custom_longitude: -101.866706
                  location_obfuscated: false
                  project_ids:
                  - 40
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 37</p>\n"
                  description_html_tagline: site description 37
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
    patch:
      summary: update site
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 37
                  name: site name 39
                  description: site description 39
                  notes: note number 39
                  creator_id: 157
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 
                  custom_latitude: 38.354032
                  custom_longitude: -111.109703
                  location_obfuscated: false
                  project_ids:
                  - 41
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 39</p>\n"
                  description_html_tagline: site description 39
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
  "/sites/new":
    get:
      summary: new site
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  longitude: 
                  latitude: 
                  notes: 
                  image: 
                  tzinfo_tz: 
                  rails_tz: 
  "/sites":
    post:
      summary: create site
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 40
                  name: site name 42
                  description: site description 42
                  notes: note number 42
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 
                  custom_latitude: 
                  custom_longitude: 
                  location_obfuscated: true
                  project_ids: []
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 42</p>\n"
                  description_html_tagline: site description 42
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    get:
      summary: list sites
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/sites?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 41
                  name: site name 43
                  description: site description 43
                  notes: note number 43
                  creator_id: 171
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 41
                  custom_latitude: 84.710449
                  custom_longitude: 29.079889
                  location_obfuscated: false
                  project_ids:
                  - 44
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 43</p>\n"
                  description_html_tagline: site description 43
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/sites/filter":
    post:
      summary: filter site
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/sites/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 42
                  name: site name 44
                  description: site description 44
                  notes: note number 44
                  creator_id: 175
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 42
                  custom_latitude: -14.842749
                  custom_longitude: -84.341464
                  location_obfuscated: false
                  project_ids:
                  - 45
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 44</p>\n"
                  description_html_tagline: site description 44
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/projects/{project_id}/sites/{site_id}/audio_recordings/new":
    get:
      summary: new audio recordings
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: site_id
        in: path
        description: site_id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: .

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  site_id: 
                  uploader_id: 
                  sample_rate_hertz: 
                  media_type: 
                  recorded_date: 
                  bit_rate_bps: 
                  data_length_bytes: 
                  channels: 
                  duration_seconds: 
                  file_hash: 
                  original_file_name: 
  "/projects/{project_id}/sites/{site_id}/audio_recordings":
    post:
      summary: create audio recordings
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: site_id
        in: path
        description: site_id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                  capabilities:
                    original_download:
                      can: true
                      details: 
                data:
                  id: 44
                  uuid: 3fb2905b-13aa-45c9-ac89-0b2b78adbb28
                  recorded_date: '2012-05-09T07:06:59.000Z'
                  site_id: 44
                  duration_seconds: 60000.0
                  sample_rate_hertz: 22050
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: new
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  notes:
                    test: note number 44
                  file_hash: SHA256::44jkovp9n9ngw1reb1c1qlj92r3fwgylwhapa62qimj6mjgg3yvip0mpzki73bp5
                  uploader_id: 1
                  original_file_name: original name 44.mp3
                  canonical_file_name: 20120509T070659Z_site-name-46_44.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_recording"
  "/status":
    get:
      summary: Gets status
      tags:
      - stats
      security: 
      parameters: []
      responses:
        '200':
          description: stats retrieved
          content:
            application/json:
              example:
                status: good
                timed_out: false
                database: true
                redis: PONG
                storage: 1 audio recording storage directory available.
                upload: Alive
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - good
                    - bad
                  timed_out:
                    type: boolean
                  database:
                    type: boolean
                  redis:
                    type: string
                  storage:
                    type: string
                  upload:
                    type: string
  "/bookmarks":
    post:
      summary: create bookmark
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 37
                  audio_recording_id: 46
                  name: name 37
                  category: category 37
                  description: description 37
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 37</p>\n"
                  description_html_tagline: description 37
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/bookmark"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/bookmark"
    get:
      summary: list bookmarks
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/bookmarks?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 38
                  audio_recording_id: 47
                  name: name 38
                  category: category 38
                  description: description 38
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 38</p>\n"
                  description_html_tagline: description 38
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/bookmark"
  "/bookmarks/new":
    get:
      summary: new bookmark
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  category: 
                  description: 
                  offset_seconds: 
  "/bookmarks/filter":
    post:
      summary: filter bookmark
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/bookmarks/filter?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 40
                  audio_recording_id: 49
                  name: name 40
                  category: category 40
                  description: description 40
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 40</p>\n"
                  description_html_tagline: description 40
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/bookmark"
  "/bookmarks/{id}":
    put:
      summary: update bookmark
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 41
                  audio_recording_id: 51
                  name: name 42
                  category: category 42
                  description: description 42
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 42</p>\n"
                  description_html_tagline: description 42
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/bookmark"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/bookmark"
    patch:
      summary: update bookmark
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 42
                  audio_recording_id: 53
                  name: name 44
                  category: category 44
                  description: description 44
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 44</p>\n"
                  description_html_tagline: description 44
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/bookmark"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/bookmark"
    delete:
      summary: delete bookmark
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    get:
      summary: show bookmark
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - bookmarks
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 44
                  audio_recording_id: 55
                  name: name 46
                  category: category 46
                  description: description 46
                  offset_seconds: 4.0
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description_html: "<p>description 46</p>\n"
                  description_html_tagline: description 46
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/bookmark"
  "/sites/orphans/filter":
    post:
      summary: filter site
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/sites/orphans?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 58
                  name: site name 60
                  description: site description 60
                  notes: note number 60
                  creator_id: 234
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 
                  custom_latitude: 
                  custom_longitude: 
                  location_obfuscated: true
                  project_ids: []
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 60</p>\n"
                  description_html_tagline: site description 60
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/sites/orphans":
    get:
      summary: list sites
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/sites/orphans?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 60
                  name: site name 62
                  description: site description 62
                  notes: note number 62
                  creator_id: 239
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 
                  custom_latitude: 
                  custom_longitude: 
                  location_obfuscated: true
                  project_ids: []
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 62</p>\n"
                  description_html_tagline: site description 62
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/saved_searches/new":
    get:
      summary: new saved_search
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data: {}
  "/saved_searches/filter":
    post:
      summary: filter saved_search
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/saved_searches/filter?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 47
                  name: saved search name 47
                  description: saved search description 47
                  stored_query:
                    uuid:
                      eq: blah blah
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 245
                  deleter_id: 
                  deleted_at: 
                  project_ids:
                  - 59
                  analysis_job_ids:
                  - 47
                  description_html: "<p>saved search description 47</p>\n"
                  description_html_tagline: saved search description 47
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/saved_search"
  "/saved_searches/{id}":
    put:
      summary: can't update saved_search
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: saved_searches/48
                      original_http_method: PUT
                data: 
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/saved_search"
    delete:
      summary: delete saved_search
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    patch:
      summary: can't update saved_search
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: saved_searches/50
                      original_http_method: PATCH
                data: 
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/saved_search"
    get:
      summary: show saved_search
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 51
                  name: saved search name 53
                  description: saved search description 53
                  stored_query:
                    uuid:
                      eq: blah blah
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 263
                  deleter_id: 
                  deleted_at: 
                  project_ids:
                  - 63
                  analysis_job_ids:
                  - 51
                  description_html: "<p>saved search description 53</p>\n"
                  description_html_tagline: saved search description 53
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/saved_search"
  "/saved_searches":
    get:
      summary: list saved_searches
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: created_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/saved_searches?direction=desc&items=25&order_by=created_at&page=1
                    previous: 
                    next: 
                data:
                - id: 52
                  name: saved search name 54
                  description: saved search description 54
                  stored_query:
                    uuid:
                      eq: blah blah
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 267
                  deleter_id: 
                  deleted_at: 
                  project_ids:
                  - 64
                  analysis_job_ids:
                  - 52
                  description_html: "<p>saved search description 54</p>\n"
                  description_html_tagline: saved search description 54
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/saved_search"
    post:
      summary: create saved_search
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - saved_searches
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 54
                  name: saved search name 56
                  description: saved search description 56
                  stored_query:
                    uuid:
                      eq: blah blah
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  deleter_id: 
                  deleted_at: 
                  project_ids: []
                  analysis_job_ids: []
                  description_html: "<p>saved search description 56</p>\n"
                  description_html_tagline: saved search description 56
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/saved_search"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/saved_search"
  "/regions":
    post:
      summary: create region
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 64
                  name: region name 66
                  description: site **description** 66
                  notes:
                    region_note_66: 66
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 67
                  site_ids: []
                  description_html: "<p>site <strong>description</strong> 66</p>\n"
                  description_html_tagline: site <strong>description</strong> 66
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
    get:
      summary: list regions
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/regions?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 65
                  name: region name 67
                  description: site **description** 67
                  notes:
                    region_note_67: 67
                  creator_id: 281
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 68
                  site_ids:
                  - 70
                  description_html: "<p>site <strong>description</strong> 67</p>\n"
                  description_html_tagline: site <strong>description</strong> 67
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/region"
  "/regions/filter":
    post:
      summary: filter region
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/regions/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 66
                  name: region name 68
                  description: site **description** 68
                  notes:
                    region_note_68: 68
                  creator_id: 285
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 69
                  site_ids:
                  - 71
                  description_html: "<p>site <strong>description</strong> 68</p>\n"
                  description_html_tagline: site <strong>description</strong> 68
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/region"
  "/regions/{id}":
    put:
      summary: update region
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 67
                  name: region name 70
                  description: site **description** 70
                  notes:
                    region_note_70: 70
                  creator_id: 289
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 71
                  site_ids:
                  - 72
                  description_html: "<p>site <strong>description</strong> 70</p>\n"
                  description_html_tagline: site <strong>description</strong> 70
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
    get:
      summary: show region
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 68
                  name: region name 71
                  description: site **description** 71
                  notes:
                    region_note_71: 71
                  creator_id: 295
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 72
                  site_ids:
                  - 73
                  description_html: "<p>site <strong>description</strong> 71</p>\n"
                  description_html_tagline: site <strong>description</strong> 71
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
    patch:
      summary: update region
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 69
                  name: region name 73
                  description: site **description** 73
                  notes:
                    region_note_73: 73
                  creator_id: 299
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  project_id: 74
                  site_ids:
                  - 74
                  description_html: "<p>site <strong>description</strong> 73</p>\n"
                  description_html_tagline: site <strong>description</strong> 73
                  image_urls: []
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/region"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/region"
    delete:
      summary: delete region
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/regions/new":
    get:
      summary: new region
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - regions
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
                  notes: 
                  project_id: 
  "/analysis_jobs":
    get:
      summary: list analysis_jobs
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: updated_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/analysis_jobs?direction=desc&items=25&order_by=updated_at&page=1
                    previous: 
                    next: 
                data:
                - id: 62
                  name: job name 62
                  description: job description 62
                  annotation_name: 
                  custom_settings: custom settings 62
                  creator_id: 314
                  updater_id: 
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  script_id: 62
                  saved_search_id: 63
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: new
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    new: 0
                    queued: 0
                    working: 0
                    successful: 0
                    failed: 0
                    timed_out: 0
                    cancelling: 0
                    cancelled: 0
                    total: 0
                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_count: 0
                  overall_duration_seconds: 0.0
                  overall_data_length_bytes: 0
                  description_html: "<p>job description 62</p>\n"
                  description_html_tagline: job description 62
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/analysis_job"
    post:
      summary: create analysis_job
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 64
                  name: job name 64
                  description: job description 64
                  annotation_name: 
                  custom_settings: custom settings 64
                  creator_id: 1
                  updater_id: 1
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  script_id: 64
                  saved_search_id: 65
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: completed
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    new: 0
                    queued: 0
                    working: 0
                    successful: 0
                    failed: 0
                    timed_out: 0
                    cancelling: 0
                    cancelled: 0
                    total: 0
                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_count: 0
                  overall_duration_seconds: 0.0
                  overall_data_length_bytes: 0
                  description_html: "<p>job description 64</p>\n"
                  description_html_tagline: job description 64
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/analysis_job"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/analysis_job"
  "/analysis_jobs/{id}":
    delete:
      summary: delete analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    get:
      summary: show analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 66
                  name: job name 66
                  description: job description 66
                  annotation_name: 
                  custom_settings: custom settings 66
                  creator_id: 329
                  updater_id: 
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  script_id: 66
                  saved_search_id: 67
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: completed
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    new: 0
                    queued: 0
                    working: 0
                    successful: 0
                    failed: 0
                    timed_out: 0
                    cancelling: 0
                    cancelled: 0
                    total: 0
                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_count: 0
                  overall_duration_seconds: 0.0
                  overall_data_length_bytes: 0
                  description_html: "<p>job description 66</p>\n"
                  description_html_tagline: job description 66
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/analysis_job"
    patch:
      summary: update analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 67
                  name: job name 68
                  description: job description 68
                  annotation_name: 
                  custom_settings: custom settings 67
                  creator_id: 333
                  updater_id: 1
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  script_id: 67
                  saved_search_id: 68
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: completed
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    new: 0
                    queued: 0
                    working: 0
                    successful: 0
                    failed: 0
                    timed_out: 0
                    cancelling: 0
                    cancelled: 0
                    total: 0
                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_count: 0
                  overall_duration_seconds: 0.0
                  overall_data_length_bytes: 0
                  description_html: "<p>job description 68</p>\n"
                  description_html_tagline: job description 68
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/analysis_job"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/analysis_job"
    put:
      summary: update analysis_job
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 68
                  name: job name 70
                  description: job description 70
                  annotation_name: 
                  custom_settings: custom settings 69
                  creator_id: 340
                  updater_id: 1
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  script_id: 69
                  saved_search_id: 70
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: completed
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    new: 0
                    queued: 0
                    working: 0
                    successful: 0
                    failed: 0
                    timed_out: 0
                    cancelling: 0
                    cancelled: 0
                    total: 0
                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_count: 0
                  overall_duration_seconds: 0.0
                  overall_data_length_bytes: 0
                  description_html: "<p>job description 70</p>\n"
                  description_html_tagline: job description 70
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/analysis_job"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/analysis_job"
  "/analysis_jobs/new":
    get:
      summary: new analysis_job
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  annotation_name: 
                  custom_settings: 
  "/analysis_jobs/filter":
    post:
      summary: filter analysis_job
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - analysis_jobs
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: updated_at
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/analysis_jobs/filter?direction=desc&items=25&order_by=updated_at&page=1
                    previous: 
                    next: 
                data:
                - id: 70
                  name: job name 72
                  description: job description 72
                  annotation_name: 
                  custom_settings: custom settings 72
                  creator_id: 351
                  updater_id: 
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  script_id: 72
                  saved_search_id: 73
                  started_at: '2020-01-02T03:04:05.677Z'
                  overall_status: new
                  overall_status_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_progress:
                    new: 0
                    queued: 0
                    working: 0
                    successful: 0
                    failed: 0
                    timed_out: 0
                    cancelling: 0
                    cancelled: 0
                    total: 0
                  overall_progress_modified_at: '2020-01-02T03:04:05.677Z'
                  overall_count: 0
                  overall_duration_seconds: 0.0
                  overall_data_length_bytes: 0
                  description_html: "<p>job description 72</p>\n"
                  description_html_tagline: job description 72
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/analysis_job"
  "/datasets":
    get:
      summary: list datasets
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/datasets?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 71
                  name: gen_dataset_name70
                  description: dataset description 70
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 354
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  description_html: "<p>dataset description 70</p>\n"
                  description_html_tagline: dataset description 70
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/dataset"
    post:
      summary: create dataset
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `Harvester`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 73
                  name: gen_dataset_name72
                  description: dataset description 72
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  description_html: "<p>dataset description 72</p>\n"
                  description_html_tagline: dataset description 72
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/dataset"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/dataset"
  "/datasets/{id}":
    get:
      summary: show dataset
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 74
                  name: gen_dataset_name73
                  description: dataset description 73
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 363
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  description_html: "<p>dataset description 73</p>\n"
                  description_html_tagline: dataset description 73
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/dataset"
    patch:
      summary: update dataset
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 75
                  name: gen_dataset_name75
                  description: dataset description 75
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 367
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  description_html: "<p>dataset description 75</p>\n"
                  description_html_tagline: dataset description 75
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/dataset"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/dataset"
    put:
      summary: update dataset
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 76
                  name: gen_dataset_name77
                  description: dataset description 77
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 372
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  description_html: "<p>dataset description 77</p>\n"
                  description_html_tagline: dataset description 77
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/dataset"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/dataset"
    delete:
      summary: can't delete a dataset
      security:
      - auth_token_header: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
          content:
            application/json:
              example:
                meta:
                  status: 404
                  message: Not Found
                  error:
                    details: Could not find the requested page.
                    info:
                      original_route: datasets/77
                      original_http_method: DELETE
                data: 
  "/datasets/new":
    get:
      summary: new dataset
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: 
                  description: 
  "/datasets/filter":
    post:
      summary: filter dataset
      security:
      - auth_token_header: []
      parameters: []
      tags:
      - datasets
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/datasets/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 79
                  name: gen_dataset_name80
                  description: dataset description 80
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 385
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  description_html: "<p>dataset description 80</p>\n"
                  description_html_tagline: dataset description 80
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/dataset"
  "/projects/{project_id}/sites/filter":
    post:
      summary: filter site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/projects/93/sites/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 93
                  name: site name 95
                  description: site description 95
                  notes: note number 95
                  creator_id: 389
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 88
                  custom_latitude: -75.992985
                  custom_longitude: 58.284473
                  location_obfuscated: false
                  project_ids:
                  - 93
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 95</p>\n"
                  description_html_tagline: site description 95
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/projects/{project_id}/sites/new":
    get:
      summary: new site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  longitude: 
                  latitude: 
                  notes: 
                  image: 
                  tzinfo_tz: 
                  rails_tz: 
  "/projects/{project_id}/sites/{id}":
    put:
      summary: update site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 95
                  name: site name 98
                  description: site description 98
                  notes: note number 98
                  creator_id: 397
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 
                  custom_latitude: -66.578049
                  custom_longitude: 105.602945
                  location_obfuscated: false
                  project_ids:
                  - 95
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 98</p>\n"
                  description_html_tagline: site description 98
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    get:
      summary: show site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 96
                  name: site name 99
                  description: site description 99
                  notes: note number 99
                  creator_id: 402
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 91
                  custom_latitude: -55.495493
                  custom_longitude: -147.17816
                  location_obfuscated: false
                  project_ids:
                  - 96
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 99</p>\n"
                  description_html_tagline: site description 99
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
    patch:
      summary: update site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 97
                  name: site name 101
                  description: site description 101
                  notes: note number 101
                  creator_id: 406
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 1
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 
                  custom_latitude: -6.901163
                  custom_longitude: 153.875466
                  location_obfuscated: false
                  project_ids:
                  - 97
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 101</p>\n"
                  description_html_tagline: site description 101
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    delete:
      summary: delete site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/projects/{project_id}/sites":
    post:
      summary: create site
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 100
                  name: site name 104
                  description: site description 104
                  notes: note number 104
                  creator_id: 1
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 
                  custom_latitude: 
                  custom_longitude: 
                  location_obfuscated: false
                  project_ids:
                  - 99
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 104</p>\n"
                  description_html_tagline: site description 104
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    get:
      summary: list sites
      security:
      - auth_token_header: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/projects/100/sites?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 101
                  name: site name 105
                  description: site description 105
                  notes: note number 105
                  creator_id: 420
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 95
                  custom_latitude: 79.906888
                  custom_longitude: 31.419095
                  location_obfuscated: false
                  project_ids:
                  - 100
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 105</p>\n"
                  description_html_tagline: site description 105
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
servers:
- url: "{protocol}://{authority}"
  variables:
    authority:
      default: localhost:3000
    protocol:
      enum:
      - http
      - https
      default: http
components:
  securitySchemes:
    auth_token_header:
      type: apiKey
      description: |
        The api auth_token placed in the 'Authorization' header.
        Example:

        ```
        Token token="xxxxxxxxxx"
        ```

        Where the your auth_token is substituted into the placeholder.
      in: header
      name: Authorization
      scheme: Token
    auth_token_query_string:
      type: apiKey
      name: user_token
      in: query_string
  schemas:
    id:
      type: integer
      minimum: 0
      readOnly: true
    nullableId:
      type:
      - integer
      - 'null'
      minimum: 0
      readOnly: true
    timezone_information:
      anyOf:
      - type: object
        properties:
          identifier_alt:
            type:
            - string
            - 'null'
          identifier:
            type: string
          friendly_identifier:
            type: string
          utc_offset:
            type: string
          utc_total_offset:
            type: integer
      - type: 'null'
    image_urls:
      type: array
      items:
        type: object
        properties:
          size:
            type: string
          url:
            type: string
            format: URI
          width:
            type: integer
            nullable: true
          height:
            type: integer
            nullable: true
    permission_levels:
      type:
      - string
      - 'null'
      enum:
      - Owner
      - Writer
      - Reader
      - 
    meta:
      properties:
        capabilities:
          type: object
          items:
            type: object
            properties:
              can:
                type:
                - 'null'
                - boolean
              details:
                type: string
            required:
            - can
      type: object
    meta_error:
      type: object
      properties:
        error:
          type: object
        required:
        - error
    standard_response:
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/meta"
        data:
          oneOf:
          - type: array
          - type: object
      required:
      - meta
      - data
    error_response:
      type: object
      additionalProperties: false
      properties:
        meta:
          allOf:
          - "$ref": "#/components/schemas/meta"
          - "$ref": "#/components/schemas/meta_error"
        data:
          type: 'null'
      required:
      - meta
      - data
    cms_blob:
      type: object
      required:
      - id
      - site_id
      - layout_id
      - parent_id
      - target_page_id
      - label
      - slug
      - full_path
      - content
      - position
      - children_count
      - is_published
      - created_at
      - updated_at
      - children
      properties:
        id:
          "$ref": "#/components/schemas/id"
        site_id:
          "$ref": "#/components/schemas/id"
        layout_id:
          "$ref": "#/components/schemas/id"
        parent_id:
          "$ref": "#/components/schemas/nullableId"
        target_page_id:
          "$ref": "#/components/schemas/nullableId"
        label:
          type: string
        slug:
          type: string
        full_path:
          type: string
          format: uri-reference
        content:
          type: string
          format: html
        position:
          type: integer
        children_count:
          type: integer
        is_published:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        children:
          type: array
          additionalItems: true
          items:
            type: object
            properties:
              label:
                type: string
              full_path:
                type: string
                format: uri-reference
            additionalProperties: false
      additionalProperties: false
    stats:
      type: object
      required:
      - summary
      - recent
      properties:
        summary:
          type: object
          properties:
            users_online:
              type: integer
            users_total:
              type: integer
            online_window_start:
              type: string
              format: date-time
              readOnly: true
            projects_total:
              type: integer
            regions_total:
              type: integer
            sites_total:
              type: integer
            annotations_total:
              type: integer
            annotations_total_duration:
              type: number
            annotations_recent:
              type: integer
            audio_recordings_total:
              type: integer
            audio_recordings_recent:
              type: integer
            audio_recordings_total_duration:
              type: number
            audio_recordings_total_size:
              type: integer
            tags_total:
              type: integer
            tags_applied_total:
              type: integer
            tags_applied_unique_total:
              type: integer
        recent:
          type: object
          properties:
            audio_recording_ids:
              type: array
              items:
                "$ref": "#/components/schemas/id"
            audio_event_ids:
              type: array
              items:
                "$ref": "#/components/schemas/id"
      additionalProperties: false
    project:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        notes:
          type: string
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        site_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: false
        region_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        owner_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        image_urls:
          "$ref": "#/components/schemas/image_urls"
        access_level:
          "$ref": "#/components/schemas/permission_levels"
        allow_original_download:
          "$ref": "#/components/schemas/permission_levels"
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - notes
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - owner_ids
      - site_ids
      - region_ids
      - image_urls
      - allow_original_download
    analysis_job:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        annotation_name:
          type:
          - string
          - 'null'
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        custom_settings:
          type: string
        script_id:
          "$ref": "#/components/schemas/id"
        saved_search_id:
          "$ref": "#/components/schemas/id"
        started_at:
          type:
          - 'null'
          - date
          readOnly: true
        overall_status:
          type: string
          enum:
          - before_save
          - new
          - preparing
          - processing
          - completed
          - suspended
          readOnly: true
        overall_status_modified_at:
          type:
          - 'null'
          - date
          readOnly: true
        overall_progress:
          type: object
          readOnly: true
        overall_progress_modified_at:
          type:
          - 'null'
          - date
          readOnly: true
        overall_count:
          type: integer
          readOnly: true
        overall_duration_seconds:
          type: number
          readOnly: true
        overall_data_length_bytes:
          type: integer
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - custom_settings
      - script_id
      - saved_search_id
      - started_at
      - overall_status
      - overall_status_modified_at
      - overall_progress
      - overall_progress_modified_at
      - overall_count
      - overall_duration_seconds
      - overall_data_length_bytes
    bookmark:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        audio_recording_id:
          "$ref": "#/components/schemas/id"
        name:
          type: string
        category:
          type: string
        offset_seconds:
          type: number
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - audio_recording_id
      - name
      - category
      - offset_seconds
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
    dataset:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - description
      - created_at
      - creator_id
      - updated_at
      - updater_id
    saved_search:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        analysis_job_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
        project_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        stored_query:
          type: object
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - stored_query
      - creator_id
      - created_at
      - deleter_id
      - deleted_at
    script:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        group_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        analysis_identifier:
          type: string
        executable_settings:
          type: string
        executable_settings_media_type:
          type: string
        version:
          type: number
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_last_version:
          type: boolean
          readOnly: true
        is_first_version:
          type: boolean
          readOnly: true
        analysis_action_params:
          type: object
      required:
      - id
      - group_id
      - name
      - description
      - analysis_identifier
      - executable_settings_media_type
      - version
      - created_at
      - creator_id
      - is_last_version
      - is_first_version
      - analysis_action_params
    site:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        notes:
          type: string
        project_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
        location_obfuscated:
          type: boolean
        custom_latitude:
          type:
          - number
          - 'null'
          minimum: -90
          maximum: 90
        custom_longitude:
          type:
          - number
          - 'null'
          minimum: -180
          maximum: 180
        timezone_information:
          "$ref": "#/components/schemas/timezone_information"
          readOnly: false
        image_urls:
          "$ref": "#/components/schemas/image_urls"
        region_id:
          "$ref": "#/components/schemas/nullableId"
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - notes
      - project_ids
      - location_obfuscated
      - custom_latitude
      - custom_longitude
      - timezone_information
      - image_urls
      - region_id
    region:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        notes:
          type: object
        project_id:
          "$ref": "#/components/schemas/id"
        site_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
        image_urls:
          "$ref": "#/components/schemas/image_urls"
        image:
          type: string
          format: binary
          writeOnly: true
          nullable: true
      required:
      - id
      - name
      - notes
      - project_id
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - site_ids
      - image_urls
    audio_recording:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        site_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        duration_seconds:
          type: number
        sample_rate_hertz:
          type: number
        channels:
          type: number
        bit_rate_bps:
          type: number
        media_type:
          type: string
        data_length_bytes:
          type: number
        status:
          type: string
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        recorded_date:
          type: string
          format: date-time
          readOnly: false
        file_hash:
          type: string
        notes:
          type: object
        recorded_date_timezone:
          type:
          - 'null'
          - string
        uploader_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: false
        original_file_name:
          type: string
        canonical_file_name:
          type: string
          read_only: true
      required:
      - id
      - uuid
      - site_id
      - duration_seconds
      - sample_rate_hertz
      - channels
      - bit_rate_bps
      - media_type
      - data_length_bytes
      - status
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - recorded_date
      - file_hash
      - notes
      - uploader_id
      - original_file_name
      - canonical_file_name
