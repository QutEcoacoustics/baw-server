---
openapi: 3.0.1
info:
  title: Acoustic Workbench API
  version: v2
produces:
- application/json
consumes:
- application/json
paths:
  "/audio_recordings/{id}/original":
    get:
      summary: Downloads an original audio file
      tags:
      - AudioRecordings
      - Media
      - audio_recordings
      - audio_recordings
      - audio_recordings
      parameters:
      - name: id
        in: path
        description: ID of the audio recording
        required: true
        schema:
          type: string
      security:
      - basic_auth_with_token: []
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '404':
          description: not found
        '401':
          description: unauthorized
        '200':
          description: original audio file
    head:
      summary: Gets HTTP headers for an original audio file
      tags:
      - AudioRecordings
      - Media
      - audio_recordings
      - audio_recordings
      - audio_recordings
      parameters:
      - name: id
        in: path
        description: ID of the audio recording
        required: true
        schema:
          type: string
      security:
      - basic_auth_with_token: []
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`.<br />
        Users that can't: `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: original audio file
        '404':
          description: not found
        '401':
          description: unauthorized
  "/audio_recordings/downloader":
    post:
      summary: Gets a templated script which can download original audio files. Accepts
        an audio recordings filter object
      tags:
      - AudioRecordings
      - Downloader
      - audio_recordings
      consumes: 
      security:
      - basic_auth_with_token: []
      parameters: []
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: templated script
          content:
            text/plain:
              example: |
                #!/usr/bin/env pwsh

                # Requires -Version 7
                <#

                .DESCRIPTION

                  Downloads a set of recordings from an acoustic workbench.
                  Will work on Windows, Linux, or MacOSX with PowerShell Core.
                  See https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.1
                  for installation instructions.

                  Version 4.7.1 from http://localhost:3000.

                .EXAMPLE

                On Windows:

                PS> ./download_audio_files.ps1

                .EXAMPLE

                On Linux/MacOSX:

                $ chmod +x download_audio_files.ps1
                $ ./download_audio_files.ps1

                #>

                param(
                  # Where to download the recordings. Defaults to the present working directory if not specified.
                  $target = $null,
                  # The username to use to login to the workbench. This value's default value is templated when the script is generated.
                  $user_name = $null,
                  # The auth token to use to login to the workbench. You only need to supply an auth token if you want to log in without a password.
                  $auth_token = $null,
                  # The filter to use to select audio recordings to download. This value's default value is templated when the script is generated.
                  # See https://github.com/QutEcoacoustics/baw-server/wiki/API:-Filtering for details on valid filters. This argument
                  # should be a valid JSON encoded string.
                  $filter = $null,
                  # The acoustic workbench instance to use. This value's default value is templated when the script is generated.
                  $workbench_url = $null
                )

                $InformationPreference = 'Continue'

                Write-Information "Acoustic Workbench downloader script version 4.7.1"

                if ($null -eq $target) {
                  $target = $pwd
                }

                # templated values from script generation
                if ($null -eq $auth_token) {
                  if ($null -eq $user_name) {
                    $user_name = "Admin"
                    if (-not $user_name) {
                      Write-Error "user_name is required"
                      exit 1
                    }
                  }
                  Write-Information "User name: $user_name"
                }
                else {
                  Write-Information "Using supplied auth token $auth_token"
                }

                if ($null -eq $filter) {
                  $filter = @'
                {"sorting":{"order_by":"recorded_date","direction":"desc"},"paging":{"items":25},"projection":{"include":["id","recorded_date","site_id","original_file_name"]}}
                '@
                }
                Write-Information "Filter: $filter"

                if ($null -eq $workbench_url) {
                  $workbench_url = "http://localhost:3000"
                }
                Write-Information "Workbench URL: $workbench_url"

                # end templated values


                # log in
                $headers = @{}

                if ($null -eq $auth_token) {
                  $credentials = Get-Credential -Message "Provide credentials for logging into $workbench_url" -UserName $user_name
                  $json_credentials = $credentials.GetNetworkCredential() | ForEach-Object{ @{"email"=$_.UserName;"password"=$_.Password}} | ConvertTo-Json

                  Write-Information "Logging in to workbench $workbench"


                    $auth_reponse = Invoke-WebRequest -Uri "$workbench_url/security" -Method POST -Body $json_credentials -Headers $headers -SkipHttpErrorCheck
                    if ($auth_reponse.BaseResponse.IsSuccessStatusCode) {
                      $auth_token = ($auth_reponse.Content | ConvertFrom-Json).data.auth_token
                    }
                    else {
                      Write-Error ("Login attempt failed ($($auth_reponse.StatusCode)) " + $auth_reponse.Content)
                      exit 1
                    }

                }
                else {
                  # we have auth token, nothing else to do?
                }
                $headers["Authorization"] = "Token token=`"$auth_token`""

                $json_headers = $headers.Clone()
                $json_headers["Content-Type"] = "application/json"
                $json_headers["Accept"] = "application/json"

                Write-Information "Downloading recordings"

                # start paging through results!
                $script:current_page = 0
                $script:max_page = $null
                function Get-NextPage() {
                  $script:current_page += 1
                  if (($null -ne $script:max_page) -and ($script:current_page -gt $script:max_page)) {
                    Write-Information "Reached end of pages"
                    return $null
                  }

                  Write-Information "Getting page $script:current_page"

                  $response = Invoke-RestMethod -Uri "$workbench_url/audio_recordings/filter?page=$script:current_page" `
                    -Method POST -Body $filter -Headers $json_headers -SkipHttpErrorCheck -StatusCodeVariable "status_code"

                  if ($status_code -ne 200) {
                    Write-Error ("Failed to get recordings ($status_code): ")
                    $response | Format-List | out-string | Write-Error
                    exit 1
                  }

                  $script:max_page = $response.meta.paging.max_page

                  Write-Information "Got page $script:current_page of $script:max_page, $($response.data.Count) recordings in this page."

                  return $response.data
                }

                $sites = @{}
                function Get-SiteName($id) {
                  if ($sites.ContainsKey($id)) {
                    return $sites[$id]
                  }

                  $response = Invoke-RestMethod -Uri "$workbench_url/sites/$id"  -Headers $headers -StatusCodeVariable "site_status_code"
                  if ($site_status_code -ne 200) {
                    Write-Warning ("Failed to get site name for site id $site_id ")
                    return $id
                  }


                  $name = $response.data.name
                  # Safe folder names
                  $name = $name -replace '[^-_A-Za-z0-9]',''
                  $sites[$id] = $name
                  return $name
                }

                # make output directory
                New-Item -ItemType Directory -Path $target -Force | Out-Null

                while ($null -ne ($recordings = Get-NextPage )) {
                  foreach($recording in $recordings) {
                    Write-Information "Downloading recording $($recording.id)"
                    $recording | write-output

                    $date = (Get-Date $recording.recorded_date).ToString("yyyyMMddTHHmmssZ")
                    $site_id = $recording.site_id
                    $audio_recording_id = $recording.id
                    $extension = [System.IO.Path]::GetExtension($recording.original_file_name)

                    $site_id = $recording.site_id
                    $safe_site_name = Get-SiteName $site_id
                    $sub_folder = Join-Path $target "${site_id}_$safe_site_name"
                    New-Item -ItemType Directory -Path $sub_folder -Force | Out-Null

                    $path = Join-Path $sub_folder "${date}_${site_id}_${audio_recording_id}${extension}"

                    Invoke-RestMethod -Uri "$workbench_url/audio_recordings/$audio_recording_id/original" `
                      -Method GET -Headers $headers -StatusCodeVariable "download_status_code" -OutFile $path `
                      -Resume

                      Write-Information "Downloaded recording $audio_recording_id to $path"
                  }
                }

                Write-Information "Done!"
    get:
      summary: Gets a templated script which can download original audio files
      tags:
      - AudioRecordings
      - Downloader
      - audio_recordings
      security:
      - basic_auth_with_token: []
      parameters: []
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: templated script
          content:
            text/plain:
              example: |
                #!/usr/bin/env pwsh

                # Requires -Version 7
                <#

                .DESCRIPTION

                  Downloads a set of recordings from an acoustic workbench.
                  Will work on Windows, Linux, or MacOSX with PowerShell Core.
                  See https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.1
                  for installation instructions.

                  Version 4.7.1 from http://localhost:3000.

                .EXAMPLE

                On Windows:

                PS> ./download_audio_files.ps1

                .EXAMPLE

                On Linux/MacOSX:

                $ chmod +x download_audio_files.ps1
                $ ./download_audio_files.ps1

                #>

                param(
                  # Where to download the recordings. Defaults to the present working directory if not specified.
                  $target = $null,
                  # The username to use to login to the workbench. This value's default value is templated when the script is generated.
                  $user_name = $null,
                  # The auth token to use to login to the workbench. You only need to supply an auth token if you want to log in without a password.
                  $auth_token = $null,
                  # The filter to use to select audio recordings to download. This value's default value is templated when the script is generated.
                  # See https://github.com/QutEcoacoustics/baw-server/wiki/API:-Filtering for details on valid filters. This argument
                  # should be a valid JSON encoded string.
                  $filter = $null,
                  # The acoustic workbench instance to use. This value's default value is templated when the script is generated.
                  $workbench_url = $null
                )

                $InformationPreference = 'Continue'

                Write-Information "Acoustic Workbench downloader script version 4.7.1"

                if ($null -eq $target) {
                  $target = $pwd
                }

                # templated values from script generation
                if ($null -eq $auth_token) {
                  if ($null -eq $user_name) {
                    $user_name = "Admin"
                    if (-not $user_name) {
                      Write-Error "user_name is required"
                      exit 1
                    }
                  }
                  Write-Information "User name: $user_name"
                }
                else {
                  Write-Information "Using supplied auth token $auth_token"
                }

                if ($null -eq $filter) {
                  $filter = @'
                {"sorting":{"order_by":"recorded_date","direction":"desc"},"paging":{"items":25},"projection":{"include":["id","recorded_date","site_id","original_file_name"]}}
                '@
                }
                Write-Information "Filter: $filter"

                if ($null -eq $workbench_url) {
                  $workbench_url = "http://localhost:3000"
                }
                Write-Information "Workbench URL: $workbench_url"

                # end templated values


                # log in
                $headers = @{}

                if ($null -eq $auth_token) {
                  $credentials = Get-Credential -Message "Provide credentials for logging into $workbench_url" -UserName $user_name
                  $json_credentials = $credentials.GetNetworkCredential() | ForEach-Object{ @{"email"=$_.UserName;"password"=$_.Password}} | ConvertTo-Json

                  Write-Information "Logging in to workbench $workbench"


                    $auth_reponse = Invoke-WebRequest -Uri "$workbench_url/security" -Method POST -Body $json_credentials -Headers $headers -SkipHttpErrorCheck
                    if ($auth_reponse.BaseResponse.IsSuccessStatusCode) {
                      $auth_token = ($auth_reponse.Content | ConvertFrom-Json).data.auth_token
                    }
                    else {
                      Write-Error ("Login attempt failed ($($auth_reponse.StatusCode)) " + $auth_reponse.Content)
                      exit 1
                    }

                }
                else {
                  # we have auth token, nothing else to do?
                }
                $headers["Authorization"] = "Token token=`"$auth_token`""

                $json_headers = $headers.Clone()
                $json_headers["Content-Type"] = "application/json"
                $json_headers["Accept"] = "application/json"

                Write-Information "Downloading recordings"

                # start paging through results!
                $script:current_page = 0
                $script:max_page = $null
                function Get-NextPage() {
                  $script:current_page += 1
                  if (($null -ne $script:max_page) -and ($script:current_page -gt $script:max_page)) {
                    Write-Information "Reached end of pages"
                    return $null
                  }

                  Write-Information "Getting page $script:current_page"

                  $response = Invoke-RestMethod -Uri "$workbench_url/audio_recordings/filter?page=$script:current_page" `
                    -Method POST -Body $filter -Headers $json_headers -SkipHttpErrorCheck -StatusCodeVariable "status_code"

                  if ($status_code -ne 200) {
                    Write-Error ("Failed to get recordings ($status_code): ")
                    $response | Format-List | out-string | Write-Error
                    exit 1
                  }

                  $script:max_page = $response.meta.paging.max_page

                  Write-Information "Got page $script:current_page of $script:max_page, $($response.data.Count) recordings in this page."

                  return $response.data
                }

                $sites = @{}
                function Get-SiteName($id) {
                  if ($sites.ContainsKey($id)) {
                    return $sites[$id]
                  }

                  $response = Invoke-RestMethod -Uri "$workbench_url/sites/$id"  -Headers $headers -StatusCodeVariable "site_status_code"
                  if ($site_status_code -ne 200) {
                    Write-Warning ("Failed to get site name for site id $site_id ")
                    return $id
                  }


                  $name = $response.data.name
                  # Safe folder names
                  $name = $name -replace '[^-_A-Za-z0-9]',''
                  $sites[$id] = $name
                  return $name
                }

                # make output directory
                New-Item -ItemType Directory -Path $target -Force | Out-Null

                while ($null -ne ($recordings = Get-NextPage )) {
                  foreach($recording in $recordings) {
                    Write-Information "Downloading recording $($recording.id)"
                    $recording | write-output

                    $date = (Get-Date $recording.recorded_date).ToString("yyyyMMddTHHmmssZ")
                    $site_id = $recording.site_id
                    $audio_recording_id = $recording.id
                    $extension = [System.IO.Path]::GetExtension($recording.original_file_name)

                    $site_id = $recording.site_id
                    $safe_site_name = Get-SiteName $site_id
                    $sub_folder = Join-Path $target "${site_id}_$safe_site_name"
                    New-Item -ItemType Directory -Path $sub_folder -Force | Out-Null

                    $path = Join-Path $sub_folder "${date}_${site_id}_${audio_recording_id}${extension}"

                    Invoke-RestMethod -Uri "$workbench_url/audio_recordings/$audio_recording_id/original" `
                      -Method GET -Headers $headers -StatusCodeVariable "download_status_code" -OutFile $path `
                      -Resume

                      Write-Information "Downloaded recording $audio_recording_id to $path"
                  }
                }

                Write-Information "Done!"
  "/audio_recordings":
    get:
      summary: list audio recordings
      security:
      - basic_auth_with_token: []
      parameters: []
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: recorded_date
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/audio_recordings?direction=desc&items=25&order_by=recorded_date&page=1
                    previous: 
                    next: 
                data:
                - id: 9
                  uuid: a97f0918-4038-4ff6-83bd-7fd64476bade
                  recorded_date: '2012-04-04T07:06:59.000Z'
                  site_id: 9
                  duration_seconds: 60000.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 36
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  notes:
                    test: note number 9
                  file_hash: SHA256::979obc10dhly4zy4rrr2m0edv77ae6fkk18mgtdti7l4kjhnzuima6gznzo5jjkl
                  uploader_id: 36
                  original_file_name: original name 9.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/audio_recording"
  "/audio_recordings/{id}":
    patch:
      summary: update audio recordings
      security:
      - basic_auth_with_token: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  uuid: 520d013f-6ad2-47b5-aa28-251861304c7f
                  duration_seconds: 66.0
                  updater_id: 1
                  id: 10
                  recorded_date: '2012-04-05T07:06:59.000Z'
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  data_length_bytes: 3800
                  uploader_id: 40
                  site_id: 10
                  media_type: audio/mpeg
                  file_hash: SHA256::10obs8iyvjsu6kyp74jz7r4bqipi0alfp835gt34flk7dzzj77iinej1lr97do8n
                  status: ready
                  notes:
                    test: note number 10
                  creator_id: 40
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  original_file_name: original name 10.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_recording"
    get:
      summary: show audio recordings
      security:
      - basic_auth_with_token: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 11
                  uuid: dba31567-8ce4-4d1f-8dae-7b0c98f286d7
                  uploader_id: 44
                  recorded_date: '2012-04-06T07:06:59.000Z'
                  site_id: 11
                  duration_seconds: 60000.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  file_hash: SHA256::11p7dujqu97zdux19isd1gep2ghlnwteuzuzyge0wus7k3vi55k4g8ni7l2lpts1
                  status: ready
                  notes:
                    test: note number 11
                  creator_id: 44
                  updater_id: 
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  original_file_name: original name 11.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
    put:
      summary: update audio recordings
      security:
      - basic_auth_with_token: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  uuid: de2a8b12-105a-4d71-aff0-b732a51885b6
                  duration_seconds: 66.0
                  updater_id: 1
                  id: 12
                  recorded_date: '2012-04-07T07:06:59.000Z'
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  data_length_bytes: 3800
                  uploader_id: 48
                  site_id: 12
                  media_type: audio/mpeg
                  file_hash: SHA256::12fhvfdhp7l7lkvon1o28hji482fm29lad9t9gszzcr9dfjjy941q9e689prqitz
                  status: ready
                  notes:
                    test: note number 12
                  creator_id: 48
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  original_file_name: original name 12.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_recording"
  "/audio_recordings/new":
    get:
      summary: new audio recordings
      security:
      - basic_auth_with_token: []
      parameters: []
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: .

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 
                  uuid: e3e5ce3a-3d17-4cd1-941a-1d74c53c4c44
                  uploader_id: 
                  recorded_date: 
                  site_id: 
                  duration_seconds: 
                  sample_rate_hertz: 
                  channels: 
                  bit_rate_bps: 
                  media_type: 
                  data_length_bytes: 
                  file_hash: 
                  status: new
                  notes: 
                  creator_id: 
                  updater_id: 
                  deleter_id: 
                  created_at: 
                  updated_at: 
                  deleted_at: 
                  original_file_name: 
  "/audio_recordings/filter":
    post:
      summary: filter audio recording
      security:
      - basic_auth_with_token: []
      parameters: []
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: recorded_date
                    direction: desc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/audio_recordings/filter?direction=desc&items=25&order_by=recorded_date&page=1
                    previous: 
                    next: 
                data:
                - id: 14
                  uuid: bbb787bd-8e76-46cb-a6fe-64aadab53486
                  recorded_date: '2012-04-09T07:06:59.000Z'
                  site_id: 14
                  duration_seconds: 60000.0
                  sample_rate_hertz: 44100
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  status: ready
                  created_at: '2020-01-02T03:04:05.677Z'
                  creator_id: 56
                  deleted_at: 
                  deleter_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  notes:
                    test: note number 14
                  file_hash: SHA256::14mjsnrpta89aotl9xmz7nu809tyyiyk5x9gl5y3fprier47wvt8frx46710a5y3
                  uploader_id: 56
                  original_file_name: original name 14.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/audio_recording"
  "/sites/{id}":
    put:
      summary: update site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: site name 16
                  description: site description 16
                  notes: note number 16
                  region_id: 
                  updater_id: 1
                  id: 15
                  creator_id: 59
                  deleter_id: 
                  deleted_at: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  project_ids:
                  - 15
                  location_obfuscated: false
                  custom_latitude: 46.526435
                  custom_longitude: 58.825293
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 16</p>\n"
                  description_html_tagline: site description 16
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    delete:
      summary: delete site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
    get:
      summary: show site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 17
                  name: site name 18
                  notes: note number 18
                  creator_id: 68
                  updater_id: 
                  deleter_id: 
                  deleted_at: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description: site description 18
                  region_id: 17
                  project_ids:
                  - 17
                  location_obfuscated: false
                  custom_latitude: 55.101294
                  custom_longitude: 104.375337
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 18</p>\n"
                  description_html_tagline: site description 18
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
    patch:
      summary: update site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: site name 20
                  description: site description 20
                  notes: note number 20
                  region_id: 
                  updater_id: 1
                  id: 18
                  creator_id: 72
                  deleter_id: 
                  deleted_at: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  project_ids:
                  - 18
                  location_obfuscated: false
                  custom_latitude: -37.25948
                  custom_longitude: -144.76369
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 20</p>\n"
                  description_html_tagline: site description 20
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
  "/sites/new":
    get:
      summary: new site
      security:
      - basic_auth_with_token: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 
                  name: 
                  notes: 
                  creator_id: 
                  updater_id: 
                  deleter_id: 
                  deleted_at: 
                  created_at: 
                  updated_at: 
                  description: 
                  region_id: 
                  longitude: 
                  latitude: 
                  image: 
                  tzinfo_tz: 
                  rails_tz: 
  "/sites":
    post:
      summary: create site
      security:
      - basic_auth_with_token: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 21
                  name: site name 23
                  notes: note number 23
                  creator_id: 1
                  updater_id: 
                  deleter_id: 
                  deleted_at: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description: site description 23
                  region_id: 
                  project_ids: []
                  location_obfuscated: true
                  custom_latitude: 
                  custom_longitude: 
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 23</p>\n"
                  description_html_tagline: site description 23
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    get:
      summary: list sites
      security:
      - basic_auth_with_token: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/sites?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 22
                  name: site name 24
                  description: site description 24
                  notes: note number 24
                  creator_id: 86
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 21
                  project_ids:
                  - 21
                  location_obfuscated: false
                  custom_latitude: 41.340532
                  custom_longitude: 157.251837
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 24</p>\n"
                  description_html_tagline: site description 24
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/sites/filter":
    post:
      summary: filter site
      security:
      - basic_auth_with_token: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/sites/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 23
                  name: site name 25
                  description: site description 25
                  notes: note number 25
                  creator_id: 90
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 22
                  project_ids:
                  - 22
                  location_obfuscated: false
                  custom_latitude: -15.867145
                  custom_longitude: 61.278029
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 25</p>\n"
                  description_html_tagline: site description 25
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/projects/{project_id}/sites/{site_id}/audio_recordings/new":
    get:
      summary: new audio recordings
      security:
      - basic_auth_with_token: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: site_id
        in: path
        description: site_id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: .

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 
                  uuid: 6af84f0d-6c37-4457-a670-e305dfedbf21
                  uploader_id: 
                  recorded_date: 
                  site_id: 
                  duration_seconds: 
                  sample_rate_hertz: 
                  channels: 
                  bit_rate_bps: 
                  media_type: 
                  data_length_bytes: 
                  file_hash: 
                  status: new
                  notes: 
                  creator_id: 
                  updater_id: 
                  deleter_id: 
                  created_at: 
                  updated_at: 
                  deleted_at: 
                  original_file_name: 
  "/projects/{project_id}/sites/{site_id}/audio_recordings":
    post:
      summary: create audio recordings
      security:
      - basic_auth_with_token: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: site_id
        in: path
        description: site_id
        required: true
        schema:
          type: integer
      tags:
      - audio_recordings
      description: |2

        Users that can invoke this route: `Admin`, `Harvester`.<br />
        Users that can't: `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 25
                  uuid: 276acc5e-dbb2-4580-a413-c043fba6ae79
                  uploader_id: 1
                  recorded_date: '2012-04-20T07:06:59.000Z'
                  site_id: 25
                  duration_seconds: 60000.0
                  sample_rate_hertz: 22050
                  channels: 2
                  bit_rate_bps: 64000
                  media_type: audio/mpeg
                  data_length_bytes: 3800
                  file_hash: SHA256::25hl61gfes49u4jnuuxgz9smlqflpi4engne80gcki6nzbq4j2igsq3mxwjs0fhu
                  status: new
                  notes:
                    test: note number 25
                  creator_id: 1
                  updater_id: 
                  deleter_id: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleted_at: 
                  original_file_name: original name 25.mp3
                  recorded_date_timezone: 
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/audio_recording"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/audio_recording"
  "/sites/orphans/filter":
    post:
      summary: filter site
      security:
      - basic_auth_with_token: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/sites/orphans?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 28
                  name: site name 30
                  description: site description 30
                  notes: note number 30
                  creator_id: 108
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 
                  project_ids: []
                  location_obfuscated: true
                  custom_latitude: 
                  custom_longitude: 
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 30</p>\n"
                  description_html_tagline: site description 30
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/sites/orphans":
    get:
      summary: list sites
      security:
      - basic_auth_with_token: []
      parameters: []
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`.<br />
        Users that can't: `Harvester`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/sites/orphans?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 30
                  name: site name 32
                  description: site description 32
                  notes: note number 32
                  creator_id: 113
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 
                  project_ids: []
                  location_obfuscated: true
                  custom_latitude: 
                  custom_longitude: 
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 32</p>\n"
                  description_html_tagline: site description 32
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/projects/{project_id}/sites/filter":
    post:
      summary: filter site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/projects/27/sites/filter?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 31
                  name: site name 33
                  description: site description 33
                  notes: note number 33
                  creator_id: 114
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 27
                  project_ids:
                  - 27
                  location_obfuscated: false
                  custom_latitude: -7.688711
                  custom_longitude: 89.685757
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 33</p>\n"
                  description_html_tagline: site description 33
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
  "/projects/{project_id}/sites/new":
    get:
      summary: new site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 
                  name: 
                  notes: 
                  creator_id: 
                  updater_id: 
                  deleter_id: 
                  deleted_at: 
                  created_at: 
                  updated_at: 
                  description: 
                  region_id: 
                  longitude: 
                  latitude: 
                  image: 
                  tzinfo_tz: 
                  rails_tz: 
  "/projects/{project_id}/sites/{id}":
    put:
      summary: update site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: site name 36
                  description: site description 36
                  notes: note number 36
                  region_id: 
                  updater_id: 1
                  id: 33
                  creator_id: 122
                  deleter_id: 
                  deleted_at: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  project_ids:
                  - 29
                  location_obfuscated: false
                  custom_latitude: -72.318141
                  custom_longitude: -129.314017
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 36</p>\n"
                  description_html_tagline: site description 36
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    get:
      summary: show site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  id: 34
                  name: site name 37
                  notes: note number 37
                  creator_id: 127
                  updater_id: 
                  deleter_id: 
                  deleted_at: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description: site description 37
                  region_id: 30
                  project_ids:
                  - 30
                  location_obfuscated: false
                  custom_latitude: -29.03597
                  custom_longitude: -75.286061
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 37</p>\n"
                  description_html_tagline: site description 37
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
    patch:
      summary: update site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                data:
                  name: site name 39
                  description: site description 39
                  notes: note number 39
                  region_id: 
                  updater_id: 1
                  id: 35
                  creator_id: 131
                  deleter_id: 
                  deleted_at: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  project_ids:
                  - 31
                  location_obfuscated: false
                  custom_latitude: 83.231066
                  custom_longitude: 81.688189
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 39</p>\n"
                  description_html_tagline: site description 39
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    delete:
      summary: delete site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '204':
          description: successful
  "/projects/{project_id}/sites":
    post:
      summary: create site
      security:
      - basic_auth_with_token: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 201
                  message: Created
                data:
                  id: 38
                  name: site name 42
                  notes: note number 42
                  creator_id: 1
                  updater_id: 
                  deleter_id: 
                  deleted_at: 
                  created_at: '2020-01-02T03:04:05.677Z'
                  updated_at: '2020-01-02T03:04:05.677Z'
                  description: site description 42
                  region_id: 
                  project_ids:
                  - 33
                  location_obfuscated: false
                  custom_latitude: 
                  custom_longitude: 
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 42</p>\n"
                  description_html_tagline: site description 42
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      "$ref": "#/components/schemas/site"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/site"
    get:
      summary: list sites
      security:
      - basic_auth_with_token: []
      parameters:
      - name: project_id
        in: path
        description: project_id
        required: true
        schema:
          type: integer
      tags:
      - sites
      description: |2

        Users that can invoke this route: `Admin`, `owner user`, `writer`, `reader`, `no_access`, `anyone`.<br />
        Users that can't: `Harvester`.

        Note: accessing a list/index/filter endpoint may return no results due to project permissions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                meta:
                  status: 200
                  message: OK
                  sorting:
                    order_by: name
                    direction: asc
                  paging:
                    page: 1
                    items: 25
                    total: 1
                    max_page: 1
                    current: http://localhost:3000/projects/34/sites?direction=asc&items=25&order_by=name&page=1
                    previous: 
                    next: 
                data:
                - id: 39
                  name: site name 43
                  description: site description 43
                  notes: note number 43
                  creator_id: 145
                  created_at: '2020-01-02T03:04:05.677Z'
                  updater_id: 
                  updated_at: '2020-01-02T03:04:05.677Z'
                  deleter_id: 
                  deleted_at: 
                  region_id: 34
                  project_ids:
                  - 34
                  location_obfuscated: false
                  custom_latitude: 71.919082
                  custom_longitude: 150.471423
                  timezone_information: 
                  image_urls:
                  - size: extralarge
                    url: "/images/site/site_span4.png"
                    width: 300
                    height: 300
                  - size: large
                    url: "/images/site/site_span3.png"
                    width: 220
                    height: 220
                  - size: medium
                    url: "/images/site/site_span2.png"
                    width: 140
                    height: 140
                  - size: small
                    url: "/images/site/site_span1.png"
                    width: 60
                    height: 60
                  - size: tiny
                    url: "/images/site/site_spanhalf.png"
                    width: 30
                    height: 30
                  description_html: "<p>site description 43</p>\n"
                  description_html_tagline: site description 43
              schema:
                allOf:
                - "$ref": "#/components/schemas/standard_response"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        "$ref": "#/components/schemas/site"
servers:
- url: "{protocol}://{authority}"
  variables:
    authority:
      default: localhost:3000
    protocol:
      enum:
      - http
      - https
      default: http
components:
  securitySchemes:
    basic_auth_with_token:
      type: http
      scheme: basic
    auth_token_query_string:
      type: apiKey
      name: auth_token
      in: query_string
  schemas:
    id:
      type: integer
      minimum: 0
      readOnly: true
    nullableId:
      type:
      - integer
      - 'null'
      minimum: 0
      readOnly: true
    timezone_information:
      anyOf:
      - type: object
        properties:
          identifier_alt:
            type:
            - string
            - 'null'
          identifier:
            type: string
          friendly_identifier:
            type: string
          utc_offset:
            type: string
          utc_total_offset:
            type: integer
      - type: 'null'
    image_urls:
      type: array
      items:
        type: object
        properties:
          size:
            type: string
          url:
            type: string
            format: URI
          width:
            type: integer
            nullable: true
          height:
            type: integer
            nullable: true
    permission_levels:
      type:
      - string
      - 'null'
      enum:
      - Owner
      - Writer
      - Reader
      - 
    meta:
      type: object
    meta_error:
      type: object
      properties:
        error:
          type: object
        required:
        - error
    standard_response:
      type: object
      additionalProperties: false
      properties:
        meta:
          "$ref": "#/components/schemas/meta"
        data:
          oneOf:
          - type: array
          - type: object
      required:
      - meta
      - data
    error_response:
      type: object
      additionalProperties: false
      properties:
        meta:
          allOf:
          - "$ref": "#/components/schemas/meta"
          - "$ref": "#/components/schemas/meta_error"
        data:
          type: 'null'
      required:
      - meta
      - data
    cms_blob:
      type: object
      required:
      - id
      - site_id
      - layout_id
      - parent_id
      - target_page_id
      - label
      - slug
      - full_path
      - content
      - position
      - children_count
      - is_published
      - created_at
      - updated_at
      - children
      properties:
        id:
          "$ref": "#/components/schemas/id"
        site_id:
          "$ref": "#/components/schemas/id"
        layout_id:
          "$ref": "#/components/schemas/id"
        parent_id:
          "$ref": "#/components/schemas/nullableId"
        target_page_id:
          "$ref": "#/components/schemas/nullableId"
        label:
          type: string
        slug:
          type: string
        full_path:
          type: string
          format: uri-reference
        content:
          type: string
          format: html
        position:
          type: integer
        children_count:
          type: integer
        is_published:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        children:
          type: array
          additionalItems: true
          items:
            type: object
            properties:
              label:
                type: string
              full_path:
                type: string
                format: uri-reference
            additionalProperties: false
      additionalProperties: false
    stats:
      type: object
      required:
      - summary
      - recent
      properties:
        summary:
          type: object
          properties:
            users_online:
              type: integer
            users_total:
              type: integer
            online_window_start:
              type: string
              format: date-time
              readOnly: true
            projects_total:
              type: integer
            regions_total:
              type: integer
            sites_total:
              type: integer
            annotations_total:
              type: integer
            annotations_total_duration:
              type: number
            annotations_recent:
              type: integer
            audio_recordings_total:
              type: integer
            audio_recordings_recent:
              type: integer
            audio_recordings_total_duration:
              type: number
            audio_recordings_total_size:
              type: integer
            tags_total:
              type: integer
            tags_applied_total:
              type: integer
            tags_applied_unique_total:
              type: integer
        recent:
          type: object
          properties:
            audio_recording_ids:
              type: array
              items:
                "$ref": "#/components/schemas/id"
            audio_event_ids:
              type: array
              items:
                "$ref": "#/components/schemas/id"
      additionalProperties: false
    project:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        notes:
          type: string
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        site_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: false
        region_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        owner_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
            readOnly: true
          readOnly: true
        image_urls:
          "$ref": "#/components/schemas/image_urls"
        access_level:
          "$ref": "#/components/schemas/permission_levels"
        allow_original_download:
          "$ref": "#/components/schemas/permission_levels"
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - notes
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - owner_ids
      - site_ids
      - region_ids
      - image_urls
      - allow_original_download
    analysis_job:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        annotation_name:
          type:
          - string
          - 'null'
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        custom_settings:
          type: string
        script_id:
          "$ref": "#/components/schemas/id"
        saved_search_id:
          "$ref": "#/components/schemas/id"
        started_at:
          type:
          - 'null'
          - date
          readOnly: true
        overall_status:
          type: string
          enum:
          - before_save
          - new
          - preparing
          - processing
          - completed
          - suspended
          readOnly: true
        overall_status_modified_at:
          type:
          - 'null'
          - date
          readOnly: true
        overall_progress:
          type: object
          readOnly: true
        overall_progress_modified_at:
          type:
          - 'null'
          - date
          readOnly: true
        overall_count:
          type: integer
          readOnly: true
        overall_duration_seconds:
          type: number
          readOnly: true
        overall_data_length_bytes:
          type: integer
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - custom_settings
      - script_id
      - saved_search_id
      - started_at
      - overall_status
      - overall_status_modified_at
      - overall_progress
      - overall_progress_modified_at
      - overall_count
      - overall_duration_seconds
      - overall_data_length_bytes
    bookmark:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        audio_recording_id:
          "$ref": "#/components/schemas/id"
        name:
          type: string
        category:
          type: string
        offset_seconds:
          type: number
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - audio_recording_id
      - name
      - category
      - offset_seconds
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
    dataset:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - description
      - created_at
      - creator_id
      - updated_at
      - updater_id
    saved_search:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        analysis_job_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
        project_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        stored_query:
          type: object
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - stored_query
      - creator_id
      - created_at
      - deleter_id
      - deleted_at
    script:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        group_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        analysis_identifier:
          type: string
        executable_settings:
          type: string
        executable_settings_media_type:
          type: string
        version:
          type: number
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_last_version:
          type: boolean
          readOnly: true
        is_first_version:
          type: boolean
          readOnly: true
        analysis_action_params:
          type: object
      required:
      - id
      - group_id
      - name
      - description
      - analysis_identifier
      - executable_settings_media_type
      - version
      - created_at
      - creator_id
      - is_last_version
      - is_first_version
      - analysis_action_params
    site:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        notes:
          type: string
        project_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
        location_obfuscated:
          type: boolean
        custom_latitude:
          type:
          - number
          - 'null'
          minimum: -90
          maximum: 90
        custom_longitude:
          type:
          - number
          - 'null'
          minimum: -180
          maximum: 180
        timezone_information:
          "$ref": "#/components/schemas/timezone_information"
        image_urls:
          "$ref": "#/components/schemas/image_urls"
        region_id:
          "$ref": "#/components/schemas/nullableId"
      required:
      - id
      - name
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - notes
      - project_ids
      - location_obfuscated
      - custom_latitude
      - custom_longitude
      - timezone_information
      - image_urls
      - region_id
    region:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        name:
          type: string
        description:
          type:
          - string
          - 'null'
        description_html:
          type:
          - string
          - 'null'
          readOnly: true
        description_html_tagline:
          type:
          - string
          - 'null'
          readOnly: true
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        notes:
          type: object
        project_id:
          "$ref": "#/components/schemas/id"
        site_ids:
          type: array
          items:
            "$ref": "#/components/schemas/id"
        image_urls:
          "$ref": "#/components/schemas/image_urls"
        image:
          type: string
          format: binary
          writeOnly: true
          nullable: true
      required:
      - id
      - name
      - notes
      - project_id
      - description
      - description_html
      - description_html_tagline
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - site_ids
      - image_urls
    audio_recording:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        site_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        duration_seconds:
          type: number
        sample_rate_hertz:
          type: number
        channels:
          type: number
        bit_rate_bps:
          type: number
        media_type:
          type: string
        data_length_bytes:
          type: number
        status:
          type: string
        creator_id:
          "$ref": "#/components/schemas/id"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updater_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        updated_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        deleter_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: true
        deleted_at:
          type:
          - 'null'
          - string
          format: date-time
          readOnly: true
        recorded_date:
          type: string
          format: date-time
          readOnly: false
        file_hash:
          type: string
        notes:
          type: object
        recorded_date_timezone:
          type:
          - 'null'
          - string
        uploader_id:
          "$ref": "#/components/schemas/nullableId"
          readOnly: false
        original_file_name:
          type: string
      required:
      - id
      - uuid
      - site_id
      - duration_seconds
      - sample_rate_hertz
      - channels
      - bit_rate_bps
      - media_type
      - data_length_bytes
      - status
      - creator_id
      - created_at
      - updater_id
      - updated_at
      - deleter_id
      - deleted_at
      - recorded_date
      - file_hash
      - notes
      - uploader_id
      - original_file_name
