%h1 Statistics

- content_for :title, 'Statistics'

.row-fluid
  .span12
    %p= "#{number_with_delimiter(@status_info[:users_online])} #{@status_info[:users_online] == 1 ? 'user': 'users'} online of #{number_with_delimiter(@status_info[:users_total])} registered"
    %p= "#{number_with_delimiter(@status_info[:tags_total])} unique tags"

.row-fluid
  .span6
    %h2 Annotations
    %p= "#{number_with_delimiter(@status_info[:annotations_recent])} new #{@status_info[:annotations_recent] == 1 ? 'annotation': 'annotations'} in last month"
    %p= "#{number_with_delimiter(@status_info[:annotations_total])} #{@status_info[:annotations_total] == 1 ? 'annotation': 'annotations'}"
    %p= "#{distance_of_time(@status_info[:annotations_total_duration])} overall annotation duration"
    %p= "#{number_with_delimiter(@status_info[:tags_applied_total])} #{@status_info[:tags_applied_total] == 1 ? 'tag': 'tags'} attached to annotations"

  .span6
    %h2 Recordings
    %p= "#{number_with_delimiter(@status_info[:audio_recording_recent])} new audio #{@status_info[:audio_recording_recent] == 1 ? 'recording': 'recordings'} in last month"
    %p= "#{number_with_delimiter(@status_info[:audio_recording_total])} audio #{@status_info[:audio_recording_total] == 1 ? 'recording': 'recordings'}"
    %p= "#{distance_of_time(@status_info[:audio_recording_total_duration])} overall audio recording duration"
    %p= "#{number_to_human_size(@status_info[:audio_recording_total_size])} overall audio recording file size"

%h2 Recent Annotations

.row-fluid
  .span12
    - if @recent_audio_events.empty?
      = 'No recent annotations.'
    - else
      %table.table.table-striped(data-provides='rowlink')

        %tr
          %th Tag
          - unless current_user.blank?
            %th Site
          %th Last Updated
          - unless current_user.blank?
            %th User
            %th

        - @recent_audio_events.each do |audio_event|
          %tr
            - tags = audio_event.tags.order(:type_of_tag, :text).to_a
            - tags_text = tags.empty? ? '(none)' : tags.map{ |item| item.text}.join(', ')
            - priority_tag = Tag.get_priority_tag(tags) || Tag.new(text:'(none)')
            - unless current_user.blank?
              - site_link = "/projects/#{audio_event.audio_recording.site.projects[0].id}/sites/#{audio_event.audio_recording.site.id}"
              - offset_start_round_30_sec = (audio_event.start_time_seconds / 30).floor * 30
              - offset_end_round_30_sec = (audio_event.end_time_seconds / 30).floor * 30
              - offset_end_round_30_sec += (offset_start_round_30_sec == offset_end_round_30_sec ? 30 : 0 )
              - audio_link = "/listen/#{audio_event.audio_recording.id}?start=#{offset_start_round_30_sec}&end=#{offset_end_round_30_sec}"
              - annotation_link = "library/#{audio_event.audio_recording_id}/audio_events/#{audio_event.id}"
            - if current_user.blank?
              %td{title: tags_text}= priority_tag.text
            - else
              %td{title: tags_text}= link_to priority_tag.text, audio_link, target: '_self'
            - unless current_user.blank?
              %td= audio_event.audio_recording.site.name
            %td{title: audio_event.updated_at}= distance_of_time_in_words(Time.zone.now, audio_event.updated_at, nil, {vague: true})+ ' ago'
            - unless current_user.blank?
              %td= audio_event.updater.user_name
              %td.nolink
                = link_to audio_link, target: '_self', class: 'btn btn-mini' do
                  %i{class: 'fa fa-play'}
                  Audio
                = link_to user_account_path(audio_event.updater), class: 'btn btn-mini' do
                  %i{class: 'fa fa-user'}
                  User
                = link_to annotation_link, class: 'btn btn-mini' do
                  %i{class: 'fa fa-dot-circle-o'}
                  Annotation
                = link_to site_link, target: '_self', class: 'btn btn-mini' do
                  %i{class: 'fa fa-map-marker'}
                  Site

%h2 Recent Audio Recordings

.row-fluid
  .span12
    - if @recent_audio_recordings.empty?
      = 'No recent audio recordings.'
    - else
      %table.table.table-striped(data-provides='rowlink')

        %tr
          - unless current_user.blank?
            %th Site
          %th Duration
          %th Uploaded
          - unless current_user.blank?
            %th

        - @recent_audio_recordings.each do |audio_recording|
          %tr
            - unless current_user.blank?
              - audio_link = "/listen/#{audio_recording.id}"
              - site_link = "/projects/#{audio_recording.site.projects[0].id}/sites/#{audio_recording.site.id}"
            - unless current_user.blank?
              %td= link_to audio_recording.site.name, audio_link, target: '_self'
            %td{title: "#{audio_recording.duration_seconds.to_s} seconds"}= distance_of_time(audio_recording.duration_seconds)
            %td{title: audio_recording.created_at}= distance_of_time_in_words(Time.zone.now, audio_recording.created_at, nil, {vague: true})+ ' ago'
            - unless current_user.blank?
              %td.nolink
                = link_to audio_link, target: '_self', class: 'btn btn-mini' do
                  %i{class: 'fa fa-play'}
                  Audio
                = link_to site_link, target: '_self', class: 'btn btn-mini' do
                  %i{class: 'fa fa-map-marker'}
                  Site

