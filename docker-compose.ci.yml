# Docker Compose override for CI environments
# This file should be used with the main docker-compose.yml file:
#   docker-compose -f docker-compose.yml -f docker-compose.ci.yml up
# 
# It modifies the base configuration to:
# - Use pre-built images instead of build contexts
# - Replace bind mounts with volumes to avoid permission issues
# - Configure services for test environment

services:
  # Override development services to not start in CI (but keep them defined)
  upload:
    deploy:
      replicas: 0
  
  workers:
    deploy:
      replicas: 0
    
  scheduler:
    deploy:
      replicas: 0

  # Override workers_test to use pre-built image and volumes
  workers_test:
    image: ${CI_IMAGE:-baw-server:ci}
    build: null  # Remove build context
    user: root  # Run as root in CI to avoid volume permission issues
    volumes:
      - test-data:/data/test
      # Remove bind mount of source code

  # Override scheduler_test to use pre-built image and volumes  
  scheduler_test:
    image: ${CI_IMAGE:-baw-server:ci}
    build: null  # Remove build context
    user: root  # Run as root in CI to avoid volume permission issues
    volumes:
      - test-data:/data/test
      # Remove bind mount of source code

  # Override web service for CI testing
  web:
    image: ${CI_IMAGE:-baw-server:ci}
    build: null  # Remove build context
    command: sleep infinity
    user: root  # Run as root in CI to avoid volume permission issues
    environment:
      RAILS_ENV: test
      MIGRATE_DB: "false"
    depends_on:
      - db
      - redis
      - upload_test
      - workers_test
      - scheduler_test
      - analysis_test
    volumes:
      - test-data:/data/test
      # Remove bind mount of source code

  # Override upload_test to use volume instead of bind mount
  upload_test:
    volumes:
      - type: bind
        source: ./provision/upload/config
        target: /var/lib/sftpgo
      - test-data:/data/test

  # Override analysis_test to use volume instead of bind mount
  analysis_test:
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - test-data:/data/test

volumes:
  test-data: null